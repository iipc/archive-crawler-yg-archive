{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"Michael Stack","from":"Michael Stack &lt;stack@...&gt;","replyTo":"LIST","senderId":"JuRMbSOQMN1_yxhD-nRk9Wp8NZGpjTd3ADTO3fJVcpbPN1fCpXofXD_ZnImLkidGBQJ8JiCHj3SdKOa6xdZ5i9aiMbTfpxRL","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Heritrix and character encoding.","postDate":"1078251139","msgId":283,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwNDRDRTgzLjIwMjA3MDJAYXJjaGl2ZS5vcmc+"},"prevInTopic":0,"nextInTopic":0,"prevInTime":282,"nextInTime":284,"topicId":283,"numMessagesInTopic":1,"msgSnippet":"I m working on character encodings in heritrix. I made a proposal for addressing our current blindness for other than single-byte character sets in ","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 79285 invoked from network); 2 Mar 2004 18:19:17 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m11.grp.scd.yahoo.com with QMQP; 2 Mar 2004 18:19:17 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (209.237.232.202)\n  by mta2.grp.scd.yahoo.com with SMTP; 2 Mar 2004 18:19:17 -0000\r\nReceived: (qmail 23815 invoked by uid 100); 2 Mar 2004 18:15:02 -0000\r\nReceived: from b116-dyn-60.archive.org (HELO archive.org) (stack@...@209.237.240.60)\n  by mail-dev.archive.org with SMTP; 2 Mar 2004 18:15:02 -0000\r\nMessage-ID: &lt;4044CE83.2020702@...&gt;\r\nDate: Tue, 02 Mar 2004 10:12:19 -0800\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.5) Gecko/20031107 Debian/1.5-3\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=-0.6 required=6.0 tests=AWL autolearn=ham version=2.63\r\nX-eGroups-Remote-IP: 209.237.232.202\r\nFrom: Michael Stack &lt;stack@...&gt;\r\nSubject: Heritrix and character encoding.\r\nX-Yahoo-Group-Post: member; u=168599281\r\n\r\nI&#39;m working on character encodings in heritrix. I made a proposal for \naddressing our current blindness for other than single-byte character \nsets in \nhttps://sourceforge.net/tracker/index.php?func=detail&aid=896878&group_id=73833&atid=539099\nbut it was suggested that the proposal might benefit from a broadcast to \nthis list.\n\nFirst I discuss how heritrix currently works outlining the current \nproblem and then I follow with a proposal. Feedback, questions, or \nsuggestions are all appreciated.\n\n\nTHE PROBLEM:\n\nHeritrix has fetchers to get content: e.g. it has an http fetcher. The \nfetchers save the fetched content off in file-backed buffers. Then, per \nextractor mentioned in the URI processing chain, a check is done against \nthe fetched content mimetype (Extractors are usually targeted at one \nmimetype only). If there is a match, the matched extractor asks to have \nthe content played back, often as a CharSequence so it can regex over \nthe fetched content. Other times, such as in the writing of ARC files, \nextractors want to replay the stream as raw, unadulterated bytes.\n\nCurrently when extractors want a CharSequence, the base assumption is \nthat the stream is single-byte. Regex&#39;s going against a multi- or \nvariable-byte stream assumed single-byte will give odd results. For \nexample, a regex may find byte 0x3C -- i.e. an &#39;&lt;&#39; -- and think it an \nangle bracket when in fact 0x3c might be byte 2 of 0x4E3C, the CJK \nIdeograph for a &#39;bowl of food&#39;, if the underlying stream were unicode.\n\n\nTHE PROPOSAL:\n\nHere is the proposal, but first let me make an observation with the \nfollowing paragraph.\n\nThere are various locations where the fetched content charset/character \nencoding is specified: As a suffix to the HTTP Content-Type header; in \nthe HTML HEAD Content-Type META tag, in the first line of an XML \ndocument, etc.  We can divide the locations where character encoding is \nspecified into two types: Locations the fetcher knows of and locations \nthe extractor is aware of.  For example, fetchers know about HTTP \nContent-Type line whereas the HTML extractor is &#39;aware&#39; of the HTML HEAD \nContent-Type META line, and so on.\n\nOk.  Back to the proposal:\n\n1. Add to HttpRecorder, RecordingInputStream and to \nRecordingOutputStream setCharacterEncoding/getCharacterEncoding \nmethods.  Calls to getCharSequence will use these character encodings \ndetermining what to return.\n2. Fetchers look at fetcher locations for charset encoding and if \navailable, set these into the HttpRecorder or Recording*Stream (Where to \nmake the setting will vary w/ the fetcher: E.g. the FetchHTTP fetcher \nwill set discovered encodings into HttpRecorder).\n3. Extractors know how to interrogate the document type they were \nwritten against.  Extractors are changed so the first thing they do is \nfigure content character encoding. For example, the ExtractorHTTP should \nfirst try and find the HEAD META Content-Type field and see if it has a \ncharset suffix.  If it does, and if its different from the charset of \nthe CharSequence currently being processed, ExtractorHTTP will discard \nthe current CharSequence, set the encoding into \nHttpRecorder/Recording*Stream, and restart the processing w/ a newly got \nCharSequence.\n4. ReplyCharSequence is what is returned when Extractors ask for a \nCharSequence. Proposal is that ReplayCharSequence now takes a charset \nencoding. In its constructor it examines the encoding. If the encoding \nis empty or throws an UnknownEncodingException or is member of a set of \nknown aliases for single-byte charsets, we&#39;ll default to single byte \nhandling.  Otherwise, we&#39;ll return a new CharSequence implementation, \none cognizant of multibyte handling, that will try to cache character \ndecodings being as decodings are expensive to do.\n\nThe above should improve our character encoding handling though, it has \nto be said, there will always be inscrutable content: For example,  a \nrecent case where we got UTF16 404 page which did not specify in the \nHTTP Content-Type that the page was UTF16.  In this case extractors will \ntreat the 2nd byte of the chinese ideogram &#39;bowl of food&#39; as a &#39;&lt;&#39; and \nthere is nought we can do about it (Though see RFE,  &quot;[ 899909 ] Add \ncharset detection to processing&quot; \n(https://sourceforge.net/tracker/index.php?func=detail&aid=899909&group_id=73833&atid=539102), \nfor other processings we can do when presented with content absent \nspecification of encoding).\n\nYours,\nSt.Ack\n\n\n\n\n\n\n"}}