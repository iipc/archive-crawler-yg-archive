{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"MbDlbJ0Ri6fb3rjiayekbJ7kfGuCdZxLvanrGoScXg2KiMzxua8T8yTUaIwduuFX-P5aLE3WIs5sLN3I-tK0b8r3H-rIt2U","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [archive-crawler] ToeThreads [1 Attachment]","postDate":"1322101003","msgId":7411,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRFQ0RBOTBCLjEwNjA2MDZAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDRFQ0QzN0VGLjgwOTA1MDRAY3MuY211LmVkdT4=","referencesHeader":"PGo4bXRkcisybnI1QGVHcm91cHMuY29tPiA8NEVCODEyRjQuNDA3MDYwOEBhcmNoaXZlLm9yZz4gPDRFQjgyQ0E3LjYwMDA3MDRAY3MuY211LmVkdT4gPDRFQjgzNTA5LjUwMzAyMDlAYXJjaGl2ZS5vcmc+IDw0RUI4NDM4Ri4zMDQwNjA2QGNzLmNtdS5lZHU+IDw0RUI4OTk5My44MDQwMjA4QGFyY2hpdmUub3JnPiA8NEVCOTgyODMuOTA3MDYwOEBjcy5jbXUuZWR1PiA8NEVCOTg0OUIuNjAyMDYwMUBhcmNoaXZlLm9yZz4gPDRFQzE5OUI1LjgwMDA4MDlAY3MuY211LmVkdT4gPDRFQ0MzQTQ3LjYwMTAzQGFyY2hpdmUub3JnPiA8NEVDRDM3RUYuODA5MDUwNEBjcy5jbXUuZWR1Pg=="},"prevInTopic":7410,"nextInTopic":7428,"prevInTime":7410,"nextInTime":7412,"topicId":7379,"numMessagesInTopic":23,"msgSnippet":"A few observations: • Anything logged as a SEVERE error is a potentially crawl-corrupting problem that needs attention, even if for a while it seems like","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 42734 invoked from network); 24 Nov 2011 02:16:45 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m4.grp.sp2.yahoo.com with QMQP; 24 Nov 2011 02:16:45 -0000\r\nX-Received: from unknown (HELO relay01.pair.com) (209.68.5.15)\n  by mta1.grp.sp2.yahoo.com with SMTP; 24 Nov 2011 02:16:45 -0000\r\nX-Received: (qmail 59580 invoked by uid 0); 24 Nov 2011 02:16:44 -0000\r\nX-Received: from 24.27.46.115 (HELO silverbook.local) (24.27.46.115)\n  by relay01.pair.com with SMTP; 24 Nov 2011 02:16:44 -0000\r\nX-pair-Authenticated: 24.27.46.115\r\nMessage-ID: &lt;4ECDA90B.1060606@...&gt;\r\nDate: Wed, 23 Nov 2011 18:16:43 -0800\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:8.0) Gecko/20111105 Thunderbird/8.0\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;j8mtdr+2nr5@...&gt; &lt;4EB812F4.4070608@...&gt; &lt;4EB82CA7.6000704@...&gt; &lt;4EB83509.5030209@...&gt; &lt;4EB8438F.3040606@...&gt; &lt;4EB89993.8040208@...&gt; &lt;4EB98283.9070608@...&gt; &lt;4EB9849B.6020601@...&gt; &lt;4EC199B5.8000809@...&gt; &lt;4ECC3A47.60103@...&gt; &lt;4ECD37EF.8090504@...&gt;\r\nIn-Reply-To: &lt;4ECD37EF.8090504@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] ToeThreads [1 Attachment]\r\nX-Yahoo-Group-Post: member; u=137285340; y=gz1MCmD7apflkTsGTbYbWRbQ8BQiJGommYbcPniFqY-K\r\nX-Yahoo-Profile: gojomo\r\n\r\nA few observations:\n\n� Anything logged as a SEVERE error is a potentially crawl-corrupting \nproblem that needs attention, even if for a while it seems like progress \nin continuing.\n\n� It looks like the first few errors (including those that mention \nwagCostAssignmentPolicy) were problems in your configuration that were \npresumably fixed before launching.\n\n� However, the later &#39;Fatal exception in&#39; lines appear to be some other \nerror. Looking at your attached log, they have traceback stacks of the form:\n\n2011-11-11 17:20:04.753 SEVERE thread-17 \norg.archive.crawler.framework.ToeThread.run() Fatal exception in \nToeThread #19\ncom.esotericsoftware.kryo.SerializationException: Buffer limit exceeded \nreading object of type: org.archive.modules.CrawlURI\n         at com.esotericsoftware.kryo.Kryo.readObjectData(Kryo.java:516)\n         at \ncom.esotericsoftware.kryo.ObjectBuffer.readObjectData(ObjectBuffer.java:212)\n         at org.archive.bdb.KryoBinding.entryToObject(KryoBinding.java:87)\n         at \norg.archive.crawler.frontier.BdbMultipleWorkQueues.get(BdbMultipleWorkQueues.java:271)\n         at \norg.archive.crawler.frontier.BdbWorkQueue.peekItem(BdbWorkQueue.java:103)\n         at org.archive.crawler.frontier.WorkQueue.peek(WorkQueue.java:173)\n         at \norg.archive.crawler.frontier.WorkQueueFrontier.findEligibleURI(WorkQueueFrontier.java:651)\n         at \norg.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:452)\n         at org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\nCaused by: java.nio.BufferUnderflowException\n         at java.nio.Buffer.nextGetIndex(Buffer.java:472)\n         at java.nio.HeapByteBuffer.get(HeapByteBuffer.java:117)\n         at \ncom.esotericsoftware.kryo.Serializer.readObject(Serializer.java:54)\n         at \ncom.esotericsoftware.kryo.serialize.FieldSerializer.readObjectData(FieldSerializer.java:206)\n         at \ncom.esotericsoftware.kryo.serialize.FieldSerializer.readObjectData(FieldSerializer.java:178)\n         at com.esotericsoftware.kryo.Kryo.readObjectData(Kryo.java:512)\n         ... 8 more\n\nThis is suggestive that some CrawlURI instance was able to be serialized \ninto the queue, but then presented problems on deserialization. \nUnfortunately, there&#39;s not more logged info that hints what queue/URI \ntriggered the problem.\n\nThe log has nearly a 1000 similar errors. I&#39;m not sure they&#39;ll kill the \nthread, but they probably make the queue useless and certainly prevent \ndesired material from getting the normal processing.\n\nI would find the crawl-configuration that works to reach this error the \nmost quickly, and add some extra logging output around \nBdbMultipleWorkQueues.get() to ensure when the exception occurs, the \nqueue/queueKey and perhaps even the binary serialized data is dumped. \nThat in turn might highlight a single URI that can trigger the problem \nand make it easy to find out why the serialize-deserialize roundtrip is \nfailing for that URI.\n\n- Gordon\n\nOn 11/23/11 10:14 AM, David Pane wrote:\n&gt; Noah,\n&gt;\n&gt; Thank you for your response.\n&gt;\n&gt; Early in the heritrix_out.log, I see a SEVERE errors.   The first 10 are\n&gt; below without the details. ( I have attached the log file for more\n&gt; details of the errors.) It looks like the wagCostAssignmentPolicy is the\n&gt; start of the problems?\n&gt;\n&gt; 2011-11-11 17:02:08.756 SEVERE thread-11\n&gt; org.archive.crawler.framework.CrawlJob.beansException() Invalid property\n&gt; &#39;wagCostAssignmentPolicy&#39; of bean class\n&gt; [org.archive.crawler.prefetch.FrontierPreparer]: Bean property\n&gt; &#39;wagCostAssignmentPolicy&#39; is not writable or has an invalid setter\n&gt; method. Does the parameter type of the setter match the return type of\n&gt; the getter?; Can&#39;t create bean &#39;preparer&#39;; Can&#39;t create bean\n&gt; &#39;candidateProcessors&#39;; ; Can&#39;t create bean &#39;crawlController&#39;; ; Can&#39;t\n&gt; create bean &#39;frontier&#39;; ; Can&#39;t create bean &#39;seeds&#39;\n&gt; 2011-11-11 17:02:51.149 SEVERE thread-12\n&gt; org.archive.crawler.framework.CrawlJob.beansException() Line 213 in XML\n&gt; document from URL\n&gt; [file:/scratch/heritrix-3.1.0/./jobs/crawl03/crawler-beans.cxml] is\n&gt; invalid; nested exception is org.xml.sax.SAXParseException: The element\n&gt; type &quot;bean&quot; must be terminated by the matching end-tag &quot;&lt;/bean&gt;&quot;.\n&gt; 2011-11-11 17:05:58.332 SEVERE thread-11\n&gt; org.archive.crawler.framework.CrawlJob.beansException() Invalid property\n&gt; &#39;wagCostAssignmentPolicy&#39; of bean class\n&gt; [org.archive.crawler.prefetch.FrontierPreparer]: Bean property\n&gt; &#39;wagCostAssignmentPolicy&#39; is not writable or has an invalid setter\n&gt; method. Does the parameter type of the setter match the return type of\n&gt; the getter?; Can&#39;t create bean &#39;preparer&#39;; Can&#39;t create bean\n&gt; &#39;candidateProcessors&#39;; ; Can&#39;t create bean &#39;crawlController&#39;; ; Can&#39;t\n&gt; create bean &#39;frontier&#39;; ; Can&#39;t create bean &#39;seeds&#39;\n&gt; 2011-11-11 17:10:45.070 SEVERE thread-13\n&gt; org.archive.crawler.framework.CrawlJob.beansException() Line 219 in XML\n&gt; document from URL\n&gt; [file:/scratch/heritrix-3.1.0/./jobs/crawl03/crawler-beans.cxml] is\n&gt; invalid; nested exception is org.xml.sax.SAXParseException: The string\n&gt; &quot;--&quot; is not permitted within comments.\n&gt; 2011-11-11 17:20:04.753 SEVERE thread-17\n&gt; org.archive.crawler.framework.ToeThread.run() Fatal exception in\n&gt; ToeThread #19\n&gt; 2011-11-11 17:20:04.933 SEVERE thread-18\n&gt; org.archive.crawler.framework.ToeThread.run() Fatal exception in\n&gt; ToeThread #56\n&gt; 2011-11-11 17:20:05.027 SEVERE thread-19\n&gt; org.archive.crawler.framework.ToeThread.run() Fatal exception in\n&gt; ToeThread #38\n&gt; 2011-11-11 17:20:05.035 SEVERE thread-20\n&gt; org.archive.crawler.framework.ToeThread.run() Fatal exception in\n&gt; ToeThread #8\n&gt; 2011-11-11 17:20:05.093 SEVERE thread-21\n&gt; org.archive.crawler.framework.ToeThread.run() Fatal exception in\n&gt; ToeThread #58\n&gt; 2011-11-11 17:20:05.097 SEVERE thread-22\n&gt; org.archive.crawler.framework.ToeThread.run() Fatal exception in\n&gt; ToeThread #95\n&gt;\n&gt;\n&gt; --David\n&gt;\n&gt;\n&gt; On 11/22/2011 7:11 PM, Noah Levitt wrote:\n&gt;&gt; Hello David,\n&gt;&gt;\n&gt;&gt; What happened to the 600+ toe threads that disappeared? heritrix_out.log\n&gt;&gt; should have that information.\n&gt;&gt;\n&gt;&gt; This is also relevant tohttps://webarchive.jira.com/browse/HER-1967 -\n&gt;&gt; there are 693 in-process queues. That is at least one thing preventing\n&gt;&gt; the crawl from finishing (thanks Kenji for pointing this out). So the\n&gt;&gt; question is, what happened to those toe threads. Only serious errors\n&gt;&gt; like OOME should kill toe threads (see ToeThread.run()), and in that\n&gt;&gt; case the crawl should pause which I imagine you would have mentioned.\n&gt;&gt; So... what&#39;s in heritrix_out.log?\n&gt;&gt;\n&gt;&gt; Noah\n&gt;&gt;\n&gt;&gt; On 2011-11-14 14:44 , David Pane wrote:\n&gt;&gt;&gt; A naive user would think that if one configures the crawler to use 1200\n&gt;&gt;&gt; toe threads, the crawler would use all 1200 threads for the duration of\n&gt;&gt;&gt; the crawl.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I have found that this is not always true. A recent test crawl showed\n&gt;&gt;&gt; only ~512 of the threads (512 threads: 512 ...) for the duration of a\n&gt;&gt;&gt; crawl 3 day crawl with as many as 8 million uri queues.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Other crawls show multiple (maybe ~800) warcWriter threads and maybe\n&gt;&gt;&gt; less than a dozen fetch threads.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I have been playing with the balanceReplenishAmount (now at 1500),\n&gt;&gt;&gt; maxRetries (now at 5) and recently changed the configuration to use the\n&gt;&gt;&gt; wagCostAssignmentPolicy.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Finally, I have been using the maxTimeSeconds to segments of a crawl.\n&gt;&gt;&gt; The last few segments were set at 3 1/2 days. When the crawler goes to\n&gt;&gt;&gt; active stopping, about 20 minutes later the load goes to zero (e.g. 0\n&gt;&gt;&gt; active of 507 threads; 4,891.94 congestion ratio; 11262085 deepest\n&gt;&gt;&gt; queue; 37 average depth ) but it take multiple hours to actually\n&gt;&gt;&gt; complete the stopping.\n&gt;&gt;&gt;\n&gt;&gt;&gt; The theads show (507 threads: 507 ABOUT_TO_GET_URI; 507\n&gt;&gt;&gt; noActiveProcessor )\n&gt;&gt;&gt;\n&gt;&gt;&gt; The Toe thread report looks something like:\n&gt;&gt;&gt; Toe threads report - 201111142240\n&gt;&gt;&gt; Job being crawled: jobname\n&gt;&gt;&gt; Number of toe threads in pool: 507 (0 active)\n&gt;&gt;&gt;\n&gt;&gt;&gt; [ToeThread #21:\n&gt;&gt;&gt; -no CrawlURI-\n&gt;&gt;&gt; WAITING for 1h30m21s121ms\n&gt;&gt;&gt; step: ABOUT_TO_GET_URI for 1h30m21s121ms\n&gt;&gt;&gt; Java Thread State: WAITING\n&gt;&gt;&gt; Blocked/Waiting On: NONE\n&gt;&gt;&gt; sun.misc.Unsafe.park(Native Method)\n&gt;&gt;&gt; java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n&gt;&gt;&gt; ]\n&gt;&gt;&gt; [ToeThread #30:\n&gt;&gt;&gt; -no CrawlURI-\n&gt;&gt;&gt; WAITING for 1h30m20s411ms\n&gt;&gt;&gt; step: ABOUT_TO_GET_URI for 1h30m20s411ms\n&gt;&gt;&gt; Java Thread State: WAITING\n&gt;&gt;&gt; Blocked/Waiting On: NONE\n&gt;&gt;&gt; sun.misc.Unsafe.park(Native Method)\n&gt;&gt;&gt; java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n&gt;&gt;&gt; ]\n&gt;&gt;&gt; [ToeThread #31:\n&gt;&gt;&gt; -no CrawlURI-\n&gt;&gt;&gt; WAITING for 1h22m8s292ms\n&gt;&gt;&gt; step: ABOUT_TO_GET_URI for 1h22m8s292ms\n&gt;&gt;&gt; Java Thread State: WAITING\n&gt;&gt;&gt; Blocked/Waiting On: NONE\n&gt;&gt;&gt; sun.misc.Unsafe.park(Native Method)\n&gt;&gt;&gt; java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n&gt;&gt;&gt; ]\n&gt;&gt;&gt; [ToeThread #133:\n&gt;&gt;&gt; -no CrawlURI-\n&gt;&gt;&gt; WAITING for 1h19m48s302ms\n&gt;&gt;&gt; step: ABOUT_TO_GET_URI for 1h19m48s302ms\n&gt;&gt;&gt; Java Thread State: WAITING\n&gt;&gt;&gt; Blocked/Waiting On: NONE\n&gt;&gt;&gt; sun.misc.Unsafe.park(Native Method)\n&gt;&gt;&gt; java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n&gt;&gt;&gt; ]\n&gt;&gt;&gt; .\n&gt;&gt;&gt; .\n&gt;&gt;&gt; .\n&gt;&gt;&gt;\n&gt;&gt;&gt; ToeThread #1198:\n&gt;&gt;&gt; -no CrawlURI-\n&gt;&gt;&gt; WAITING for 1h30m20s625ms\n&gt;&gt;&gt; step: ABOUT_TO_GET_URI for 1h30m20s625ms\n&gt;&gt;&gt; Java Thread State: WAITING\n&gt;&gt;&gt; Blocked/Waiting On: NONE\n&gt;&gt;&gt; sun.misc.Unsafe.park(Native Method)\n&gt;&gt;&gt; java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n&gt;&gt;&gt; ]\n&gt;&gt;&gt; [ToeThread #1199:\n&gt;&gt;&gt; -no CrawlURI-\n&gt;&gt;&gt; WAITING for 1h30m25s395ms\n&gt;&gt;&gt; step: ABOUT_TO_GET_URI for 1h30m25s395ms\n&gt;&gt;&gt; Java Thread State: WAITING\n&gt;&gt;&gt; Blocked/Waiting On: NONE\n&gt;&gt;&gt; sun.misc.Unsafe.park(Native Method)\n&gt;&gt;&gt; java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n&gt;&gt;&gt; ]\n&gt;&gt;&gt; [ToeThread #1200:\n&gt;&gt;&gt; -no CrawlURI-\n&gt;&gt;&gt; WAITING for 1h30m26s398ms\n&gt;&gt;&gt; step: ABOUT_TO_GET_URI for 1h30m26s398ms\n&gt;&gt;&gt; Java Thread State: WAITING\n&gt;&gt;&gt; Blocked/Waiting On: NONE\n&gt;&gt;&gt; sun.misc.Unsafe.park(Native Method)\n&gt;&gt;&gt; java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n&gt;&gt;&gt;\n&gt;&gt;&gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n&gt;&gt;&gt; ]\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Any clarification and explanation of these would greatly be appreciated.\n&gt;&gt;&gt;\n&gt;&gt;&gt; --David\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n"}}