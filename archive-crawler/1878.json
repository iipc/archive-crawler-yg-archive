{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":214587980,"authorName":"Christian Kohlschuetter","from":"Christian Kohlschuetter &lt;ck-heritrix@...&gt;","replyTo":"LIST","senderId":"1d96rwWhmbiTzhoV4nrTHtcWqIfRbsVCIoKzzABgGednHI-HS-h7FVoOLPf3wb1kazLIO3C_oqQEOtOO2YubzcLK96cdcoDHQRg71gZuCiddSObKOKUt_A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Cookie troubles with FetchHTTP/HttpClient","postDate":"1117011715","msgId":1878,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDUwNTI1MTEwMS41NTYyMS5jay1oZXJpdHJpeEBuZXdzY2x1Yi5kZT4="},"prevInTopic":0,"nextInTopic":1884,"prevInTime":1877,"nextInTime":1879,"topicId":1878,"numMessagesInTopic":2,"msgSnippet":"Dear all, I have probably found another code hotspot, which unnecessarily decelerates crawling, and also leads to OOME. After extending ToeThread report() to","rawEmail":"Return-Path: &lt;ck-heritrix@...&gt;\r\nX-Sender: ck-heritrix@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 55570 invoked from network); 25 May 2005 09:09:24 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m26.grp.scd.yahoo.com with QMQP; 25 May 2005 09:09:24 -0000\r\nReceived: from unknown (HELO mail.newsclub.de) (130.75.2.42)\n  by mta5.grp.scd.yahoo.com with SMTP; 25 May 2005 09:09:24 -0000\r\nReceived: (qmail 664 invoked by uid 2002); 25 May 2005 09:09:21 -0000\r\nReceived: from ck-heritrix@... by nhf3.rrzn.uni-hannover.de by uid 207 with qmail-scanner-1.21 \n (clamscan: 0.67. spamassassin: 2.63.  Clear:RC:0(130.75.87.112):SA:0(-2.6/5.0):. \n Processed in 1.959888 secs); 25 May 2005 09:09:21 -0000\r\nX-Spam-Status: No, hits=-2.6 required=5.0\r\nReceived: from pc112.l3s.uni-hannover.de (HELO mail.newsclub.de) (webmail@...@130.75.87.112)\n  by nhf3.rrzn.uni-hannover.de with RC4-MD5 encrypted SMTP; 25 May 2005 09:09:19 -0000\r\nOrganization: NewsClub\r\nTo: archive-crawler@yahoogroups.com\r\nDate: Wed, 25 May 2005 11:01:55 +0200\r\nUser-Agent: KMail/1.8\r\nMIME-Version: 1.0\r\nContent-Disposition: inline\r\nMessage-Id: &lt;200505251101.55621.ck-heritrix@...&gt;\r\nContent-Type: text/plain;\n  charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Christian Kohlschuetter &lt;ck-heritrix@...&gt;\r\nSubject: Cookie troubles with FetchHTTP/HttpClient\r\nX-Yahoo-Group-Post: member; u=214587980\r\n\r\nDear all,\n\nI have probably found another code hotspot, which unnecessarily =\r\ndecelerates \ncrawling, and also leads to OOME.\n\nAfter extending ToeThread r=\r\neport() to also show the stacktrace for each Thread \n(feature introduced wi=\r\nth Java 5.0), I realized that most of my 200 ToeThreads \nhang in HttpClient=\r\n code for several seconds, sometimes even minutes, trying \neither to add or=\r\n to get cookie information from HttpState. For example:\n\n   ToeThread #6\n  =\r\n   #6    \nhttp://www.freenet.hamilton.on.ca/Information/NEST/nature/niaghaw=\r\nk/statistics.htm \n(0 attempts)\n        L http://www.freenet.hamilton.on.ca/=\r\nlink/niaghawk/\n        Current processor: HTTP\n        ACTIVE for 8m3s803ms=\r\n\n        Where: PROCESSING for 483813ms\n\norg.apache.commons.httpclient.Http=\r\nState.getCookies(HttpState.java:172)\norg.apache.commons.httpclient.HttpMeth=\r\nodBase.addCookieRequestHeader(HttpMethodBase.java:1183)\norg.apache.commons.=\r\nhttpclient.HttpMethodBase.addRequestHeaders(HttpMethodBase.java:1307)\norg.a=\r\npache.commons.httpclient.HttpMethodBase.writeRequestHeaders(HttpMethodBase.=\r\njava:2027)\norg.apache.commons.httpclient.HttpMethodBase.writeRequest(HttpMe=\r\nthodBase.java:1912)\norg.apache.commons.httpclient.HttpMethodBase.execute(Ht=\r\ntpMethodBase.java:997)\norg.archive.httpclient.HttpRecorderGetMethod.execute=\r\n(HttpRecorderGetMethod.java:117)\norg.apache.commons.httpclient.HttpMethodDi=\r\nrector.executeWithRetry(HttpMethodDirector.java:382)\norg.apache.commons.htt=\r\npclient.HttpMethodDirector.executeMethod(HttpMethodDirector.java:168)\norg.a=\r\npache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:393)\norg.=\r\napache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:324)\norg=\r\n.archive.crawler.fetcher.FetchHTTP.innerProcess(FetchHTTP.java:397)\norg.arc=\r\nhive.crawler.framework.Processor.process(Processor.java:103)\norg.archive.cr=\r\nawler.framework.ToeThread.processCrawlUri(ToeThread.java:283)\norg.archive.c=\r\nrawler.framework.ToeThread.run(ToeThread.java:152)\n\nand\n\n   ToeThread #54\n =\r\n    #54   \nhttp://www.ibbd.org/modules.php?op=3Dmodload&name=3DRecommend_Us=\r\n&file=3Dindex&req=3DFriendSend&sid=3D36 \n(0 attempts)\n        LL \nhttp://ww=\r\nw.ibbd.org/modules.php?op=3Dmodload&name=3DNews&file=3Darticle&sid=3D36&mod=\r\ne=3Dthread&order=3D0&thold=3D0\n        Current processor: HTTP\n        ACTI=\r\nVE for 25s448ms\n        Where: PROCESSING for 25450ms\n\norg.apache.commons.h=\r\nttpclient.HttpState.addCookie(HttpState.java:124)\norg.apache.commons.httpcl=\r\nient.HttpMethodBase.processResponseHeaders(HttpMethodBase.java:1502)\norg.ap=\r\nache.commons.httpclient.HttpMethodBase.readResponse(HttpMethodBase.java:159=\r\n1)\norg.apache.commons.httpclient.HttpMethodBase.execute(HttpMethodBase.java=\r\n:999)\norg.archive.httpclient.HttpRecorderGetMethod.execute(HttpRecorderGetM=\r\nethod.java:117)\norg.apache.commons.httpclient.HttpMethodDirector.executeWit=\r\nhRetry(HttpMethodDirector.java:382)\norg.apache.commons.httpclient.HttpMetho=\r\ndDirector.executeMethod(HttpMethodDirector.java:168)\norg.apache.commons.htt=\r\npclient.HttpClient.executeMethod(HttpClient.java:393)\norg.apache.commons.ht=\r\ntpclient.HttpClient.executeMethod(HttpClient.java:324)\norg.archive.crawler.=\r\nfetcher.FetchHTTP.innerProcess(FetchHTTP.java:397)\norg.archive.crawler.fram=\r\nework.Processor.process(Processor.java:103)\norg.archive.crawler.framework.T=\r\noeThread.processCrawlUri(ToeThread.java:283)\norg.archive.crawler.framework.=\r\nToeThread.run(ToeThread.java:152)\n\nand so on.\n\nRight now, I have crawled 1,=\r\n810,981 pages from various hosts in 13 hours.\nI guess, I have accumulated m=\r\nany cookies during the crawl (I cannot tell how \nmuch).\n\nAs far as I unders=\r\ntand, FetchHTTP lets HttpClient always accept cookies, and \nHttpClient stor=\r\nes them in memory-based ArrayList (!), at HttpState. In order \nto skip cook=\r\nie duplicates, HttpState.addCookie seems to *iterate* over that \nlist and c=\r\nompares each entry with the new cookie. Of course, this takes ages \nif you =\r\nhave a lot of cookies in that list.\n\nSince the addCookie() and getCookie() =\r\nmethods are synchronized, all other \nthreads which try to get the cookie li=\r\nst are simply blocked. Also, the \ngetCookie() method is rather slow because=\r\n it returns the list of cookies as \nan array (copying all the entries).\n\nTo=\r\n sum it up, we have three problems here:\n1. (Heritrix) There is no way to t=\r\nurn off cookie support (would be a \nquick-fix).\n2. (Heritrix/HttpClient) Co=\r\nokies are kept in memory (instead of bdb etc.)\n3. (HttpClient) HttpState ac=\r\ncess to cookies is sluggish (by implementation and \nAPI).\n\nI would still re=\r\ngard them not as bugs but RFEs, because breadth-first crawls \nstill are exp=\r\nerimental. However, I would assign a high priority.\n\nAnd finally, adding th=\r\ne stacktrace dump to ToeThread.report() would also be a \nnice enhancement I=\r\nMHO. To keep Java 1.4 compatibility, I suggest to keep that \nfeature in a s=\r\npecial class which is only loaded if Java &gt; 5.0 is present. (I \nwill file a=\r\nn RFE with a patch soon).\n\n\nChristian\n-- \nChristian Kohlsch=FCtter\nmailto: =\r\nck -at- NewsClub.de\n\n"}}