{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":172190008,"authorName":"Andy Boyko","from":"Andy Boyko &lt;aboy@...&gt;","profile":"andyboyko","replyTo":"LIST","senderId":"IL2huctw2MgVxHPwXmmVoZcnTuCxzJr5_FgD4yaKl-KtjITKwn6dFE7sYNxO1zgKWiScrWWKvJySjqIgXjb0cw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Building Heritrix 0.8.0 from CVS with Maven, but without docs","postDate":"1085695090","msgId":461,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwQjY2NDcyLjUwNjA2MDFAbG9jLmdvdj4=","inReplyToHeader":"PDQwQjYzQTFBLjUwMzA5MDRAYXJjaGl2ZS5vcmc+","referencesHeader":"PDE2NTY2LjQ4MTMuMjU2MzgyLjY4MzU3MEB0aXBoYXJlcy5iYXNpc3RlY2gubmV0PiA8NDBCNjNBMUEuNTAzMDkwNEBhcmNoaXZlLm9yZz4="},"prevInTopic":457,"nextInTopic":463,"prevInTime":460,"nextInTime":462,"topicId":455,"numMessagesInTopic":37,"msgSnippet":"... Hmm... actually, on a clean CVS checkout and a maven jar I m still seeing the three tests fail that were failing last week (anything relating to","rawEmail":"Return-Path: &lt;aboy@...&gt;\r\nX-Sender: aboy@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 61990 invoked from network); 27 May 2004 22:02:01 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m22.grp.scd.yahoo.com with QMQP; 27 May 2004 22:02:01 -0000\r\nReceived: from unknown (HELO sun8.loc.gov) (140.147.249.48)\n  by mta3.grp.scd.yahoo.com with SMTP; 27 May 2004 22:02:00 -0000\r\nReceived: from loc.gov (amerprt1.loc.gov [140.147.131.81])\n\tby sun8.loc.gov  with ESMTP id i4RLwAVT008988\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 27 May 2004 17:58:10 -0400 (EDT)\r\nMessage-ID: &lt;40B66472.5060601@...&gt;\r\nDate: Thu, 27 May 2004 17:58:10 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.4) Gecko/20030624 Netscape/7.1 (ax)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;16566.4813.256382.683570@...&gt; &lt;40B63A1A.5030904@...&gt;\r\nIn-Reply-To: &lt;40B63A1A.5030904@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 140.147.249.48\r\nFrom: Andy Boyko &lt;aboy@...&gt;\r\nSubject: Re: [archive-crawler] Building Heritrix 0.8.0 from CVS with Maven,\n but without docs\r\nX-Yahoo-Group-Post: member; u=172190008\r\nX-Yahoo-Profile: andyboyko\r\n\r\nMichael Stack wrote:\n&gt; (I just tested with maven rc2 and maven rc1 and the jar target works for \n&gt; both. I know that if you try to do any more than build jars, if you want \n&gt; to build the doc. or a distribution or generate the heritrix website, \n&gt; there&#39;ll be probs as has been reported on this list in the past.  Only \n&gt; HEAD works for sure with rc2).\n\nHmm... actually, on a clean CVS checkout and a &quot;maven jar&quot; I&#39;m still \nseeing the three tests fail that were failing last week (anything \nrelating to DiskBacked, and then the XMLSettingsHandler test).  I&#39;m now \nusing Maven rc3, but they were failing with rc1 and rc2 too.  Last time \nI mentioned it, you figured the HEAD was just broken, but that&#39;d seem \nnot to be the case, given that 0.80 came out since we last talked about \nit.  I&#39;ve got to wager that it&#39;s *something* about my environment since \nit&#39;s generally working, but it&#39;s doing so on two different machines, \nwith two different Linux distributions (same JDK, though - Sun 1.4.2_04).\n\nThe stack trace is the same for all three tests (at least, in the \nrelevant parts):\n\njava.io.IOException: Invalid argument\n         at sun.nio.ch.FileChannelImpl.transferTo0(Native Method)\n         at \nsun.nio.ch.FileChannelImpl.transferToDirectly(FileChannelImpl.java:392)\n         at sun.nio.ch.FileChannelImpl.transferTo(FileChannelImpl.java:487)\n         at org.archive.util.FileUtils.copyFile(FileUtils.java:127)\n         at org.archive.util.FileUtils.copyFile(FileUtils.java:92)\n         at \norg.archive.crawler.checkpoint.ObjectPlusFilesOutputStream.hardlinkOrCopy(ObjectPlusFilesOutputStream.java:136)\n         at \norg.archive.crawler.checkpoint.ObjectPlusFilesOutputStream.snapshotAppendOnlyFile(ObjectPlusFilesOutputStream.java:111)\n         at org.archive.io.DiskByteQueue.writeObject(DiskByteQueue.java:225)\n         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n         at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n         at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n         at \njava.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:809)\n         at \njava.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1296)\n         at \njava.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1247)\n         at \njava.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1052)\n         at \njava.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1332)\n         at \njava.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1304)\n         at \njava.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1247)\n         at \njava.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1052)\n         at \njava.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1332)\n         at \njava.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1304)\n         at \njava.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1247)\n         at \njava.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1052)\n         at \njava.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:278)\n         at \norg.archive.util.DiskBackedQueueTest.testSerialization(DiskBackedQueueTest.java:189)\n\nAny obvious guesses?  I&#39;ve got no experience with the java.nio stuff, so \nI assume it&#39;s all scary/broken/weird :)\n\nAndy Boyko   aboy@...\nLibrary of Congress\n\n\n"}}