{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr (archive.org)","from":"&quot;Gordon Mohr (archive.org)&quot; &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"5R4XtrLiPv3uf8v55lLsP5Ozq7iNKDEiGj367eIMcjYZVpbqM0xln1DFtfRve5AhENhadO8hvSffdMM8PT0XSkc2iVaHrfF-0JhHjxz0dB5BrxcxASVa","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] DomainScope allows URLs to get into queue that are out of domain","postDate":"1137183841","msgId":2552,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQzQzgwQzYxLjIwMTA1MDlAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDQzQzc4RjY0LjQwMTA5MDBAbWV0YWNhcnRhLmNvbT4=","referencesHeader":"PDQzQzZEMEVDLjQwMjA2MDZAbWV0YWNhcnRhLmNvbT4gPDQzQzcwQUZGLjMwNjA4MDJAYXJjaGl2ZS5vcmc+IDw0M0M3OEY2NC40MDEwOTAwQG1ldGFjYXJ0YS5jb20+"},"prevInTopic":2550,"nextInTopic":0,"prevInTime":2551,"nextInTime":2553,"topicId":2548,"numMessagesInTopic":4,"msgSnippet":"... For each of the classic scopes (Domain, Host, Path), the logic for whether a URI is included is essentially whether the following is true: ","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 89336 invoked from network); 13 Jan 2006 20:25:09 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m30.grp.scd.yahoo.com with QMQP; 13 Jan 2006 20:25:09 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (207.241.224.171)\n  by mta4.grp.scd.yahoo.com with SMTP; 13 Jan 2006 20:25:09 -0000\r\nReceived: (qmail 15182 invoked by uid 100); 13 Jan 2006 20:18:39 -0000\r\nReceived: from adsl-71-130-102-78.dsl.pltn13.pacbell.net (HELO ?192.168.1.10?) (gojomo@...@71.130.102.78)\n  by mail-dev.archive.org with SMTP; 13 Jan 2006 20:18:39 -0000\r\nMessage-ID: &lt;43C80C61.2010509@...&gt;\r\nDate: Fri, 13 Jan 2006 12:24:01 -0800\r\nUser-Agent: Mozilla Thunderbird 1.0.7-1.1.fc3 (X11/20050929)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;43C6D0EC.4020606@...&gt; &lt;43C70AFF.3060802@...&gt; &lt;43C78F64.4010900@...&gt;\r\nIn-Reply-To: &lt;43C78F64.4010900@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=-81.8 required=7.0 tests=AWL,USER_IN_WHITELIST \n\tautolearn=no version=2.63\r\nX-eGroups-Msg-Info: 2:12:4:0\r\nFrom: &quot;Gordon Mohr (archive.org)&quot; &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] DomainScope allows URLs to get into queue that\n are out of domain\r\nX-Yahoo-Group-Post: member; u=137285340; y=OjWD7lbHP9n0-attfAnfAk6xcerxF_q9gPiSOSt2_CQg\r\nX-Yahoo-Profile: gojomo\r\n\r\nKarl Wright wrote:\n&gt; Gordon Mohr (archive.org) wrote:\n&gt; \n&gt;&gt;Karl Wright wrote:\n&gt;&gt;\n&gt;&gt;&gt;I&#39;m still trying to figure out how it happens, but with DomainScope I am \n&gt;&gt;&gt;seeing cases where URLs that are not part of the seed domains get \n&gt;&gt;&gt;included.  Can someone tell me:\n&gt;&gt;&gt;\n&gt;&gt;&gt;1) Whether (and where) URIs getting queued get filtered by domain, and\n&gt;&gt;&gt;2) where the URIs that managed to get queued which are not part of the \n&gt;&gt;&gt;seed domains would get filtered out?\n&gt;&gt;\n&gt;&gt;See this recent message -- everything it says about HostScope goes for\n&gt;&gt;DomainScope, too:\n&gt;&gt;\n&gt;&gt;   http://groups.yahoo.com/group/archive-crawler/message/2518\n&gt;&gt;\n&gt;&gt;- Gordon @ IA\n&gt; \n&gt; Yes, I am aware of everything in the message you described above (which \n&gt; I&#39;ve included below for clarity).  However, to date I found no \n&gt; correlation between trans-hops and domains in the definitions listed, \n&gt; and indeed in the code.  I don&#39;t want to stop our crawl from going into \n&gt; pages that you define as &quot;transitive&quot; as long as they are on the same \n&gt; domain, and it seems I would need to do that in order to restrict the \n&gt; crawl to the domains in the seeds.  Am I wrong?\n\nFor each of the &#39;classic&#39; scopes (Domain, Host, Path), the logic for\nwhether a URI is included is essentially whether the following is true:\n\n  forceAccepts(uri)                     // is a &#39;force&#39; flag set on URI?\n  || (((isSeed(uri)                     // is URI a seed?\n        || focusAccepts(uri))           // is URI on &#39;focus&#39; (seed patterns: domain/host/path)?\n        || additionalFocusAccepts(uri)  // does URI fit other patterns (eg extensions)?\n        || transitiveAccepts(uri))      // does URI&#39;s hops-path end in 0&lt;N&lt;MAX &#39;transitive&#39; hops?\n     && !excludeAccepts(uri));          // do other exclusions (eg max-hops or URI patterns) apply?\n\nNote that the transitiveAccepts() clause above can only help URIs to be\nincluded, never excluded. That is, when a hops-path ends with more-than-zero,\nless-than-max &#39;trans&#39; hops, transitiveAccepts() will be true, and so\neven if (for example) focusAccepts() returns false (the URI is off the\nseed patterns), it could be included.\n\nIf the count of trans-hops is larger, transitiveAccepts() will be false --\nbut then the other tests are dispositive. In particular, if the focusAccepts()\nis true -- the URI fits the seed patterns -- the value of transitiveAccepts()\nis irrelevant. No number of trans-hops will cause a URI to be excluded if\nit&#39;s otherwise accepted by focusAccepts().\n\nHOWEVER, there WAS a fix in how the max-link-hops and max-trans-hops behave\ninside the &#39;excludeAccepts()&#39; as of September 21, 2005 (after Heritrix 1.4,\nbefore 1.6) that could be contributing to confusion here.\n\nBefore that change, part of excludeAccepts() was to ensure that NEITHER\nthe URI&#39;s total link-hops nor tail trans-hops exceeded the max-link-hops\nand max-trans-hops values. This caused the unintended effect of some\nfocusAccepts() URIs being excluded simply because their tail of trans-hops was\ntoo long -- and made a setting of &#39;max-trans-hops=0&#39; useless for your\nintended purpose.\n\nAfter that change, excludeAccepts only enforces the max-links-hops, making\n&#39;max-trans-hops=0&#39; a useful setting that prevents off-focus URIs without\nexcluding any focusAccepts() URIs.\n\nThis change was made as part of this RFE:\n  http://sourceforge.net/tracker/index.php?func=detail&aid=1090564&group_id=73833&atid=539099\nin CVS:\n  http://cvs.sourceforge.net/viewcvs.py/archive-crawler/ArchiveOpenCrawler/src/java/org/archive/crawler/scope/ClassicScope.java?rev=1.5&view=log#rev1.5\n\n--\nBackground:\n\nThat whole &#39;classic&#39; template for scoping...\n\n  forceAccepts(uri)                     // is a &#39;force&#39; flag set on URI?\n  || (((isSeed(uri)                     // is URI a seed?\n        || focusAccepts(uri))           // is URI on &#39;focus&#39; (seed patterns: domain/host/path)?\n        || additionalFocusAccepts(uri)  // does URI fit other patterns (eg extensions)?\n        || transitiveAccepts(uri))      // does URI&#39;s hops-path end in 0&lt;N&lt;MAX &#39;transitive&#39; hops?\n     && !excludeAccepts(uri));          // do other exclusions (eg max-hops or URI patterns) apply?\n\n...started somewhat simpler and with the idea that most crawls could\nfit this pattern. However, as the clauses have grown, and the diversity of\ncrawls people are doing increased, this template proved both constraining\nand confusing.\n\nHence, DecidingScope was born. It has its own complexity: it allows each\ndecision to be three-valued -- ACCEPT, REJECT, or PASS -- and lets the last\nnon-PASS decision win. But, by doing that, it can achieve with a flat series\nof rules everything the &#39;classic&#39; nested template can, and more.\n\nPerhaps as soon as 1.8, a DecidingScope with a good standard set of rules\nwill become the default, and the classic scopes will be deprecated.\n\n- Gordon @ IA\n\n"}}