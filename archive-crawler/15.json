{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"&quot;Gordon Mohr&quot; &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"Fep9Gi-0vyWrHzWEuk28f6fHMHgfyZtV7h0VFSFr7GrgMTORDz7zl59akuv-s0dUtJ6vMooh_3SdV7K9WdAgkIStT1C-08pZ6w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Re: Web crawler work ??","postDate":"1046466802","msgId":15,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwOGUwMWMyZGY2ZSQzZDQ4NGJlMCQ0ZGViZWRkMUBXT1JLU1RBVElPTjIxPg==","referencesHeader":"PDM3ZWQwMWMyZDczNCQ0ZjQ0NjliMCRkNTAwYThjMEBSZWRkeUdCPiA8MDM4MDAxYzJkN2I2JDJjMTIxZjAwJDNhZWJlZGQxQGdvam92YWlvPiA8M2ZlMDAxYzJkOWM3JGU1OGE0YTgwJGQ1MDBhOGMwQFJlZGR5R0I+IDwwMGRjMDFjMmRhMDckNjZlZTEzNjAkM2FlYmVkZDFAZ29qb3ZhaW8+IDwwNzY5MDFjMmRlODEkMTNmY2ZlOTAkZDUwMGE4YzBAdGlkZWxwYXJrLmlzb2Z0dGVjaGluZGlhLmNvbT4="},"prevInTopic":13,"nextInTopic":16,"prevInTime":14,"nextInTime":16,"topicId":12,"numMessagesInTopic":6,"msgSnippet":"Sounds like a reasonable plan. By local name server do you mean something *very* local -- for example, a standard nameserver we run on the same machine? That","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_4); 28 Feb 2003 21:13:32 -0000\r\nReceived: (qmail 69955 invoked from network); 28 Feb 2003 21:13:31 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m10.grp.scd.yahoo.com with QMQP; 28 Feb 2003 21:13:31 -0000\r\nReceived: from unknown (HELO mail.archive.org) (209.237.232.3)\n  by mta1.grp.scd.yahoo.com with SMTP; 28 Feb 2003 21:13:31 -0000\r\nReceived: from WORKSTATION21 (dynamic-77.archive.org [209.237.235.77])\n\tby mail.archive.org (8.10.2/8.10.2) with SMTP id h1SKZSt01828;\n\tFri, 28 Feb 2003 12:35:28 -0800\r\nMessage-ID: &lt;008e01c2df6e$3d484be0$4debedd1@WORKSTATION21&gt;\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nCc: &quot;Raymie Stata&quot; &lt;raymie@...&gt;, &lt;wcr-team@...&gt;\r\nReferences: &lt;37ed01c2d734$4f4469b0$d500a8c0@ReddyGB&gt; &lt;038001c2d7b6$2c121f00$3aebedd1@gojovaio&gt; &lt;3fe001c2d9c7$e58a4a80$d500a8c0@ReddyGB&gt; &lt;00dc01c2da07$66ee1360$3aebedd1@gojovaio&gt; &lt;076901c2de81$13fcfe90$d500a8c0@...&gt;\r\nSubject: Re: [archive-crawler] Re: Web crawler work ??\r\nDate: Fri, 28 Feb 2003 13:13:22 -0800\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1106\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1106\r\nFrom: &quot;Gordon Mohr&quot; &lt;gojomo@...&gt;\r\nX-Yahoo-Group-Post: member; u=137285340\r\nX-Yahoo-Profile: gojomo\r\n\r\nSounds like a reasonable plan.\n\nBy &quot;local name server&quot; do you mean something *very* local -- for example,\na standard nameserver we run on the same machine?\n\nThat would seem to offer other benefits -- such as minimizing the modes\nof DNS lookup we have to do and offloading caching to another piece of\nsoftware (at least at first).\n\n- Gordon\n\n----- Original Message -----\nFrom: G.B.Reddy\nTo: archive-crawler@yahoogroups.com\nCc: Raymie Stata ; wcr-team@...\nSent: Thursday, February 27, 2003 8:55 AM\nSubject: Re: [archive-crawler] Re: Web crawler work ??\n\n\nGordon and Raymie,\n\nHere goes the proposal for the asynchronous DNS lookup API implementation.\n\nWe shall implement a minimal resolver which is capable of sending DNS request packets and processing response packets in an\nasynchrounous nio fashion. This resolver class will contact a local name server and rely on it to do the actual lookup. The local\nname server will be configured to support recursion and better would be to use a name server which does lookup asynchronously. (\nSQUID has asynchronous DNS lookup facilities ).  Even if the local name server is not asynchrounous, our java resolver being\nasynchronous will be good enough since our primary goal is that we do not want any blocking code in our crawler implementation. This\nidea even sounds good considering the fact we would only reinvent the same wheel if we opt to implement a complete full-fledged\nresolver implementation which complies with the RFC 1035 and 1034. We can definitely implement this full-fledged resolver but the\nreal concern is that this would require a lot of testing and the efforts to make it rock solid in terms of robustness would be huge.\n\nSo, the various jobs that we would have to do to build our Simple Asynchronous DNS lookup API would be\n    -- Request packet formation and reply packet parsing in the exact RFC format.\n    -- Use non-blocking IO APIs and do UDP. (We might not need TCP since the name server is only in the local network.)\n    -- Do canonical name queries and A record queries.\n    -- Implement timeouts.\n    -- Implement caching based on TTL. ( This may have to be deferred as pointed by Raymie earlier. )\n    -- Integrate with SEDA.\n\nThanks,\nReddy\n\n----- Original Message -----\nFrom: Gordon Mohr\nTo: G.B.Reddy\nCc: Raymie Stata ; wcr-team@... ; archive-crawler@yahoogroups.com\nSent: Saturday, February 22, 2003 5:37 AM\nSubject: [archive-crawler] Re: Web crawler work ??\n\n\n[CC&#39;ing to archive-crawler@yahoogroups.com]\n\nReddy writes:\n\n&gt; On the first cut do we need to look at implementing an asynchronous DNS\n&gt; lookup mechanism. If we are not, then it is going to be two stages, viz.\n&gt; DNSCacheHandlingStage and ResolvingStage, that can be employed using the\n&gt; blocking DNS lookup calls in Java. The first stage, DNSCacheHandlingStage,\n&gt; would check if the entry is available in the cache. If available, he would\n&gt; set the resolved address in the CrawlURI object and enqueue it to the\n&gt; appropriate next stage. If the cache doesn&#39;t contain the entry, then he\n&gt; would pass the request to the Resolving stage which would call the\n&gt; InetAddress.getByName blocking method to resolve it. The getByName result\n&gt; would be set in the CrawlURI object as before and enqueued into the\n&gt; appropriate next stage. In addition to this, the Resolving stage will\n&gt; enqueue another event into the DNSCacheHandlingStage to enable him update\n&gt; his cache. So, the DNSCacheHandlingStage would be handling two types of\n&gt; events, one is the lookup events and the other is the update cache events.\n&gt;\n&gt; One problem here is that the InetAddress class does not expose its cache\n&gt; variables to its users. Even we cannot check if the cache has an entry\n&gt; before calling the getByName method. So, we should be disabling the java\n&gt; cache ( using the policy file ) and implementing our own caching mechanism.\n&gt; ( The DNSCacheHandlingStage would have to additionally do the job of\n&gt; throwing away the expired entries in the cache also.)\n&gt;\n&gt; Let me know your comments on this.\n\nThis looks like a good first cut. I&#39;m still working to improve my\nunderstanding of the best way to use the staged style, mostly by\nlooking at their HTTP and HTTP Server (Haboob) code.\n\nIt seems that they&#39;ve tended to use a single Stage object to do\nmany different steps/aspects of one process, by switching on the\ntype of QueueElement received.\n\nSo for example their seda.sandStorm.seda.apps.Haboob.http.HttpRecv\naccepts events of types....\n\n  - httpConnection\n  - httpRequest\n  - SinkClosedEvent\n  - timerEvent\n\nAnd their seda.sandStorm.lib.http.httpServer accepts events of\ntypes...\n\n  - ATcpInPacket\n  - ATcpConnection\n  - aSocketErrorEvent\n  - SinkDrainedEvent\n  - SinkCloggedEvent\n  - SinkClosedEvent\n  - ATcpListenSuccessEvent\n\nThey also use Sinks that are not associated with stages; rather,\nthey interface to unstaged components which nonetheless result in\nan eventual event to some supplied answer Sink. See for example\nseda.sandStorm.lib.http.httpConnection.\n\nSo perhaps as a matter of grouping related tasks, the same Stage object\nshould be re-entered over the course of a lookup, with different triggering\nevents. For example, you might want to reenter a single DNSResolvingStage\nover the course of cache lookup, lookup-initiation, result-receiving (or\ntimeout), etc. I&#39;m not sure; use your judgement as to how many stages are\nreally needed.\n\n&gt; P.S : We found some openly available async dns client APIs in C language.\n\nThat could be useful as a model. (I doubt we&#39;d want to call out to C\nfor this simple step, though -- and if we nailed down a truly async Java\nDNS facility, a lot of open source projects would probably be quite happy.)\n\nAlso: I heard back from Patrick Eaton about SEDA-style async HTTP client\ncode... he has a rough implementation for simple usage, and he knows of\nanother one at Berkeley which goes deeper into HTTP/1.1 conformance and\noptimal performance. I&#39;ve asked him to forward whatever additional code\nor details he can.\n\n- Gordon\n\n\n\n\nTo unsubscribe from this group, send an email to:\narchive-crawler-unsubscribe@yahoogroups.com\n\n\n\nYour use of Yahoo! Groups is subject to the Yahoo! Terms of Service.\n\n\nYahoo! Groups Sponsor\nADVERTISEMENT\n\n\n\n\nTo unsubscribe from this group, send an email to:\narchive-crawler-unsubscribe@yahoogroups.com\n\n\n\nYour use of Yahoo! Groups is subject to the Yahoo! Terms of Service.\n\n\n"}}