{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":280593181,"authorName":"Erik Hetzner","from":"Erik Hetzner &lt;erik.hetzner@...&gt;","profile":"e_hetzner","replyTo":"LIST","senderId":"ncOG8WwGupQLYbaCos4YcxIKQ9btbCiey6k_s19oH8LEhUjLMYJm8-m81FU-G-VaMD9bGoL8k8gQMjOnQ-U0cKlaZQLoJPafAoOw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Lowering stack size (-Xss)?","postDate":"1221242106","msgId":5471,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFAtSVJDLUVYQkUwMXlucnZET3YwMDAwMWI1ZEBFWC5VQ09QLkVEVT4=","inReplyToHeader":"PDQ4QzlDNkQ1LjMwODA4MDFAYXJjaGl2ZS5vcmc+CTwyQzVBM0VFRkQ1QTZGRjQ0QjlCNkE2QjI4MEE1QURGOTAzMUVBOEVBQEVYQ0hBTkdFTUFJTC5BRC5VQ09QLkVEVT4=","referencesHeader":"PFAtSVJDLUVYQkUwMUF3MTlEQnEwMDAwMTY4OUBFWC5VQ09QLkVEVT4JPDQ4Qzk3NUFELjcwNDA1MDhAYXJjaGl2ZS5vcmc+CTxQLUlSQy1FWEJFMDFxNkRxYUpZMDAwMDE3YzJARVguVUNPUC5FRFU+CTw0OEM5QzZENS4zMDgwODAxQGFyY2hpdmUub3JnPg=="},"prevInTopic":5470,"nextInTopic":0,"prevInTime":5470,"nextInTime":5472,"topicId":5467,"numMessagesInTopic":5,"msgSnippet":"At Thu, 11 Sep 2008 18:33:09 -0700, ... Thanks, Gordon. This is good to know. Our crawls generally have a single-domain target, but we do a lot of â€˜plus","rawEmail":"Return-Path: &lt;Erik.Hetzner@...&gt;\r\nX-Sender: Erik.Hetzner@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 48438 invoked from network); 12 Sep 2008 17:54:51 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m1.grp.re1.yahoo.com with QMQP; 12 Sep 2008 17:54:51 -0000\r\nX-Received: from unknown (HELO MAILGATE.UCOP.EDU) (128.48.123.92)\n  by mta18.grp.scd.yahoo.com with SMTP; 12 Sep 2008 17:54:51 -0000\r\nX-WSS-ID: 0K73GFI-01-CTM-01\r\nX-Received: from EX.UCOP.EDU (p-irc-exbe01.ucop.edu [128.48.122.86])\n\tby MAILGATE.UCOP.EDU (Tumbleweed MailGate 3.6.0) with ESMTP id 25AFDACB03E;\n\tFri, 12 Sep 2008 10:54:54 -0700 (PDT)\r\nX-Received: from gales.cdlib.org ([128.48.204.228]) by EX.UCOP.EDU with Microsoft SMTPSVC(6.0.3790.3959);\n\t Fri, 12 Sep 2008 10:54:50 -0700\r\nDate: Fri, 12 Sep 2008 10:55:06 -0700\r\nTo: archive-crawler@yahoogroups.com\r\nCc: Gordon Mohr &lt;gojomo@...&gt;\r\nIn-Reply-To: &lt;48C9C6D5.3080801@...&gt;\n\t&lt;2C5A3EEFD5A6FF44B9B6A6B280A5ADF9031EA8EA@...&gt;\r\nReferences: &lt;P-IRC-EXBE01Aw19DBq00001689@...&gt;\n\t&lt;48C975AD.7040508@...&gt;\n\t&lt;P-IRC-EXBE01q6DqaJY000017c2@...&gt;\n\t&lt;48C9C6D5.3080801@...&gt;\r\nUser-Agent: Wanderlust/2.15.5 (Almost Unreal) SEMI/1.14.6 (Maruoka)\n FLIM/1.14.9 (=?ISO-8859-4?Q?Goj=F2?=) APEL/10.7 Emacs/22.1\n (i486-pc-linux-gnu) MULE/5.0 (SAKAKI)\r\nMIME-Version: 1.0 (generated by SEMI 1.14.6 - &quot;Maruoka&quot;)\r\nContent-Type: multipart/signed;\n boundary=&quot;pgp-sign-Multipart_Fri_Sep_12_10:55:05_2008-1&quot;; micalg=pgp-sha1;\n protocol=&quot;application/pgp-signature&quot;\r\nContent-Transfer-Encoding: 7bit\r\nReturn-Path: erik.hetzner@...\r\nMessage-ID: &lt;P-IRC-EXBE01ynrvDOv00001b5d@...&gt;\r\nX-OriginalArrivalTime: 12 Sep 2008 17:54:50.0527 (UTC) FILETIME=[A7267AF0:01C91500]\r\nFrom: Erik Hetzner &lt;erik.hetzner@...&gt;\r\nSubject: Re: [archive-crawler] Lowering stack size (-Xss)?\r\nX-Yahoo-Group-Post: member; u=280593181; y=4iMCnw5vUzbfLbJ_yUVZymF3MoZEi0bMEUkjxpEZl5i5hIZM\r\nX-Yahoo-Profile: e_hetzner\r\n\r\n\r\n--pgp-sign-Multipart_Fri_Sep_12_10:55:05_2008-1\r\nContent-Type: multipart/mixed;\n boundary=&quot;Multipart_Fri_Sep_12_10:55:05_2008-1&quot;\r\n\r\n\r\n--Multipart_Fri_Sep_12_10:55:05_2008-1\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nAt Thu, 11 Sep 2008 18:33:09 -0700,\nGordon Mohr wrote:\n&gt; [=E2=80=A6]\n&gt;\n&gt; Si=\r\nnce each crawler will use some overhead from non-heap memory other\n&gt; than t=\r\nhread stacks -- such as file handles, memory-mapped-IO\n&gt; resources, zlib co=\r\nmpression buffers, etc. -- I&#39;m not surprised that\n&gt; with more crawlers, som=\r\newhat fewer threads can be spawned.\n&gt; \n&gt; If each crawler is truly aimed at =\r\nonly one domain-name (not\n&gt; including subdomains, but including occasional =\r\nfetches of offsite\n&gt; inline resources), then 2 threads should be enough: on=\r\ne that is\n&gt; always busy on the main site, and one that rotates among the\n&gt; =\r\noccasional other-referenced sites.\n\nThanks, Gordon. This is good to know. O=\r\nur crawls generally have a\nsingle-domain target, but we do a lot of =E2=80=\r\n=98plus one=E2=80=99 crawls: crawling a\nsingle domain plus any linked pages=\r\n, grabbing only the linked page. We\nalso do =E2=80=98single site=E2=80=99 c=\r\nrawls that are not actually a single domain;\nthey may have multiple subdoma=\r\nins, or perhaps just multiple, related\nsites. We could tailor max-toe-threa=\r\nds to these site characteristics\nbut it seems that leaving it at 5 should c=\r\nover the range of crawls\nthat we do here.\n \n&gt; &gt; But if I am not mistaken, e=\r\nven a stack overflow that kills a thread\n&gt; &gt; will not endanger the crawl or=\r\n the JVM, right?\n&gt; \n&gt; I don&#39;t believe it will, but I&#39;m not absolutely certa=\r\nin.\n&gt; \n&gt; StackOverflowError is a subclass of Error, which the Javadoc says =\r\n\n&gt; &quot;indicates serious problems that a reasonable application should not try=\r\n \n&gt; to catch. Most such errors are abnormal conditions.&quot; (This language \n&gt; =\r\nhasn&#39;t changed since Java 1.3.)\n&gt; \n&gt; Theoretically, a StackOverflowError co=\r\nuld happen at any method-call. \n&gt; Perhaps even, inside a JVM native routine=\r\n, due to a overflow on the C \n&gt; call-stack. So whatever operation was in pr=\r\nogress could be in an \n&gt; arbitrarily half-done and thus corrupt state, espe=\r\ncially if it was \n&gt; operating on objects shared with other threads.\n&gt; \n&gt; Ho=\r\nwever, I don&#39;t find StackOverflowErrors so abnormal given the \n&gt; recursive =\r\nimplementation of the Java regex support, and the kind of \n&gt; arbitrarily od=\r\nd input that can be encountered by broad web crawls. So, \n&gt; if we know a sp=\r\necific deeply-recursing regex match is a threat for a \n&gt; StackOverflowError=\r\n, is seems reasonable to me to catch and recover from \n&gt; that situation.\n\nI=\r\nt is too bad that Java=E2=80=99s regex library includes what seems to be a\n=\r\npretty poor implementation that gives stack overflows on certain\ninput. I b=\r\nelieve that Java=E2=80=99s regex library is the only place I=E2=80=99ve eve=\r\nr\nseen a stack overflow in Java that was not caused by infinite\nrecursion.\n=\r\n \n&gt; I don&#39;t expect anything in the Java-land regex implementation would \n&gt; =\r\nleave dangerous cruft around no matter where it was aborted, and our \n&gt; reg=\r\nex matching code essentially works on data local to the current \n&gt; thread. =\r\n *Maybe* a half-done-but-not-fully-completed native-code \n&gt; operation, like=\r\n a new object creation, could leave trouble that blows up \n&gt; at a later poi=\r\nnt... but I&#39;ve never noticed anything that looked like \n&gt; that, nor heard o=\r\nther crashes blamed on native data corruption due to \n&gt; stack overflows. So=\r\n I think it&#39;s safe.\n\nThis is good to know, although I would still be a bit =\r\nnervous as I\ndon=E2=80=99t want to bring down a lot of crawls (as you say b=\r\nelow) because\none encounters a long input string that the regexs choke on. =\r\nIt does\nlook that a 64-bit JVM + reduced max-toe-threads will give us many\n=\r\nmore crawlers per JVM, so it may in the end not be worth it to reduce\nthe s=\r\ntack size.\n\n&gt; Is there a reason you need all the crawlers in the same JVM, =\r\nrather\n&gt; than several JVMs on the same system?\n\nNot particularly. We run on=\r\ne crawler web service for each Heritrix JVM\ninstance, communicating via JMX=\r\n. If that JVM instance has maxed out\nits crawlers, the crawler service refu=\r\nses to start or queue crawls, so\nwe then need application level handling to=\r\n look for another crawler\nservice to use. That & the administrative overhea=\r\nd of having to handle\nstarting & stopping multiple JVMs is the reason that =\r\nI want to get as\nmany crawlers out of a single instance as possible. We are=\r\n looking at\nsome projects which will involve starting on the order of 1000 =\r\ncrawls\nand so we need to be prepared to handle a lot of crawlers; I would\np=\r\nrefer to manage 10 Heritrixen and not 50.\n\n&gt; Of course there&#39;s redundant ov=\r\nerhead with multiple JVMs, but I would\n&gt; also think that since there&#39;s a ri=\r\nsk that one crawl uniquely steps\n&gt; on some novel crashing or resource-deple=\r\nting bug, ruining all other\n&gt; crawls in the same JVM, some isolation would =\r\nalso be beneficial.\n&gt; Plus, the 64bit-addressing expansion might be even la=\r\nrger than the\n&gt; multiple JVM overheads.\n\nWe have been running 10 crawlers i=\r\nn one JVM with no problems for about\n6 months now, so I am somewhat confide=\r\nnt that if a) we have enough\nheap; and b) we do not reduce the stack size, =\r\nthings should run pretty\nwell even with ~100 crawlers in one JVM.\n\nA simple=\r\n class that I have for starting threads and counting the\nnumber we can star=\r\nt before getting OoMEs indicates that the x64 JVM in\n64-bit mode can start =\r\nabout 10 times as many threads as in 32-bit mode\nwith default stack size, s=\r\no switching to the 64bit JVM might in fact\nbe advantageous.\n\n&gt; [=E2=80=A6]\n=\r\n\nbest,\nErik\n\r\n--Multipart_Fri_Sep_12_10:55:05_2008-1\r\nContent-Type: text/plain; charset=US-ASCII\r\n\r\n;; Erik Hetzner, California Digital Library\n;; gnupg key id: 1024D/01DB07E3\n\r\n--Multipart_Fri_Sep_12_10:55:05_2008-1--\r\n\n\r\n--pgp-sign-Multipart_Fri_Sep_12_10:55:05_2008-1\r\nContent-Type: application/pgp-signature\r\n\r\n[ Attachment content not displayed ]\r\n--pgp-sign-Multipart_Fri_Sep_12_10:55:05_2008-1--\r\n\n"}}