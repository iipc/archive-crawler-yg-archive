{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":6903103,"authorName":"Tom Emerson","from":"Tom Emerson &lt;Tree@...&gt;","profile":"tree02139","replyTo":"LIST","senderId":"2vTGpQxipEvYwUnZlWdUrx9x0fXkc7-NAN3KcQVqqRmqTWf1TTdU14Vu5kdjxLhfQ4cOIHhglzYDDZJeWKHJx_S5BNoBIA0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Re: user manual?","postDate":"1097768490","msgId":1088,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE2NzUwLjQwNDkwLjE2NTAxNS41MzU3MzZAdGlwaGFyZXMuYmFzaXN0ZWNoLm5ldD4=","inReplyToHeader":"PDQxNkQ4QkFCLjQwNTAxMDBAYXJjaGl2ZS5vcmc+","referencesHeader":"PGNram5raytobjJoQGVHcm91cHMuY29tPgk8NDE2RDhCQUIuNDA1MDEwMEBhcmNoaXZlLm9yZz4="},"prevInTopic":1085,"nextInTopic":0,"prevInTime":1087,"nextInTime":1089,"topicId":1078,"numMessagesInTopic":7,"msgSnippet":"... [...] ... I don t think you need the mid-fetch filter, but I may be missing something. ... Yes, one regexp will give you better performance. The one stack","rawEmail":"Return-Path: &lt;Tree@...&gt;\r\nX-Sender: Tree@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 65580 invoked from network); 14 Oct 2004 15:42:34 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m8.grp.scd.yahoo.com with QMQP; 14 Oct 2004 15:42:34 -0000\r\nReceived: from unknown (HELO mail2.basistech.net) (199.88.205.1)\n  by mta4.grp.scd.yahoo.com with SMTP; 14 Oct 2004 15:42:34 -0000\r\nReceived: from mail3.basistech.net ([10.1.1.99]) by mail2.basistech.net with Microsoft SMTPSVC(6.0.3790.211);\n\t Thu, 14 Oct 2004 11:41:26 -0400\r\nReceived: from tiphares.basistech.com ([10.1.3.65]) by mail3.basistech.net with Microsoft SMTPSVC(6.0.3790.0);\n\t Thu, 14 Oct 2004 11:42:00 -0400\r\nReceived: by tiphares.basistech.com (Postfix, from userid 5007)\n\tid 4923D31C164; Thu, 14 Oct 2004 11:41:30 -0400 (EDT)\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nMessage-ID: &lt;16750.40490.165015.535736@...&gt;\r\nDate: Thu, 14 Oct 2004 11:41:30 -0400\r\nTo: archive-crawler@yahoogroups.com\r\nIn-Reply-To: &lt;416D8BAB.4050100@...&gt;\r\nReferences: &lt;ckjnkk+hn2h@...&gt;\n\t&lt;416D8BAB.4050100@...&gt;\r\nX-Mailer: VM 7.18 under Emacs 21.2.1\r\nReturn-Path: tree@...\r\nX-OriginalArrivalTime: 14 Oct 2004 15:42:01.0018 (UTC) FILETIME=[58A729A0:01C4B204]\r\nX-eGroups-Remote-IP: 199.88.205.1\r\nFrom: Tom Emerson &lt;Tree@...&gt;\r\nReply-To: tree@...\r\nSubject: Re: [archive-crawler] Re: user manual?\r\nX-Yahoo-Group-Post: member; u=6903103\r\nX-Yahoo-Profile: tree02139\r\n\r\nstack writes:\n&gt; robeger wrote:\n[...]\n&gt; &gt;Sounds like what I want to do - just grab text content.  So I&#39;d guess\n&gt; &gt;I need to set up mid-fetch and writer-stage ContentTypeRegExp filters\n&gt; &gt;to only allow text/html and text/plain, and set up a pre-fetch\n&gt; &gt;URIRegExp filter with the regexp you based on Igor&#39;s posting.\n&gt;\n&gt; The above sounds like a decent tactic.\n\nI don&#39;t think you need the mid-fetch filter, but I may be missing something.\n\n&gt; &gt;Regular expressions are not my strong suit though, so would I add just\n&gt; &gt;a filter for each content type, or a single combined one?\n&gt; One regex would probably be more performant.  Would a regex of \n&gt; &#39;^&#92;s*text/.*$&#39; suit your purposes?  This would get text/plain, \n&gt; text/html, text/xml, etc. (It matches anything that may or may not have \n&gt; leading whitespace followed by &#39;text/&#39; followed by anything).  Be aware \n&gt; that the mimetype test will go against content-type strings that could \n&gt; look like this: &#39;text/html; charset=&quot;UTF-8&quot; which you want your \n&gt; content-type regex to include (The above suggested regex will work for \n&gt; such a case).\n\nYes, one regexp will give you better performance. The one stack gives\nwill work. I have been using &#39;(?i)text/html.*&#39; in my crawls since I\nonly want HTML, and it works fine. The &#39;(?i)&#39; (case-insensitive) is\nprobably overkill, now that I look at it.\n\nIf you want to limit to specific types, then you can use something\nlike &#39;text/(html|plain).*&#39; to only capture the types you want.\n\n    -tree\n\n-- \nTom Emerson                                          Basis Technology Corp.\nSoftware Architect                                 http://www.basistech.com\n  &quot;Beware the lollipop of mediocrity: lick it once and you suck forever&quot;\n\n"}}