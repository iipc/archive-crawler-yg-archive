{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":95697582,"authorName":"G.B.Reddy","from":"&quot;G.B.Reddy&quot; &lt;reddy@...&gt;","profile":"gbreddysoft","replyTo":"LIST","senderId":"Yx44Vqyn_rg16trLhKjSvvJ773TdBlpAxnnyEVxU2nHS5h1pLXFS6I7vdb9wdLrZBbwScQjaIKiQIMk5Ys8N0OZbLrWOF2IwMpfbEDk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] SEDA Performance !!","postDate":"1050685350","msgId":48,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE3N2QwMWMzMDVjYyQ0Yzk3ZjQ0MCRkNTAwYThjMEB0aWRlbHBhcmsuaXNvZnR0ZWNoaW5kaWEuY29tPg==","referencesHeader":"PDA0ZmIwMWMzMDA3NyRmZGNkZDg2MCRkNTAwYThjMEB0aWRlbHBhcmsuaXNvZnR0ZWNoaW5kaWEuY29tPiA8MDAyMzAxYzMwMmI4JDk0ZmJlNTAwJDQ4ZjBlZGQxQFdPUktTVEFUSU9OMjE+IDwwZWQ0MDFjMzAzNzckN2RiNjVhMDAkZDUwMGE4YzBAdGlkZWxwYXJrLmlzb2Z0dGVjaGluZGlhLmNvbT4gPDEyYTUwMWMzMDQzNSRlMTUzNWFlMCRkNTAwYThjMEB0aWRlbHBhcmsuaXNvZnR0ZWNoaW5kaWEuY29tPg=="},"prevInTopic":47,"nextInTopic":49,"prevInTime":47,"nextInTime":49,"topicId":42,"numMessagesInTopic":7,"msgSnippet":"Gordon, I had a look into the SEDA code to understand the synchronization issues which we agreed on the day of discussion could be the reason behind low","rawEmail":"Return-Path: &lt;reddy@...&gt;\r\nX-Sender: reddy@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (EGP: mail-8_2_6_5); 18 Apr 2003 17:05:21 -0000\r\nReceived: (qmail 30632 invoked from network); 18 Apr 2003 17:05:21 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m14.grp.scd.yahoo.com with QMQP; 18 Apr 2003 17:05:21 -0000\r\nReceived: from unknown (HELO pub.isofttechindia.com) (203.199.202.17)\n  by mta3.grp.scd.yahoo.com with SMTP; 18 Apr 2003 17:05:17 -0000\r\nReceived: from ReddyGB (ReddyGB.isofttechindia.com [192.168.0.213])\n\tby pub.isofttechindia.com (8.11.0/8.11.0) with SMTP id h3IGdhY09208\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Fri, 18 Apr 2003 22:09:43 +0530\r\nMessage-ID: &lt;177d01c305cc$4c97f440$d500a8c0@...&gt;\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nReferences: &lt;04fb01c30077$fdcdd860$d500a8c0@...&gt; &lt;002301c302b8$94fbe500$48f0edd1@WORKSTATION21&gt; &lt;0ed401c30377$7db65a00$d500a8c0@...&gt; &lt;12a501c30435$e1535ae0$d500a8c0@...&gt;\r\nSubject: Re: [archive-crawler] SEDA Performance !!\r\nDate: Fri, 18 Apr 2003 22:32:30 +0530\r\nOrganization: ISoftTech\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_177A_01C305FA.6623C910&quot;\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4920.2300\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4920.2300\r\nX-MailScanner: Found to be clean\r\nX-eGroups-From: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nFrom: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nReply-To: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nX-Yahoo-Group-Post: member; u=95697582\r\nX-Yahoo-Profile: gbreddysoft\r\n\r\n\r\n------=_NextPart_000_177A_01C305FA.6623C910\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nGordon,\n\nI had a look into the SEDA code to understand the synchronization =\r\nissues which we agreed on the day of discussion could be the reason behind =\r\nlow throughput. I found that there is only a very limited synchronization i=\r\nn the code which cannot be treated as an overhead. I also noticed in our te=\r\nsts that the average packet length in one read is almost equal to the one i=\r\nn the Java Downloader-With sleep option. So, this means that aggregation of=\r\n packets is indeed happening; but still the fact that CPU usage is about 50=\r\n to 60% makes us feel that somebody else is comsuming it. This can only be =\r\nattributed to the SEDA overheads of multiple threads and other object alloc=\r\nations and the GC associated with it.\n\nSurprisingly, JDK 1.4.2 beta is givi=\r\nng a very efficient CPU usage on the SEDA downloader. The CPU usage goes do=\r\nwn to about less than 5% compared to the 50 to 60% CPU usage of JDK 1.4.1. =\r\nHowever the throughput goes down to about 2 MBytes/sec compared to the clos=\r\ne to 3 MBytes/sec of JDK 1.4.1. I am still trying to understand the drastic=\r\n effect on CPU usage. I am doing more tests on this and will get the result=\r\ns on Monday.\n\nI will consolidate all these findings till date in the docume=\r\nnt and send it for you to get the complete picture.\n\nPS: I had a look into =\r\nthe seda http package to find the trick that Raymie mentioned which would a=\r\nvoid both the maintanence of a hashmap and the subsequent synchronization a=\r\nssociated with it. They maintain a hashtable ( ATcpConnection Vs. httpConne=\r\nction ) which is populated when a new connection is made. This httpConnecti=\r\non object is the SinkIF which primarily has neat interfaces for parsing the=\r\n http request inpackets and other enqueue methods for sending back the URL =\r\ncontents through the connection to the webclient. So, when ATcpInPackets ar=\r\nrive, the httpConnection is fetched from the hashtable and the parsePacket =\r\nmethods are called on it. Other than being neat interfaces, this does not a=\r\nvoid the hash being maintained. ( The hash being java.util.Hashtable, it is=\r\n internally synchronized.). On the other hand, attaching arbitrary objects =\r\nto the request is another way of avoiding the hash of requests; but this ha=\r\nsh/list cannot be avoided if we have to do timeout/retry handing.\n\nThanks,\n=\r\nReddy\n\n\n  ----- Original Message ----- \n  From: G.B.Reddy \n  To: archive-cr=\r\nawler@yahoogroups.com \n  Sent: Wednesday, April 16, 2003 10:03 PM\n  Subject=\r\n: Re: [archive-crawler] SEDA Performance !!\n\n\n  Gordon,\n\n  The various test=\r\ns and the results that we got today are as follows. ( In the below lines, J=\r\nava downloader means the HTTP downloader which we used earlier to measure t=\r\nhe java nio performance.)\n\n  - Tried enabling the cache on the webservers. =\r\nGot only a 0.5 to 0.8 MBytes/sec improvement on the Java Downloader code. T=\r\nhis could be lesser on SEDA downloader. Since the throughput rise was not t=\r\noo high, we planned to proceed with other tests with no cache.\n  - Measured=\r\n the memory requirements of the SEDA downloader. The required memory is les=\r\ns than 20 MB. So, we decided not to use the JVM min/max extended cmd line m=\r\nemory settings. We preferred to do this, since the Java Downloader readings=\r\n were not done with such settings earlier and will be difficult to compare =\r\nsince the GC logic might be different if there was a memory setting.\n      =\r\n    - 100 Connections - 7 MB approx \n          - 250 Connections - 15 MB ap=\r\nprox \n          - 500 Connections - 20 MB approx\n  - Measured the throughpu=\r\nt with the HotSpot -server option of JVM. \n          - This did not yield a=\r\nny big noticible benefits. It is because of too much I/O in our code which =\r\nin any case the JVM cannot optimize.\n\n\n  Things to discuss tomorrow on SEDA=\r\n Performance:\n\n  - SEDA Downloader uses not more than 60% CPU. Probably if =\r\nit uses the rest, it might acheive more throughput similar to our &quot;without =\r\nsleep&quot; tests on Java Downloader. CPU not being used completely could be bec=\r\nause of two reasons; \n      -- One is that we are not pumping enough reques=\r\nts which is not the case. We monitored this and we see that the connectedUR=\r\nLCount at any point is very close to the cmd line param. For instance, in c=\r\nase of 500 connections, the average was more than 470.\n      -- Other is th=\r\nat SEDA threads are getting blocked in some synchronization locks. Should h=\r\nave to identify these bottlenecks.\n\n  - The test environment being differen=\r\nt between SEDA benchmarks and our tests, it is difficult to correlate. Prob=\r\nably we can run the benchmarking test scripts bundled in SEDA in our local =\r\nenvironment so that it will be easy to compare against our tests. I haven&#39;t=\r\n yet completely looked into their test scripts.\n\n\n  The updated schedule is=\r\n also attached. We shall also discuss about this tomorrow.\n\n\n  Thanks,\n  Re=\r\nddy\n\n    ----- Original Message ----- \n    From: G.B.Reddy \n    To: archive=\r\n-crawler@yahoogroups.com \n    Sent: Tuesday, April 15, 2003 11:20 PM\n    Su=\r\nbject: Re: [archive-crawler] SEDA Performance !!\n\n\n    Gordon,\n\n    We can =\r\nhave our call as suggested on Wednesday 8:30p PT (3:30UTC).\n\n    The test s=\r\nources used are checked into CVS. Look for the packages \n    - test.javanio=\r\n.http - Contains the Async and Sync http downloader implementation written =\r\nto benchmark the java nio apis.\n    - test.sedanio.http - Contains the SEDA=\r\n aSocket based http downloader ( exactly similar to its javanio counterpart=\r\n).\n\n    As you said, the maxConnections is not a strict target; so the actu=\r\nal number of connections at any point could be less than it; but not more.\n=\r\n\n    We had earlier raised the value of maxClients parameter suitably in ht=\r\ntpd.conf to allow apache to service more than the default 150 clients simul=\r\ntaneously.\n\n    Today we found that the sandstorm script by default ships w=\r\nith ( -ms128M -mx1024M ) options. This setting results in GC getting called=\r\n very lately but when called, it takes about a minute to complete. This is =\r\nthe reason behind the previous test results showing very less throughput ab=\r\nove 100 simulataneous connections. After removing it, we see the following =\r\nthroughput.\n\n    100 connections - about 4.0 Mbytes/sec ( This is same as t=\r\nhe reading we got before )\n    250 connections - about 2.7 Mbytes/sec ( Thi=\r\ns was less than 1 Mbytes/sec before )\n    500 connections - about 1.8 Mbyte=\r\ns/sec ( This was less than 1 Mbytes/sec before )\n\n    which means that the =\r\nthroughput indeed degrades with the number of connections; but not as bad a=\r\ns before.\n\n    We also ran another quick test wherein we used NBIO instead =\r\nof the java NIO. We noticed that the throughput degraded to 1.8 Mbytes/sec =\r\nin the 100 connections case. This makes things even more fishy.\n\n    The di=\r\nfferences between our setup and the setup used by the SEDA benchmarks are\n\n=\r\n    Crawler Setup                    -- SEDA benchmark Setup\n\n    - Sun JDK=\r\n 1.4.1                 -- IBM JDK 1.1.8\n    - JDK 1.4 NIO library          =\r\n-- NBIO library\n    - 100 Mbps Ethernet          -- Gigabit Ethernet\n    - =\r\nNo Cache on Webserver  -- Must have had caching.\n\n    The other test combin=\r\nations we are running now over our SEDA Http downloader are\n    - Try java =\r\n-server option.\n    - Try JDK 1.4.2 beta.\n    - Try IBM JDK 1.4\n    - Try I=\r\nBM JDK 1.1.8 with NBIO - This is the closest comparison that we can do agai=\r\nnst SEDA benchmarks.\n    - Do tests enabling the web server cache.\n\n\n    Th=\r\nanks,\n    Reddy\n\n      ----- Original Message ----- \n      From: Gordon Moh=\r\nr \n      To: archive-crawler@yahoogroups.com \n      Sent: Tuesday, April 15=\r\n, 2003 12:33 AM\n      Subject: Re: [archive-crawler] SEDA Performance !!\n\n\n=\r\n      Thanks for the updated analysis!\n\n      However, I am concerned that =\r\nthe results may be more a result of the\n      test design or the specific H=\r\nTTP implementation we&#39;re using than the\n      underlying NIO/aSocket code, =\r\nbecause the results diverge so greatly\n      from SEDA&#39;s own published perf=\r\normance testing.\n\n      For example, the results at...\n\n        http://www.=\r\ncs.berkeley.edu/~mdw/proj/sandstorm/iocore-bench/index.html\n\n      ...show =\r\nstrong throughput up through 1,000 simultaneous connections,\n      indeed e=\r\nven up past 10,000 simultaneous connections.\n\n      Also, given the note ab=\r\nout the 1.4.1 -&gt; 1.4.2 JRE NIO change, a test\n      under 1.4.2 is necessar=\r\ny to truly evaluate either of the asynchronous\n      options.\n\n      Some o=\r\nther questions about the test setup:\n\n      - the meaning of &quot;maxConnection=\r\ns&quot; is unclear to me; it seems it\n         is not a &quot;maximum&quot; but a &quot;target&quot;=\r\n, and the actual number of\n         connections at any point in time might =\r\nbe larger or smaller.\n         Is this right?\n\n      - do you have any othe=\r\nr intrumentation which suggests it is\n         specifically garbage collect=\r\nion which is causing the degradation\n         of the SEDA approach above 10=\r\n0 connections?\n\n      - if some of the setups are hitting garbage-collectio=\r\nn or other\n         resource thresholds, more info about the test machine/V=\r\nM would\n         be helpful: RAM, VM options used (server hotspot? heap/sta=\r\nck\n         sizes? etc.)\n\n      - with only 2 Apache web servers to one cli=\r\nent process, we may\n         be testing/hitting Apache performance limits a=\r\ns much as Java/IO\n         limits. For example, default Apache will only ac=\r\ncept 150 simultaneous\n         clients; by my reading of the test setup thi=\r\ns means that no\n         matter how many connections the LAN test attempted=\r\n, it would\n         never succeed on more than 300 (across the two test Apa=\r\nches)\n         at once -- so any LAN test numbers over 300 aren&#39;t really\n  =\r\n       indicative of Java performance.\n\n      - is the test code something =\r\nyou could check into CVS?\n\n      These figures are all very interesting, an=\r\nd even if quirks in\n      the test are pushing results one way or the other=\r\n, that will\n      usually generate useful info, too.\n\n      - Gordon\n\n     =\r\n ----- Original Message -----\n      From: G.B.Reddy\n      To: archive-crawl=\r\ner@yahoogroups.com\n      Sent: Friday, April 11, 2003 3:16 PM\n      Subject=\r\n: Re: [archive-crawler] SEDA Performance !!\n\n\n      Gordon,\n\n      Please f=\r\nind attached the performance report on the SEDA aSocket NIO layer. Look for=\r\n the last section in the document &quot;SEDA NIO\n      Socket Framework&quot; and the=\r\n &quot;Summary&quot; section is also updated with the results. An excel sheet with th=\r\ne readings and the graph is also\n      attached for reference.\n\n      We wo=\r\nuld like to have a brief chat with you on Tuesday 8:30 pm PST ( Monday is a=\r\n holiday for us on the eve of Tamil new year ) about\n      SEDA socket laye=\r\nr and generally about the various tasks and other proceedings.\n\n      JAnt =\r\nBuild Status :\n\n      - The proposed directory structure is not yet created=\r\n since we are still in the Anecdote prototyping stage and we do not have an=\r\ny\n      complete package to checkin. I have modified the ant script a bit t=\r\no suit the present Anecdote structure and activated a cronjob\n      over it=\r\n. I have also added you and Raymie to the notification mail-ids list so tha=\r\nt you would also get the nightly build mails. You\n      could get the night=\r\nly build from the location &quot;/home/users/w/wc/wcr-team/NightlyBuilds&quot; as sta=\r\nted in the mail on\n      shell.sourceforge.net. You could use your own logi=\r\nns and do SFTP to access the NightlyBuilds directory. It has read permissio=\r\nns for\n      all.\n\n      - I am not sure why the stata labs libraries ( st.=\r\nata.* packages) have been checked in as a separate CVS module. Are we plann=\r\ning to\n      upgrade/modify those sources and maintain ourselves. If not, w=\r\ne could just have the built classes in a jar in CVS lib directory as\n      =\r\nwe had done for other third party libraries. Otherwise, if we want to maint=\r\nain it, then would we require that to be a separate CVS\n      module ? I th=\r\nink it would be better if we have one CVS root module under which everythin=\r\ng is put in. Probably, in such cases, we can\n      have a &quot;thiryPartySrc&quot; d=\r\nirectory to maintain such sources within our main module &quot;OpenWebCrawler&quot; i=\r\ntself.\n\n      Thanks,\n      Reddy\n\n\n      ----- Original Message -----\n    =\r\n  From: G.B.Reddy\n      To: archive-crawler@yahoogroups.com\n      Sent: Fri=\r\nday, April 11, 2003 12:46 AM\n      Subject: Re: [archive-crawler] Status !!=\r\n\n\n\n      Gordon,\n\n      As you say, the aSocketInputStream is needed only i=\r\nf the client stage is multithreaded. But the oceanstore &quot;HttpClient&quot; stage =\r\nis\n      internally using it to do sequencing which is unnecessary since an=\r\nyway the &quot;HttpClient&quot; class implements\n      SingleThreadedEventHandlerIF. =\r\nI have removed these overheads to do my performance testing.\n\n      After s=\r\ntarting to test the SEDA socket performance, I ran into three problems in t=\r\nhe SEDA&#39;s socket framework.\n\n      - Newly discovered bug : The seda intern=\r\nals throw ConcurrentModification exceptions when iterating through the sele=\r\nctor&#39;s registered\n      keys. This exceptions is highly reproducible when m=\r\nore number of concurrent downloads happen. Synchronization has not been tak=\r\nen\n      care when the ReadEventHandler tries to deregister the socket from=\r\n the selector of the WriteEventHandler. ( As you would know, there\n      ar=\r\ne three stages ReadStage, WriteStage and ListenStage in the seda socket fra=\r\nmework. Each has its own java Selector instance and\n      they wait on its =\r\nselect call. The ReadStage is the one that determines that a connection is =\r\nterminated. When this happens, it\n      directly tries to make a deregister=\r\n call on the WriteStage&#39;s selector on this socket object. So, easily concur=\r\nrent mod exceptions\n      are thrown when my downloader stage is pumping re=\r\nquests and making new connections). I shall raise this bug to the author an=\r\nd I am\n      proceeding with my fix on it. Because of this unsynchronized c=\r\nommunication, a lot of CancelledKeyExceptions are also thrown in the\n      =\r\ninternals.\n\n      - A documented bug : ConcurrentModification exceptions wh=\r\nen iterating through the selector&#39;s selectedKeys. This is also due to no\n  =\r\n    synchronization. Multiple threads are allowed by the seda internals to =\r\ndo select calls on a single selector. (Look for the docs in\n      seda.sand=\r\nStorm.lib.aSocket.nio.NIOSelectSource.doPoll method). I will have to look f=\r\nor doing some minimal synchronization as stated\n      in there.\n\n      - Th=\r\nere has been other rare NullPointerExceptions and IllegalArgumentException =\r\nin some places. I will have to look into their\n      implications.\n\n      I=\r\n will fix the last two problems and get the performance measurements tomorr=\r\now.\n\n      Thanks,\n      Reddy\n\n      ----- Original Message -----\n      Fr=\r\nom: Gordon Mohr\n      To: archive-crawler@yahoogroups.com\n      Sent: Wedne=\r\nsday, April 09, 2003 12:17 AM\n      Subject: Re: [archive-crawler] Status !=\r\n!\n\n\n      Thanks for the update!\n\n      The Ocenstore libhttp package is kn=\r\nown to be very rough; really just a\n      placeholder or starting point for=\r\n what we&#39;d need. (Note that there&#39;s\n      also an alternative &#39;libhttp2&#39; pa=\r\nckage in OceanStore, but it seemed both\n      unused in their other code an=\r\nd more elaborate, so I haven&#39;t tried\n      to use it yet.)\n\n      The TCP r=\r\nesponse ordering capabilities to aSocketInputStream only seem\n      necessa=\r\nry if you have multiple threads reading from the same socket -- which\n     =\r\n I think can, and probably should, be avoided.\n\n      I&#39;m looking forward t=\r\no seeing the test results.\n\n      I like the BuildDesign proposal; please m=\r\nove forward with creating\n      that structure for a new module on the sour=\r\nceforge CVS. However,\n      please use the module name of &quot;ArchiveOpenCrawl=\r\ner&quot; (instead of\n      &quot;Web-crawler&quot;).\n\n      Thanks!\n\n      - Gordon\n\n     =\r\n ----- Original Message -----\n      From: G.B.Reddy\n      To: archive-crawl=\r\ner@yahoogroups.com\n      Sent: Tuesday, April 08, 2003 11:04 AM\n      Subje=\r\nct: [archive-crawler] Status !!\n\n\n      Gordon,\n\n      I am presently worki=\r\nng on the SEDA socket overhead determination work. I will get the results i=\r\nn the next two days. Some initial\n      insights into it are\n      - Oceans=\r\ntore manages both Tx and Rx in a single stage.\n      - It just holds the re=\r\nsponses in memory only. It does not write into tmp files if they are huge.\n=\r\n      - TCP response reordering is done by using the seda.sandStorm.lib.aSo=\r\ncket.aSocketInputStream class which reorders packets according\n      to the=\r\n ATcpInPacket sequence number.\n\n      The test that will be done :\n      - =\r\nPort the downloader code ( which we had written earlier during the java nio=\r\n performance tests ) to SEDA framework and use the\n      OceanStore library=\r\n for HTTP fetching. The same tests that we did for the downloader will be r=\r\nepeated in this oceanstore setup. We\n      are removing some oceanstore cod=\r\ne to make it similar. The result of this test would tell us the percentage =\r\nof overhead imposed by\n      the SEDA framework.\n\n\n      We are also done w=\r\nith the JAnt packaging scripts. It uses the present CVS structure itself. I=\r\n shall create the proposed CVS\n      structure after you approve it. Today =\r\nwe have put the cronjob for testing the web hosting part of nightly builds.=\r\n We shall enable it\n      for all tomorrow. As of now, only the last nightl=\r\ny build will be available for download. More changes need to be made for ho=\r\nsting\n      every nightly build of a week.\n\n      Thanks,\n      Reddy\n\n    =\r\n  Yahoo! Groups Sponsor\n      ADVERTISEMENT\n\n\n\n\n      To unsubscribe from t=\r\nhis group, send an email to:\n      archive-crawler-unsubscribe@yahoogroups.=\r\ncom\n\n\n\n      Your use of Yahoo! Groups is subject to the Yahoo! Terms of Se=\r\nrvice.\n\n\n\n      To unsubscribe from this group, send an email to:\n      arc=\r\nhive-crawler-unsubscribe@yahoogroups.com\n\n\n\n      Your use of Yahoo! Groups=\r\n is subject to the Yahoo! Terms of Service.\n\n\n\n      To unsubscribe from th=\r\nis group, send an email to:\n      archive-crawler-unsubscribe@yahoogroups.c=\r\nom\n\n\n\n      Your use of Yahoo! Groups is subject to the Yahoo! Terms of Ser=\r\nvice.\n\n\n      Yahoo! Groups Sponsor\n      ADVERTISEMENT\n\n\n\n\n      To unsubs=\r\ncribe from this group, send an email to:\n      archive-crawler-unsubscribe@=\r\nyahoogroups.com\n\n\n\n      Your use of Yahoo! Groups is subject to the Yahoo!=\r\n Terms of Service.\n\n\n\n      To unsubscribe from this group, send an email t=\r\no:\n      archive-crawler-unsubscribe@yahoogroups.com\n\n\n\n      Your use of Y=\r\nahoo! Groups is subject to the Yahoo! Terms of Service. \n\n\n\n    To unsubscr=\r\nibe from this group, send an email to:\n    archive-crawler-unsubscribe@yaho=\r\nogroups.com\n\n\n\n    Your use of Yahoo! Groups is subject to the Yahoo! Terms=\r\n of Service. \n\n\n        Yahoo! Groups Sponsor \n              ADVERTISEMENT\n=\r\n             \n       \n       \n\n  To unsubscribe from this group, send an em=\r\nail to:\n  archive-crawler-unsubscribe@yahoogroups.com\n\n\n\n  Your use of Yaho=\r\no! Groups is subject to the Yahoo! Terms of Service. \n\n\r\n------=_NextPart_000_177A_01C305FA.6623C910\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 5.50.4134.600&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;&lt;/STYLE&gt;=\r\n\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Gordon,&lt;=\r\n/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FON=\r\nT face=3DArial size=3D2&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;\n&lt;DIV&gt;I had a loo=\r\nk into the SEDA code to understand the synchronization issues \nwhich we agr=\r\need on the day of discussion could be the reason behind low \nthroughput.&nb=\r\nsp;I found that there&nbsp;is only a very limited synchronization \nin the c=\r\node which cannot be treated as an overhead. I also noticed in our tests \nth=\r\nat the average packet length in one read is almost&nbsp;equal to the one in=\r\n \nthe Java Downloader-With sleep option. So, this means that aggregation of=\r\n \npackets is indeed happening; but still the fact that CPU usage is about 5=\r\n0 to \n60% makes us feel that somebody else is comsuming it. This can only b=\r\ne \nattributed to the SEDA overheads of multiple threads and other object \na=\r\nllocations and the GC associated with it.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;&lt;/FONT&gt;&lt;/D=\r\nIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Surprisingly,&nbsp;JDK 1.4.2 beta is g=\r\niving a very \nefficient CPU usage on the SEDA downloader. The CPU usage goe=\r\ns down to about \nless than 5% compared to the 50 to 60% CPU usage of JDK 1.=\r\n4.1. However the \nthroughput goes down to about 2 MBytes/sec compared to th=\r\ne close to&nbsp;3 \nMBytes/sec of JDK 1.4.1. I am still trying to understand=\r\n the drastic effect on \nCPU usage. I am doing more tests&nbsp;on this and w=\r\nill get the results on \nMonday.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT f=\r\nace=3DArial size=3D2&gt;I will consolidate all these findings till date in \nth=\r\ne document&nbsp;and send it for you to get the complete picture.&lt;/FONT&gt;&lt;/DI=\r\nV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;PS: I had a look into the seda http package to fi=\r\nnd the trick that Raymie \nmentioned which would avoid both the maintanence =\r\nof a hashmap and the subsequent \nsynchronization associated with it. They m=\r\naintain a hashtable ( ATcpConnection \nVs. httpConnection ) which is populat=\r\ned when a new connection is made. This \nhttpConnection object is the SinkIF=\r\n&nbsp;which&nbsp;primarily&nbsp;has neat \ninterfaces for&nbsp;parsing the h=\r\nttp request inpackets and other enqueue methods \nfor sending back the URL c=\r\nontents through the connection to the webclient. So, \nwhen ATcpInPackets ar=\r\nrive, the httpConnection is fetched from the hashtable and \nthe parsePacket=\r\n methods are called on it.&nbsp;Other than being neat \ninterfaces,&nbsp;thi=\r\ns does not avoid the hash being maintained.&nbsp;( The hash \nbeing java.uti=\r\nl.Hashtable, it is internally synchronized.). On the other hand, \nattaching=\r\n arbitrary objects to the request is another way of avoiding the hash \nof r=\r\nequests; but this hash/list cannot be avoided if we have to do timeout/retr=\r\ny \nhanding.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2=\r\n&gt;Thanks,&lt;/FONT&gt;&lt;/DIV&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Reddy&lt;/FONT&gt;&lt;/=\r\nDIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;BLOCKQUOTE \nstyle=3D&quot;PADDING-RIGHT: =\r\n0px; PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #000000 2px solid; M=\r\nARGIN-RIGHT: 0px&quot;&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;----- Original Message=\r\n ----- &lt;/DIV&gt;\n  &lt;DIV \n  style=3D&quot;BACKGROUND: #e4e4e4; FONT: 10pt arial; fon=\r\nt-color: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; \n  &lt;A title=3Dreddy@... href=3D&quot;mail=\r\nto:reddy@...&quot;&gt;G.B.Reddy&lt;/A&gt; \n  &lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt =\r\narial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A \n  title=3Darchive-crawler@yahoogroups.com \n  href=3D&quot;=\r\nmailto:archive-crawler@yahoogroups.com&quot;&gt;archive-crawler@yahoogroups.com&lt;/A&gt;=\r\n \n  &lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Sent:&lt;/B&gt; Wednesday, April =\r\n16, 2003 10:03 \n  PM&lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Subject:&lt;/B=\r\n&gt; Re: [archive-crawler] SEDA \n  Performance !!&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR&gt;&lt;/DIV&gt;\n  &lt;D=\r\nIV&gt;&lt;FONT face=3DArial size=3D2&gt;Gordon,&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DAri=\r\nal size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;&lt;FONT face=3DArial size=3D2&gt;\n  &lt;DIV&gt;&lt;FONT fa=\r\nce=3DArial size=3D2&gt;The various tests and the results that we got \n  today =\r\nare as follows. ( &lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;In the below lines, \n =\r\n Java downloader means the HTTP downloader which we used earlier to measure=\r\n the \n  java nio performance.)&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- Tried enablin=\r\ng the cache on the webservers. Got \n  only a 0.5 to 0.8 MBytes/sec improvem=\r\nent on the Java Downloader code. This \n  could be lesser on SEDA downloader=\r\n. Since the throughput rise was not too \n  high,&nbsp;we planned to proceed=\r\n with other&nbsp;tests with no \n  cache.&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DA=\r\nrial size=3D2&gt;- Measured the memory requirements of the SEDA \n  downloader.=\r\n&nbsp;The required memory is less than 20 MB. So, we&nbsp;decided \n  not to=\r\n use the&nbsp;JVM min/max extended cmd line memory settings. We \n  preferre=\r\nd to do this, since the Java Downloader readings were not done with \n  such=\r\n settings earlier and will be difficult to compare since the GC logic \n  mi=\r\nght be different if there was a memory setting.&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT f=\r\nace=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; - 100 \n  Connect=\r\nions - 7 MB approx&lt;/FONT&gt; &lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&=\r\nnbsp;&nbsp; &nbsp;&nbsp;&nbsp; - 250 \n  Connections - 15 MB approx&lt;/FONT&gt; &lt;=\r\n/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nb=\r\nsp; - 500 \n  Connections - 20 MB approx&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DAr=\r\nial size=3D2&gt;- Measured the throughput with the HotSpot \n  &lt;STRONG&gt;-server =\r\n&lt;/STRONG&gt;option of JVM.&lt;/FONT&gt; &lt;/DIV&gt;\n  &lt;DIV&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp=\r\n;&nbsp; - &lt;FONT face=3DArial size=3D2&gt;This did \n  not yield any big noticib=\r\nle benefits. It is because of too much I/O in our \n  code which in any case=\r\n the JVM cannot optimize.&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;=\r\n/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n =\r\n &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Things to discuss tomorrow on SEDA \n  Per=\r\nformance:&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DI=\r\nV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- SEDA Downloader uses not more than =\r\n60% CPU. \n  Probably if it uses the rest, it might acheive more throughput =\r\nsimilar to our \n  &quot;without sleep&quot; tests on Java Downloader.&nbsp;CPU not be=\r\ning used \n  completely&nbsp;could be because of two reasons; &lt;/FONT&gt;&lt;/DIV&gt;\n=\r\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; -- One is that we are=\r\n not \n  pumping enough requests which is not the case. &lt;/FONT&gt;&lt;FONT face=3D=\r\nArial \n  size=3D2&gt;We monitored this and we see that the connectedURLCount a=\r\nt any point is \n  very close to the cmd line param. For instance, in case o=\r\nf 500 connections, \n  the average was more than 470.&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&n=\r\nbsp;&nbsp;&nbsp; -- &lt;FONT face=3DArial size=3D2&gt;Other is that SEDA \n  threa=\r\nds&nbsp;are getting blocked in some synchronization locks.&nbsp;Should \n  h=\r\nave to&nbsp;identify these bottlenecks.&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DAr=\r\nial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- The t=\r\nest environment being different between \n  SEDA benchmarks and our tests, i=\r\nt is difficult to correlate. Probably we can \n  run the benchmarking&nbsp;t=\r\nest scripts bundled in SEDA in our local \n  environment so that it will be =\r\neasy to compare against our tests. I haven&#39;t \n  yet completely looked into =\r\ntheir test scripts.&lt;/FONT&gt;&lt;/DIV&gt;&lt;/FONT&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;=\r\n&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n=\r\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;The updated schedule is also attached. W=\r\ne shall \n  also discuss about this tomorrow.&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/=\r\nFONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Thanks,&lt;/FONT&gt;&lt;/DIV&gt;\n =\r\n &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Reddy&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DAr=\r\nial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;BLOCKQUOTE \n  style=3D&quot;PADDING-RIGHT: 0=\r\npx; PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #000000 2px solid; MA=\r\nRGIN-RIGHT: 0px&quot;&gt;\n    &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;----- Original Messag=\r\ne ----- &lt;/DIV&gt;\n    &lt;DIV \n    style=3D&quot;BACKGROUND: #e4e4e4; FONT: 10pt arial=\r\n; font-color: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; \n    &lt;A title=3Dreddy@... href=\r\n=3D&quot;mailto:reddy@...&quot;&gt;G.B.Reddy&lt;/A&gt; \n    &lt;/DIV&gt;\n    &lt;DIV style=3D=\r\n&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A \n    title=3Darchive-crawler@yahoogroups.c=\r\nom \n    href=3D&quot;mailto:archive-crawler@yahoogroups.com&quot;&gt;archive-crawler@yah=\r\noogroups.com&lt;/A&gt; \n    &lt;/DIV&gt;\n    &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Sent:&lt;/=\r\nB&gt; Tuesday, April 15, 2003 11:20 \n    PM&lt;/DIV&gt;\n    &lt;DIV style=3D&quot;FONT: 10pt=\r\n arial&quot;&gt;&lt;B&gt;Subject:&lt;/B&gt; Re: [archive-crawler] SEDA \n    Performance !!&lt;/DIV=\r\n&gt;\n    &lt;DIV&gt;&lt;BR&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Gordon,&lt;/FONT&gt;&lt;/=\r\nDIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial \n    si=\r\nze=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;We can have=\r\n our call as suggested on Wednesday \n    8:30p PT (3:30UTC).&lt;/FONT&gt;&lt;/DIV&gt;\n =\r\n   &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;The test sources used are checked into CVS. \n    Look for=\r\n the packages &lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- test.jav=\r\nanio.http&nbsp;- Contains the Async \n    and Sync http downloader implement=\r\nation written to benchmark the java nio \n    apis.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;F=\r\nONT face=3DArial size=3D2&gt;- test.sedanio.http - Contains the SEDA aSocket \n=\r\n    based http downloader ( exactly similar to its javanio \n    counterpart=\r\n).&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  =\r\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;As you said, the maxConnections is&nbsp;=\r\nnot a \n    strict target; so the actual number of connections at any point =\r\ncould be \n    less than it; but not more.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;=\r\nWe had earlier raised the value of maxClients \n    parameter suitably in ht=\r\ntpd.conf to allow apache to service more than the \n    default 150 clients =\r\nsimultaneously.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&n=\r\nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Today we found that the&nbs=\r\np;sandstorm script \n    by default ships&nbsp;with ( -ms128M -mx1024M )&nbs=\r\np;options. This setting \n    results in GC getting called very lately but w=\r\nhen called, it takes about a \n    minute to complete. This is the reason be=\r\nhind the previous test results \n    showing very&nbsp;less throughput above=\r\n 100 simulataneous connections. After \n    removing it, we see the followin=\r\ng throughput.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbs=\r\np;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;100 connections - about 4.0 M=\r\nbytes/sec ( This \n    is same as the reading we got before )&lt;/FONT&gt;&lt;/DIV&gt;\n =\r\n   &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;250 connections -&nbsp;about 2.7&lt;/FONT&gt;=\r\n&lt;FONT \n    face=3DArial size=3D2&gt; Mbytes/sec ( This was less than 1 Mbytes/=\r\nsec before \n    )&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;500 con=\r\nnections - about&nbsp;1.8&lt;FONT \n    face=3DArial size=3D2&gt; Mbytes/sec ( Thi=\r\ns was less than 1 Mbytes/sec before \n    )&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FO=\r\nNT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial si=\r\nze=3D2&gt;which means that the throughput indeed degrades \n    with the number=\r\n of connections; but not as bad as before.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;=\r\nWe also ran another quick test wherein we used \n    NBIO instead of the jav=\r\na NIO.&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt; We&nbsp;noticed \n    that the thr=\r\noughput degraded to 1.8 Mbytes/sec in the 100 connections case. \n    This m=\r\nakes things even more fishy.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;The differenc=\r\nes between our setup and the setup \n    used by the SEDA benchmarks are&lt;/FO=\r\nNT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV=\r\n&gt;&lt;FONT face=3DArial size=3D2&gt;Crawler Setup&nbsp;&nbsp;&nbsp; \n    &nbsp;&nb=\r\nsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n    -- =\r\nSEDA benchmark Setup&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FO=\r\nNT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- Sun JDK \n    1.4.1&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n    &nbs=\r\np;&nbsp;&nbsp; -- IBM JDK 1.1.8&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial si=\r\nze=3D2&gt;- JDK 1.4 NIO \n    library&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp; -- NBIO \n    library&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial =\r\nsize=3D2&gt;- 100 Mbps Ethernet &nbsp;&nbsp;&nbsp;&nbsp; \n    &nbsp;&nbsp;&nbs=\r\np; -- Gigabit Ethernet&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- =\r\nNo Cache on Webserver&nbsp;&nbsp;-- Must have \n    had caching.&lt;/FONT&gt;&lt;/DIV=\r\n&gt;\n    &lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;The other test=\r\n combinations&nbsp;we are running \n    now&nbsp;over our SEDA Http download=\r\ner are&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;-&nbsp;Try java -s=\r\nerver option.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- Try&nbsp;=\r\nJDK 1.4.2 beta.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- Try&nbs=\r\np;IBM JDK 1.4&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- Try&nbsp;=\r\nIBM JDK 1.1.8 with NBIO - This is \n    the closest comparison that we can d=\r\no against SEDA benchmarks.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D=\r\n2&gt;- Do tests enabling the web server \n    cache.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FON=\r\nT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial siz=\r\ne=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Thanks,&lt;/FON=\r\nT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Reddy&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;=\r\nFONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;BLOCKQUOTE \n    style=\r\n=3D&quot;PADDING-RIGHT: 0px; PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #=\r\n000000 2px solid; MARGIN-RIGHT: 0px&quot;&gt;\n      &lt;DIV style=3D&quot;FONT: 10pt arial&quot;=\r\n&gt;----- Original Message ----- &lt;/DIV&gt;\n      &lt;DIV \n      style=3D&quot;BACKGROUND:=\r\n #e4e4e4; FONT: 10pt arial; font-color: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; \n      &lt;A title=\r\n=3Dgojomo@... href=3D&quot;mailto:gojomo@...&quot;&gt;Gordon \n      Mohr=\r\n&lt;/A&gt; &lt;/DIV&gt;\n      &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A \n      titl=\r\ne=3Darchive-crawler@yahoogroups.com \n      href=3D&quot;mailto:archive-crawler@y=\r\nahoogroups.com&quot;&gt;archive-crawler@yahoogroups.com&lt;/A&gt; \n      &lt;/DIV&gt;\n      &lt;DI=\r\nV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Sent:&lt;/B&gt; Tuesday, April 15, 2003 12:33 \n  =\r\n    AM&lt;/DIV&gt;\n      &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Subject:&lt;/B&gt; Re: [arc=\r\nhive-crawler] SEDA \n      Performance !!&lt;/DIV&gt;\n      &lt;DIV&gt;&lt;FONT face=3DAria=\r\nl size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT \n      face=3DAr=\r\nial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial \n=\r\n      size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial=\r\n \n      size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DAri=\r\nal \n      size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DA=\r\nrial \n      size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=\r\n=3DArial \n      size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT fa=\r\nce=3DArial \n      size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;BR&gt;&lt;/=\r\nDIV&gt;&lt;TT&gt;Thanks for the \n      updated analysis!&lt;BR&gt;&lt;BR&gt;However, I am concer=\r\nned that the results may be \n      more a result of the&lt;BR&gt;test design or t=\r\nhe specific HTTP implementation \n      we&#39;re using than the&lt;BR&gt;underlying N=\r\nIO/aSocket code, because the results \n      diverge so greatly&lt;BR&gt;from SEDA=\r\n&#39;s own published performance \n      testing.&lt;BR&gt;&lt;BR&gt;For example, the result=\r\ns at...&lt;BR&gt;&lt;BR&gt;&nbsp; &lt;A \n      href=3D&quot;http://www.cs.berkeley.edu/~mdw/pro=\r\nj/sandstorm/iocore-bench/index.html&quot;&gt;http://www.cs.berkeley.edu/~mdw/proj/s=\r\nandstorm/iocore-bench/index.html&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;...show \n      strong throughpu=\r\nt up through 1,000 simultaneous connections,&lt;BR&gt;indeed \n      even up past =\r\n10,000 simultaneous connections.&lt;BR&gt;&lt;BR&gt;Also, given the note \n      about t=\r\nhe 1.4.1 -&gt; 1.4.2 JRE NIO change, a test&lt;BR&gt;under 1.4.2 is \n      necess=\r\nary to truly evaluate either of the \n      asynchronous&lt;BR&gt;options.&lt;BR&gt;&lt;BR&gt;=\r\nSome other questions about the test \n      setup:&lt;BR&gt;&lt;BR&gt;- the meaning of &quot;=\r\nmaxConnections&quot; is unclear to me; it seems \n      it&lt;BR&gt;&nbsp;&nbsp; is not=\r\n a &quot;maximum&quot; but a &quot;target&quot;, and the actual \n      number of&lt;BR&gt;&nbsp;&nbsp=\r\n; connections at any point in time might be larger \n      or smaller.&lt;BR&gt;&n=\r\nbsp;&nbsp; Is this right?&lt;BR&gt;&lt;BR&gt;- do you have any other \n      intrumentat=\r\nion which suggests it is&lt;BR&gt;&nbsp;&nbsp; specifically garbage \n      collec=\r\ntion which is causing the degradation&lt;BR&gt;&nbsp;&nbsp; of the SEDA \n      ap=\r\nproach above 100 connections?&lt;BR&gt;&lt;BR&gt;- if some of the setups are hitting \n =\r\n     garbage-collection or other&lt;BR&gt;&nbsp;&nbsp; resource thresholds, more =\r\ninfo \n      about the test machine/VM would&lt;BR&gt;&nbsp;&nbsp; be helpful: RAM=\r\n, VM \n      options used (server hotspot? heap/stack&lt;BR&gt;&nbsp;&nbsp; sizes?=\r\n \n      etc.)&lt;BR&gt;&lt;BR&gt;- with only 2 Apache web servers to one client process=\r\n, we \n      may&lt;BR&gt;&nbsp;&nbsp; be testing/hitting Apache performance limit=\r\ns as much \n      as Java/IO&lt;BR&gt;&nbsp;&nbsp; limits. For example, default Ap=\r\nache will only \n      accept 150 simultaneous&lt;BR&gt;&nbsp;&nbsp; clients; by m=\r\ny reading of the test \n      setup this means that no&lt;BR&gt;&nbsp;&nbsp; matte=\r\nr how many connections the \n      LAN test attempted, it would&lt;BR&gt;&nbsp;&nb=\r\nsp; never succeed on more than \n      300 (across the two test Apaches)&lt;BR&gt;=\r\n&nbsp;&nbsp; at once -- so any LAN \n      test numbers over 300 aren&#39;t real=\r\nly&lt;BR&gt;&nbsp;&nbsp; indicative of Java \n      performance.&lt;BR&gt;&lt;BR&gt;- is the t=\r\nest code something you could check into \n      CVS?&lt;BR&gt;&lt;BR&gt;These figures ar=\r\ne all very interesting, and even if quirks \n      in&lt;BR&gt;the test are pushin=\r\ng results one way or the other, that \n      will&lt;BR&gt;usually generate useful=\r\n info, too.&lt;BR&gt;&lt;BR&gt;- Gordon&lt;BR&gt;&lt;BR&gt;----- \n      Original Message -----&lt;BR&gt;F=\r\nrom: G.B.Reddy&lt;BR&gt;To: \n      archive-crawler@yahoogroups.com&lt;BR&gt;Sent: Frida=\r\ny, April 11, 2003 3:16 \n      PM&lt;BR&gt;Subject: Re: [archive-crawler] SEDA Per=\r\nformance \n      !!&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;Gordon,&lt;BR&gt;&lt;BR&gt;Please find attached the perfo=\r\nrmance report \n      on the SEDA aSocket NIO layer. Look for the last secti=\r\non in the document \n      &quot;SEDA NIO&lt;BR&gt;Socket Framework&quot; and the &quot;Summary&quot; =\r\nsection is also updated \n      with the results. An excel sheet with the re=\r\nadings and the graph is \n      also&lt;BR&gt;attached for reference.&lt;BR&gt;&lt;BR&gt;We wo=\r\nuld like to have a brief chat \n      with you on Tuesday 8:30 pm PST ( Mond=\r\nay is a holiday for us on the eve of \n      Tamil new year ) about&lt;BR&gt;SEDA =\r\nsocket layer and generally about the \n      various tasks and other proceed=\r\nings.&lt;BR&gt;&lt;BR&gt;JAnt Build Status :&lt;BR&gt;&lt;BR&gt;- \n      The proposed directory str=\r\nucture is not yet created since we are still in \n      the Anecdote prototy=\r\nping stage and we do not have any&lt;BR&gt;complete package \n      to checkin. I =\r\nhave modified the ant script a bit to suit the present \n      Anecdote stru=\r\ncture and activated a cronjob&lt;BR&gt;over it. I have also added \n      you and =\r\nRaymie to the notification mail-ids list so that you would also \n      get =\r\nthe nightly build mails. You&lt;BR&gt;could get the nightly build from the \n     =\r\n location &quot;/home/users/w/wc/wcr-team/NightlyBuilds&quot; as stated in the mail \n=\r\n      on&lt;BR&gt;shell.sourceforge.net. You could use your own logins and do SFT=\r\nP to \n      access the NightlyBuilds directory. It has read permissions \n  =\r\n    for&lt;BR&gt;all.&lt;BR&gt;&lt;BR&gt;- I am not sure why the stata labs libraries ( st.at=\r\na.* \n      packages) have been checked in as a separate CVS module. Are we =\r\nplanning \n      to&lt;BR&gt;upgrade/modify those sources and maintain ourselves. =\r\nIf not, we \n      could just have the built classes in a jar in CVS lib dir=\r\nectory as&lt;BR&gt;we \n      had done for other third party libraries. Otherwise,=\r\n if we want to \n      maintain it, then would we require that to be a separ=\r\nate CVS&lt;BR&gt;module ? I \n      think it would be better if we have one CVS ro=\r\not module under which \n      everything is put in. Probably, in such cases,=\r\n we can&lt;BR&gt;have a \n      &quot;thiryPartySrc&quot; directory to maintain such sources=\r\n within our main module \n      &quot;OpenWebCrawler&quot; itself.&lt;BR&gt;&lt;BR&gt;Thanks,&lt;BR&gt;R=\r\neddy&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;----- Original \n      Message -----&lt;BR&gt;From: G.B.Reddy&lt;BR&gt;T=\r\no: \n      archive-crawler@yahoogroups.com&lt;BR&gt;Sent: Friday, April 11, 2003 1=\r\n2:46 \n      AM&lt;BR&gt;Subject: Re: [archive-crawler] Status \n      !!&lt;BR&gt;&lt;BR&gt;&lt;B=\r\nR&gt;Gordon,&lt;BR&gt;&lt;BR&gt;As you say, the aSocketInputStream is needed \n      only i=\r\nf the client stage is multithreaded. But the oceanstore &quot;HttpClient&quot; \n     =\r\n stage is&lt;BR&gt;internally using it to do sequencing which is unnecessary \n   =\r\n   since anyway the &quot;HttpClient&quot; class \n      implements&lt;BR&gt;SingleThreadedE=\r\nventHandlerIF. I have removed these overheads \n      to do my performance t=\r\nesting.&lt;BR&gt;&lt;BR&gt;After starting to test the SEDA \n      socket performance, I=\r\n ran into three problems in the SEDA&#39;s socket \n      framework.&lt;BR&gt;&lt;BR&gt;- Ne=\r\nwly discovered bug : The seda internals throw \n      ConcurrentModification=\r\n exceptions when iterating through the selector&#39;s \n      registered&lt;BR&gt;keys=\r\n. This exceptions is highly reproducible when more \n      number of concurr=\r\nent downloads happen. Synchronization has not been \n      taken&lt;BR&gt;care whe=\r\nn the ReadEventHandler tries to deregister the socket \n      from the selec=\r\ntor of the WriteEventHandler. ( As you would know, \n      there&lt;BR&gt;are thre=\r\ne stages ReadStage, WriteStage and ListenStage in the \n      seda socket fr=\r\namework. Each has its own java Selector instance and&lt;BR&gt;they \n      wait on=\r\n its select call. The ReadStage is the one that determines that a \n      co=\r\nnnection is terminated. When this happens, it&lt;BR&gt;directly tries to make \n  =\r\n    a deregister call on the WriteStage&#39;s selector on this socket object. S=\r\no, \n      easily concurrent mod exceptions&lt;BR&gt;are thrown when my downloader=\r\n stage is \n      pumping requests and making new connections). I shall rais=\r\ne this bug to \n      the author and I am&lt;BR&gt;proceeding with my fix on it. B=\r\necause of this \n      unsynchronized communication, a lot of CancelledKeyEx=\r\nceptions are also \n      thrown in the&lt;BR&gt;internals.&lt;BR&gt;&lt;BR&gt;- A documented =\r\nbug : \n      ConcurrentModification exceptions when iterating through the s=\r\nelector&#39;s \n      selectedKeys. This is also due to no&lt;BR&gt;synchronization. M=\r\nultiple threads \n      are allowed by the seda internals to do select calls=\r\n on a single selector. \n      (Look for the docs \n      in&lt;BR&gt;seda.sandStor=\r\nm.lib.aSocket.nio.NIOSelectSource.doPoll method). I \n      will have to loo=\r\nk for doing some minimal synchronization as stated&lt;BR&gt;in \n      there.&lt;BR&gt;&lt;=\r\nBR&gt;- There has been other rare NullPointerExceptions and \n      IllegalArgu=\r\nmentException in some places. I will have to look into \n      their&lt;BR&gt;impl=\r\nications.&lt;BR&gt;&lt;BR&gt;I will fix the last two problems and get the \n      perfor=\r\nmance measurements tomorrow.&lt;BR&gt;&lt;BR&gt;Thanks,&lt;BR&gt;Reddy&lt;BR&gt;&lt;BR&gt;----- \n      Or=\r\niginal Message -----&lt;BR&gt;From: Gordon Mohr&lt;BR&gt;To: \n      archive-crawler@yah=\r\noogroups.com&lt;BR&gt;Sent: Wednesday, April 09, 2003 12:17 \n      AM&lt;BR&gt;Subject:=\r\n Re: [archive-crawler] Status !!&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;Thanks for the \n      update!&lt;B=\r\nR&gt;&lt;BR&gt;The Ocenstore libhttp package is known to be very rough; \n      reall=\r\ny just a&lt;BR&gt;placeholder or starting point for what we&#39;d need. (Note \n      =\r\nthat there&#39;s&lt;BR&gt;also an alternative &#39;libhttp2&#39; package in OceanStore, but \n=\r\n      it seemed both&lt;BR&gt;unused in their other code and more elaborate, so I=\r\n \n      haven&#39;t tried&lt;BR&gt;to use it yet.)&lt;BR&gt;&lt;BR&gt;The TCP response ordering \n=\r\n      capabilities to aSocketInputStream only seem&lt;BR&gt;necessary if you have=\r\n \n      multiple threads reading from the same socket -- which&lt;BR&gt;I think c=\r\nan, and \n      probably should, be avoided.&lt;BR&gt;&lt;BR&gt;I&#39;m looking forward to s=\r\neeing the test \n      results.&lt;BR&gt;&lt;BR&gt;I like the BuildDesign proposal; plea=\r\nse move forward with \n      creating&lt;BR&gt;that structure for a new module on =\r\nthe sourceforge CVS. \n      However,&lt;BR&gt;please use the module name of &quot;Arch=\r\niveOpenCrawler&quot; (instead \n      of&lt;BR&gt;&quot;Web-crawler&quot;).&lt;BR&gt;&lt;BR&gt;Thanks!&lt;BR&gt;&lt;BR=\r\n&gt;- Gordon&lt;BR&gt;&lt;BR&gt;----- Original \n      Message -----&lt;BR&gt;From: G.B.Reddy&lt;BR&gt;=\r\nTo: \n      archive-crawler@yahoogroups.com&lt;BR&gt;Sent: Tuesday, April 08, 2003=\r\n 11:04 \n      AM&lt;BR&gt;Subject: [archive-crawler] Status !!&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;Gordon,=\r\n&lt;BR&gt;&lt;BR&gt;I am \n      presently working on the SEDA socket overhead determina=\r\ntion work. I will \n      get the results in the next two days. Some initial=\r\n&lt;BR&gt;insights into it \n      are&lt;BR&gt;- Oceanstore manages both Tx and Rx in a=\r\n single stage.&lt;BR&gt;- It just \n      holds the responses in memory only. It d=\r\noes not write into tmp files if \n      they are huge.&lt;BR&gt;- TCP response reo=\r\nrdering is done by using the \n      seda.sandStorm.lib.aSocket.aSocketInput=\r\nStream class which reorders packets \n      according&lt;BR&gt;to the ATcpInPacket=\r\n sequence number.&lt;BR&gt;&lt;BR&gt;The test that \n      will be done :&lt;BR&gt;- Port the =\r\ndownloader code ( which we had written \n      earlier during the java nio p=\r\nerformance tests ) to SEDA framework and use \n      the&lt;BR&gt;OceanStore libra=\r\nry for HTTP fetching. The same tests that we did \n      for the downloader =\r\nwill be repeated in this oceanstore setup. We&lt;BR&gt;are \n      removing some o=\r\nceanstore code to make it similar. The result of this test \n      would tel=\r\nl us the percentage of overhead imposed by&lt;BR&gt;the SEDA \n      framework.&lt;BR=\r\n&gt;&lt;BR&gt;&lt;BR&gt;We are also done with the JAnt packaging scripts. It \n      uses t=\r\nhe present CVS structure itself. I shall create the proposed \n      CVS&lt;BR&gt;=\r\nstructure after you approve it. Today we have put the cronjob for \n      te=\r\nsting the web hosting part of nightly builds. We shall enable it&lt;BR&gt;for \n  =\r\n    all tomorrow. As of now, only the last nightly build will be available =\r\nfor \n      download. More changes need to be made for hosting&lt;BR&gt;every nigh=\r\ntly build \n      of a week.&lt;BR&gt;&lt;BR&gt;Thanks,&lt;BR&gt;Reddy&lt;BR&gt;&lt;BR&gt;Yahoo! Groups \n =\r\n     Sponsor&lt;BR&gt;ADVERTISEMENT&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;To unsubscribe from this \n=\r\n      group, send an email \n      to:&lt;BR&gt;archive-crawler-unsubscribe@yahoog=\r\nroups.com&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;Your use \n      of Yahoo! Groups is subject to the=\r\n Yahoo! Terms of \n      Service.&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;To unsubscribe from this gr=\r\noup, send an email \n      to:&lt;BR&gt;archive-crawler-unsubscribe@...=\r\nm&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;Your use \n      of Yahoo! Groups is subject to the Yahoo! =\r\nTerms of \n      Service.&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;To unsubscribe from this group, sen=\r\nd an email \n      to:&lt;BR&gt;archive-crawler-unsubscribe@yahoogroups.com&lt;BR&gt;&lt;BR=\r\n&gt;&lt;BR&gt;&lt;BR&gt;Your use \n      of Yahoo! Groups is subject to the Yahoo! Terms of=\r\n \n      Service.&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;Yahoo! Groups \n      Sponsor&lt;BR&gt;ADVERTISEMENT&lt;B=\r\nR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;To unsubscribe from this \n      group, send an email \n   =\r\n   to:&lt;BR&gt;archive-crawler-unsubscribe@yahoogroups.com&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;Your u=\r\nse \n      of Yahoo! Groups is subject to the Yahoo! Terms of \n      Service=\r\n.&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;To unsubscribe from this group, send an \n      em=\r\nail \n      to:&lt;BR&gt;archive-crawler-unsubscribe@yahoogroups.com&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;=\r\nBR&gt;&lt;BR&gt;&lt;TT&gt;Your \n      use of Yahoo! Groups is subject to the &lt;A \n      hre=\r\nf=3D&quot;http://docs.yahoo.com/info/terms/&quot;&gt;Yahoo! Terms of Service&lt;/A&gt;.&lt;/TT&gt; \n=\r\n      &lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;To unsubscribe from this group, send an =\r\nemail \n    to:&lt;BR&gt;archive-crawler-unsubscribe@yahoogroups.com&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;=\r\nBR&gt;&lt;BR&gt;&lt;TT&gt;Your \n    use of Yahoo! Groups is subject to the &lt;A \n    href=3D=\r\n&quot;http://docs.yahoo.com/info/terms/&quot;&gt;Yahoo! Terms of Service&lt;/A&gt;.&lt;/TT&gt; \n    =\r\n&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;To \n  unsubscribe from this group, send an ema=\r\nil \n  to:&lt;BR&gt;archive-crawler-unsubscribe@yahoogroups.com&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;B=\r\nR&gt;&lt;TT&gt;Your \n  use of Yahoo! Groups is subject to the &lt;A \n  href=3D&quot;http://d=\r\nocs.yahoo.com/info/terms/&quot;&gt;Yahoo! Terms of Service&lt;/A&gt;.&lt;/TT&gt; \n&lt;BR&gt;&lt;/BLOCKQU=\r\nOTE&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_177A_01C305FA.6623C910--\r\n\n"}}