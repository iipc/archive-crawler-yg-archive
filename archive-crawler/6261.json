{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127529970,"authorName":"Steven A Rowe","from":"Steven A Rowe &lt;sarowe@...&gt;","replyTo":"LIST","senderId":"r-ENoEhMXnkfsA18Q73WUU1qe5329qP8oZ_j1tS1WmYHR36UoMQDdg1Mo_2HPx52nOe3fr8RBJUv5PuxRxIROcTP9vI0","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [archive-crawler] Decide rules","postDate":"1262739270","msgId":6261,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzY2NjFCQThAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1Pg==","inReplyToHeader":"PDRCNDNENDAxLjUwOTAyMDZAYXJjaGl2ZS5vcmc+","referencesHeader":"PDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzI3NkIyRkJAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1PgkgPDZhMDI5ZTJkMDkxMjI2MTAyOG03MGJkNTE5YW0zNGNhMzRmNDEwNmZkMjFAbWFpbC5nbWFpbC5jb20+CSA8MkQxMjdGMTFEQzc5NzE0RTlCNkE0M0FDOTQ1ODE0N0YzMjc2QjMwM0BzdWV4MDctbWJ4LTAzLmFkLnN5ci5lZHU+IDw2YTAyOWUyZDA5MTIyODA4MzVzNTAxMzZmZjB4NzgwNmZlZTMyMmVjZjRlOEBtYWlsLmdtYWlsLmNvbT4gPDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzI3NkIzMDlAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1PiA8NEI0M0Q0MDEuNTA5MDIwNkBhcmNoaXZlLm9yZz4="},"prevInTopic":6259,"nextInTopic":6279,"prevInTime":6260,"nextInTime":6262,"topicId":6240,"numMessagesInTopic":14,"msgSnippet":"Hi Gordon, Thanks very much for the background, it helps explain the current situation. I ve been thinking of implementing BooleanDecideRule, extending","rawEmail":"Return-Path: &lt;sarowe@...&gt;\r\nX-Sender: sarowe@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 13274 invoked from network); 6 Jan 2010 00:54:32 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m14.grp.re1.yahoo.com with QMQP; 6 Jan 2010 00:54:32 -0000\r\nX-Received: from unknown (HELO smtp2.syr.edu) (128.230.18.92)\n  by mta3.grp.sp2.yahoo.com with SMTP; 6 Jan 2010 00:54:31 -0000\r\nX-Received: from suex07-hub-01.ad.syr.edu (suex07-hub-01.ad.syr.edu [128.230.108.195])\n\tby smtp2.syr.edu (8.14.3/8.14.3) with ESMTP id o060sVG9004579\n\t(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=FAIL)\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Tue, 5 Jan 2010 19:54:31 -0500\r\nX-Received: from suex07-mbx-03.ad.syr.edu ([128.230.108.133]) by\n suex07-hub-01.ad.syr.edu ([2002:80e6:6cc3::80e6:6cc3]) with mapi; Tue, 5 Jan\n 2010 19:54:30 -0500\r\nTo: &quot;archive-crawler@yahoogroups.com&quot; &lt;archive-crawler@yahoogroups.com&gt;\r\nDate: Tue, 5 Jan 2010 19:54:30 -0500\r\nThread-Topic: [archive-crawler] Decide rules\r\nThread-Index: AcqOZB1WTtQodkNOSjuiLm1rfLeZaAAAICDw\r\nMessage-ID: &lt;2D127F11DC79714E9B6A43AC9458147F36661BA8@...&gt;\r\nReferences: &lt;2D127F11DC79714E9B6A43AC9458147F3276B2FB@...&gt;\n\t &lt;6a029e2d0912261028m70bd519am34ca34f4106fd21@...&gt;\n\t &lt;2D127F11DC79714E9B6A43AC9458147F3276B303@...&gt;\n &lt;6a029e2d0912280835s50136ff0x7806fee322ecf4e8@...&gt;\n &lt;2D127F11DC79714E9B6A43AC9458147F3276B309@...&gt;\n &lt;4B43D401.5090206@...&gt;\r\nIn-Reply-To: &lt;4B43D401.5090206@...&gt;\r\nAccept-Language: en-US\r\nContent-Language: en-US\r\nX-MS-Has-Attach:\r\nX-MS-TNEF-Correlator:\r\nacceptlanguage: en-US\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nMIME-Version: 1.0\r\nX-Proofpoint-Virus-Version: vendor=fsecure engine=1.12.8161:2.4.5,1.2.40,4.0.166 definitions=2010-01-05_14:2010-01-05,2010-01-05,2010-01-05 signatures=0\r\nX-Proofpoint-Spam-Reason: safe\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Steven A Rowe &lt;sarowe@...&gt;\r\nSubject: RE: [archive-crawler] Decide rules\r\nX-Yahoo-Group-Post: member; u=127529970; y=Dj2rxAdhISGsi0zVBptRfAErxOGB6KIXfa0SpjpzkQ1N-kLCvNkSyg\r\n\r\nHi Gordon,\n\nThanks very much for the background, it helps explain the curre=\r\nnt situation.\n\nI&#39;ve been thinking of implementing BooleanDecideRule, extend=\r\ning PredicatedDecideRule to take an &quot;operation&quot; attribute (=3DAND/OR/NOT), =\r\naccepting nested PredicatedDecideRule&#39;s.  If I do end up doing this, I&#39;ll c=\r\nreate an issue and attach a patch.\n\nSteve\n\nOn 01/05/2010 at 7:06 PM, Gordon=\r\n Mohr wrote:\n&gt; A bit of background:\n&gt; \n&gt; We used to have a system of compos=\r\nable &#39;Filter&#39; URI-test classes, with\n&gt; AND/OR/NOT options.\n&gt; \n&gt; However, to=\r\n implement common needs, the nesting got to be pretty deep\n&gt; and complicate=\r\nd. Inside the setup, it wasn&#39;t very easy to understand\n&gt; whether &#39;true&#39; or =\r\n&#39;false&#39; meant &#39;ok to get&#39; or &#39;not ok to get&#39; or &#39;no\n&gt; opinion&#39;.\n&gt; \n&gt; We obs=\r\nerved that it was very common to need rules where, if a test\n&gt; passes, a UR=\r\nI is definitively &quot;in&quot; or &quot;out&quot; -- while if the test does\n&gt; not pass, no op=\r\ninion is expressed either way. (Doing a series of these\n&gt; in nested boolean=\r\n expressions can get quite confusing.)\n&gt; \n&gt; So, we transitioned to scoping =\r\n(and other per-URI go/no-go actions) as a\n&gt; flat series of &#39;DecideRules&#39;, w=\r\nhere the last to express an opinion wins.\n&gt; That makes a lot of common need=\r\ns a matter of ordering the rules (rather\n&gt; than nesting) -- first rule-in e=\r\nverything of general interest, then\n&gt; rule-out those known to have problems=\r\n.\n&gt; \n&gt; Which brings us to now.\n&gt; \n&gt; The series-of-DecideRules approach has =\r\nworked well for our usual needs.\n&gt; I thought we might eventually implement =\r\nOR and AND rules, and they would\n&gt; be relatively easy to add, but our inter=\r\nnal crawls haven&#39;t had a\n&gt; pressing need for that yet.\n&gt; \n&gt; That said, you =\r\nhave a number of options to implement what you need:\n&gt; \n&gt; - create generic =\r\nAND/OR/etc rules in Java, then compose your tests with\n&gt; them\n&gt; \n&gt; - create=\r\n a custom DecideRule class in Java which does exactly the\n&gt; test(s) you nee=\r\nd, applying a decision if appropriate\n&gt; \n&gt; - use the BeanShellDecideRule (H=\r\neritrix 1.x) or ScriptedDecideRule (H3)\n&gt; to write your custom test in a sc=\r\nripting language\n&gt; \n&gt; (If you do wind up implementing generic AND/etc compo=\r\nsing-rules, we&#39;d\n&gt; welcome the code-contribution to the core project, even =\r\nas I would\n&gt; suggest people avoid that complexity in their scope rules when=\r\never\n&gt; possible.)\n&gt; \n&gt; Hope this helps,\n&gt; \n&gt; - Gordon @ IA\n&gt; \n&gt; Steven A Ro=\r\nwe wrote:\n&gt; &gt; Hi Anas,\n&gt; &gt; \n&gt; &gt; You&#39;re right, the sequence effect is not OR=\r\n. I don&#39;t know enough\n&gt; about the language of process flows to put the righ=\r\nt label on what\n&gt; Heritrix is doing :).\n&gt; &gt; \n&gt; &gt; I would like to be able to=\r\n write rules (not code) that allow me to\n&gt; stamp REJECT on URIs that have c=\r\nontent type text/html AND are larger\n&gt; than 10MB, and PASS for everything e=\r\nlse. How can I do that?\n&gt; &gt; \n&gt; &gt; Steve\n&gt; &gt; \n&gt; &gt; On 12/28/2009 at 11:35 AM, =\r\nanas elghafari wrote:\n&gt; &gt; &gt; \n&gt; &gt; &gt; I don&#39;t think the effect of the sequence=\r\n is OR. Every rule stamps the\n&gt; &gt; &gt; URI with ACCEPT, REJECT or PASS. And th=\r\ne last non-pass is the\n&gt; &gt; &gt; operative judgment. So I don&#39;t quite understan=\r\nd the problem. Just have\n&gt; &gt; &gt; your rules stamp REJECT on what you don&#39;t li=\r\nke, and PASS on everything\n&gt; &gt; &gt; else... and this gives the effect of combi=\r\nning the reject rules with\n&gt; &gt; &gt; &quot;AND&quot;\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; On Sat, Dec 26, =\r\n2009 at 9:05 PM, Steven A Rowe &lt;sarowe@...\n&gt; &gt; &gt; &lt;mailto:sarowe%40syr.e=\r\ndu&gt; &gt; wrote:\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; Hi Anas,\n&gt; &gt; &gt; \n&gt; &gt; &gt; I was =\r\nhoping that you (or someone else on this list) would say that I\n&gt; &gt; &gt; was m=\r\nissing something that would allow me to only write rules, and not\n&gt; &gt; &gt; hav=\r\ne to write code.\n&gt; &gt; &gt; \n&gt; &gt; &gt; Combining multiple conditions together seems =\r\nlike such a basic\n&gt; &gt; &gt; requirement I&#39;m surprised it doesn&#39;t already exist =\r\n- something like\n&gt; &gt; &gt; the ability to override the logical operator on Deci=\r\ndeRuleSequence\n&gt; &gt; &gt; (currently hardwired to OR) to other possibilities lik=\r\ne AND. Then I\n&gt; &gt; &gt; could write something like (pardon the pseudocode):\n&gt; &gt;=\r\n &gt; \n&gt; &gt; &gt; OrDecideRuleSequence : decision=3DLASTMATCH RejectDecideRule\n&gt; &gt; =\r\n&gt; SurtPrefixedDecideRule : seedsAsSurtPrefixes=3Dtrue ; decision=3DACCEPT\n&gt;=\r\n &gt; &gt; AndDecideRuleSequence : decision=3DREJECT\n&gt; &gt; &gt; ContentTypeMatchesRege=\r\nxDecideRule : regex=3Dtext/html\n&gt; &gt; &gt; ExceedsDocumentLengthThresholdDecideR=\r\nule :\n&gt; &gt; &gt; contentLengthThreshold=3D10000000 AndDecideRuleSequence :\n&gt; &gt; &gt;=\r\n decision=3DREJECT ContentTypeMatchesRegexDecideRule : regex=3Dtext/plain\n&gt;=\r\n &gt; &gt; ExceedsDocumentLengthThresholdDecideRule :\n&gt; &gt; &gt; contentLengthThreshol=\r\nd=3D100000\n&gt; &gt; &gt; \n&gt; &gt; &gt; Is this a bad idea?\n&gt; &gt; &gt; \n&gt; &gt; &gt; Steve\n&gt; &gt; &gt; \n&gt; &gt; &gt;=\r\n \n&gt; &gt; &gt; \n&gt; &gt; &gt; On 12/26/2009 at 1:28 PM, anas elghafari wrote: &gt; &gt; &gt; You ca=\r\nn write\n&gt; &gt; &gt; your own decideRules that subclass the DecideRule, and you &gt; =\r\noverwrite\n&gt; &gt; &gt; the decisionFor(Object o) method. In the decisionFor(Object=\r\n o) &gt; you\n&gt; &gt; &gt; check if the Object is a CrawlURI, if so you typecast into =\r\nCrawlURI\n&gt; &gt; &gt; \n&gt; &gt; &gt; and then you will be able to check the contenttype an=\r\nd content size\n&gt; &gt; &gt; \n&gt; &gt; &gt; (look at CrawlURI API). And you can issue deces=\r\nion REJECT for the\n&gt; uris\n&gt; &gt; &gt; &gt; that don&#39;t fulfill you criteria. &gt; &gt; You =\r\ncan also do this by\n&gt; adding\n&gt; &gt; &gt; a processor, where -in your overwriting =\r\n&gt; of innerProcess(CrawlURI\n&gt; &gt; &gt; curi)- you check the type and size and the=\r\nn you &gt; reject those URIs\n&gt; &gt; &gt; you don&#39;t want to process by calling &gt;\n&gt; &gt; =\r\n&gt; \n&gt; curi.skipToProcessorChain(getCrawlController().getPostProcessorChain()=\r\n)\n&gt; &gt; &gt; &gt; &gt; beware that DecideRules/Filter inserted before the extraction\n&gt;=\r\n will\n&gt; &gt; &gt; &gt; prevent the CrawlJob from ever getting to Uris that are accep=\r\ntable,\n&gt; &gt; &gt; &gt; because the path to them goes through URIs that are not. &gt; &gt;=\r\n Anas\n&gt; &gt; &gt; &gt; &gt; On Wed, Dec 23, 2009 at 1:48 AM, Steven A Rowe &lt;sarowe@syr.=\r\nedu\n&gt; &lt;mailto:sarowe%40syr.edu&gt;\n&gt; &gt; &gt; &lt;mailto:sarowe%40syr.edu&gt; &gt; wrote: &gt; =\r\n&gt; Hi, &gt; &gt; I want to write\n&gt; &gt; &gt; decide-rules that reject resources based on=\r\n two &gt; conditions:\n&gt; &gt; &gt; content-length and content-type (e.g., text/html r=\r\nesources &gt; larger\n&gt; &gt; &gt; than 10MB, and text/plain resources larger than 100=\r\nKB), but I &gt; can&#39;t\n&gt; &gt; &gt; find any way to logically AND rule subsets togethe=\r\nr. &gt; &gt; Is there a\n&gt; &gt; &gt; way to write decide-rules that would achieve what I=\r\n &gt; want? Should I\n&gt; &gt; &gt; be using ScriptedDecideRules? &gt; &gt; Thanks (for your =\r\npatience with a\n&gt; &gt; &gt; newbie), &gt; Steve\n\n\n"}}