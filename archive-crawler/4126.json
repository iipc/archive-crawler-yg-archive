{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":176845436,"authorName":"anitabidari","from":"&quot;anitabidari&quot; &lt;abidari@...&gt;","profile":"anitabidari","replyTo":"LIST","senderId":"JEW4GIyfAoX_uKTk-lbbomrZn5mD1-FL3fHZHYfi6NWt9hEIsG9oG_yNeN5BO3clThGayS93GTHYV1TX1m4_tf1gxHqVWg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Out of Memory Error","postDate":"1176840657","msgId":4126,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGYwMzlraCszcThzQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGYwMnFyNytrZmdtQGVHcm91cHMuY29tPg=="},"prevInTopic":4125,"nextInTopic":4127,"prevInTime":4125,"nextInTime":4127,"topicId":4013,"numMessagesInTopic":16,"msgSnippet":"Hi Olaf Here is the top 100 or so lines from jmap -histo output. If you want to see the whole output which is 1500 lines, let me know. I will be happy to post","rawEmail":"Return-Path: &lt;abidari@...&gt;\r\nX-Sender: abidari@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 27150 invoked from network); 17 Apr 2007 20:12:24 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m49.grp.scd.yahoo.com with QMQP; 17 Apr 2007 20:12:23 -0000\r\nReceived: from unknown (HELO n32b.bullet.sp1.yahoo.com) (209.131.38.212)\n  by mta11.grp.scd.yahoo.com with SMTP; 17 Apr 2007 20:12:21 -0000\r\nReceived: from [216.252.122.216] by n32.bullet.sp1.yahoo.com with NNFMP; 17 Apr 2007 20:10:59 -0000\r\nReceived: from [66.218.69.4] by t1.bullet.sp1.yahoo.com with NNFMP; 17 Apr 2007 20:10:59 -0000\r\nReceived: from [66.218.66.83] by t4.bullet.scd.yahoo.com with NNFMP; 17 Apr 2007 20:10:59 -0000\r\nDate: Tue, 17 Apr 2007 20:10:57 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;f039kh+3q8s@...&gt;\r\nIn-Reply-To: &lt;f02qr7+kfgm@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;anitabidari&quot; &lt;abidari@...&gt;\r\nSubject: Re: Out of Memory Error\r\nX-Yahoo-Group-Post: member; u=176845436; y=aavXXhKbBr4zrTu-VOu62Ixj0L0UhTR4CT_cZaX3er8P6wCdQag\r\nX-Yahoo-Profile: anitabidari\r\n\r\nHi Olaf\n  Here is the top 100 or so lines from jmap -histo output. If you w=\r\nant\nto see the whole output which is 1500 lines, let me know. I will be\nhap=\r\npy to post it.\n\nnum   #instances    #bytes  class name\n--------------------=\r\n------------------\n  1:  16047112   547575856  [B\n  2:    172536   17933901=\r\n6  [J\n  3:    172718    91191232  [[B\n  4:    172710    91190880  [Lcom.sle=\r\nepycat.je.tree.Node;\n  5:    169162    21652736  com.sleepycat.je.tree.BIN\n=\r\n  6:    822988    19751712  com.sleepycat.je.tree.LN\n  7:    198911     933=\r\n8280  [C\n  8:    176585     5650720  java.util.TreeMap$Entry\n  9:    172726=\r\n     5527232  com.sleepycat.je.latch.Java5SharedLatchImpl\n 10:    172726   =\r\n  5527232 \njava.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync\n 1=\r\n1:     38695     4958680  &lt;constMethodKlass&gt;\n 12:    197287     4734888  ja=\r\nva.lang.String\n 13:     35553     3415760  [I\n 14:     67101     3301736  &lt;=\r\nsymbolKlass&gt;\n 15:     38695     3099976  &lt;methodKlass&gt;\n 16:    172726     2=\r\n763616 \njava.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalH=\r\noldCounter\n 17:    172726     2763616 \njava.util.concurrent.locks.Reentrant=\r\nReadWriteLock$ReadLock\n 18:    172726     2763616 \njava.util.concurrent.loc=\r\nks.ReentrantReadWriteLock$WriteLock\n 19:    169174     2706784  com.sleepyc=\r\nat.je.utilint.TinyHashSet\n 20:     23967     2577656  [S\n 21:      3544    =\r\n 2181864  &lt;constantPoolKlass&gt;\n 22:      3544     1471096  &lt;instanceKlassKla=\r\nss&gt;\n 23:      3206     1337328  &lt;constantPoolCacheKlass&gt;\n 24:     21012    =\r\n  840480  com.sleepycat.je.cleaner.FileSummary\n 25:      3437      833080  =\r\n&lt;methodDataKlass&gt;\n 26:     18214      728560  com.sleepycat.je.tree.FileSum=\r\nmaryLN\n 27:     21936      701952 \njava.util.concurrent.locks.AbstractQueue=\r\ndSynchronizer$Node\n 28:      5957      630024  [Ljava.util.HashMap$Entry;\n =\r\n29:      3548      368992  com.sleepycat.je.tree.IN\n 30:      3843      368=\r\n928  java.lang.Class\n 31:     23005      368080  java.util.regex.Pattern$Sl=\r\niceA\n 32:      1351      350192  [Z\n 33:     18214      291424  com.sleepyc=\r\nat.je.cleaner.PackedOffsets\n 34:      5357      250592  [[I\n 35:      5735 =\r\n     229400  java.util.HashMap\n 36:      8199      196776  java.util.HashMa=\r\np$Entry\n 37:      8018      192432  java.util.regex.Pattern$GroupTail\n 38: =\r\n     2348      187904  [Ljava.util.regex.Pattern$Node;\n 39:      3377      =\r\n165048  [Ljava.lang.Object;\n 40:         6      164128 \n[Lorg.archive.crawl=\r\ner.settings.SoftSettingsHash$SettingsEntry;\n 41:      4317      138144  jav=\r\na.util.regex.Pattern$Curly\n 42:      2144      137216  java.util.regex.Patt=\r\nern\n 43:      2123      135872  java.util.regex.Matcher\n 44:      7919     =\r\n 126704  java.util.regex.Pattern$GroupHead\n 45:      3194      102208  java=\r\n.util.HashMap$ValueIterator\n 46:       270       86400  &lt;objArrayKlassKlass=\r\n&gt;\n 47:      4609       73744  java.util.HashSet\n 48:      2246       71872 =\r\n java.lang.ThreadLocal$ThreadLocalMap$Entry\n 49:      1386       70688  [Lj=\r\nava.lang.String;\n 50:      2874       68976  java.util.LinkedList$Entry\n 51=\r\n:      2730       65520  java.util.regex.Pattern$3\n 52:      3865       618=\r\n40  java.lang.Long\n 53:      2348       56352  java.util.regex.Pattern$Bran=\r\nch\n 54:      2140       51360  java.util.regex.Pattern$9\n 55:      1503    =\r\n   48096  java.lang.ref.SoftReference\n 56:      1921       46104  java.util=\r\n.Hashtable$Entry\n 57:      1315       42080  java.util.LinkedHashMap$Entry\n=\r\n 58:      2603       41648  java.util.regex.Pattern$Slice\n 59:      1690   =\r\n    40560  java.util.ArrayList\n 60:      2348       37568  java.util.regex.=\r\nPattern$BranchConn\n 61:       207       34544  [Ljava.lang.ThreadLocal$Thre=\r\nadLocalMap$Entry;\n 62:      2119       33904  java.util.HashMap$KeySet\n 63:=\r\n       416       33280  java.lang.reflect.Method\n 64:      1377       33048=\r\n  java.util.regex.Pattern$5\n 65:      1956       31296  java.util.regex.Pat=\r\ntern$Dot\n 66:      1842       29472  java.util.regex.Pattern$Ctype\n 67:    =\r\n   603       28944 \norg.archive.crawler.settings.ModuleAttributeInfo\n 68:  =\r\n     423       27072  java.lang.reflect.Constructor\n 69:      1086       26=\r\n064 \njava.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter\n 70=\r\n:       233       25560  [Ljava.util.Hashtable$Entry;\n 71:      1453       =\r\n23248  java.util.regex.Pattern$Start\n 72:       544       21760  org.archiv=\r\ne.crawler.settings.SimpleType\n 73:      1277       20432  java.util.regex.P=\r\nattern$BitClass\n 74:      1099       17584  java.lang.Integer\n 75:       25=\r\n8       16512  com.sleepycat.je.cleaner.TrackedFileSummary\n 76:        97  =\r\n     16296  org.archive.crawler.framework.ToeThread\n 77:       677       16=\r\n248 \njava.util.concurrent.locks.ReentrantLock$NonfairSync\n 78:       883   =\r\n    14128  java.util.regex.Pattern$Dollar\n 79:       588       14112  java.=\r\nutil.regex.Pattern$6\n 80:       188       13536  java.lang.reflect.Field\n 8=\r\n1:       793       12688  java.util.regex.Pattern$CharProperty$1\n 82:      =\r\n 194       12416  org.archive.io.RecordingOutputStream\n 83:       765      =\r\n 12240 \norg.archive.crawler.settings.LegalValueTypeConstraint\n 84:       49=\r\n3       11832  java.util.regex.Pattern$Ques\n 85:       352       11264  jav=\r\na.util.concurrent.ConcurrentHashMap$Segment\n 86:       463       11112  sun=\r\n.misc.CacheEntry\n 87:         8       10672  [Lsun.misc.CacheEntry;\n 88:   =\r\n    187       10472 \njavax.management.openmbean.OpenMBeanAttributeInfoSuppo=\r\nrt\n 89:       430       10320  java.lang.ref.WeakReference\n 90:       180  =\r\n     10080  org.archive.crawler.settings.DataContainer\n 91:       550      =\r\n  9808  [Ljava.lang.Class;\n 92:       400        9600  com.sleepycat.je.cle=\r\naner.OffsetList$Segment\n 93:       594        9504  java.util.regex.Pattern=\r\n$Begin\n 94:       216        8640  java.math.BigInteger\n 95:       154     =\r\n   8624  java.security.Provider$Service\n 96:       356        8544  org.apa=\r\nche.commons.lang.IntHashMap$Entry\n 97:       253        8096  java.lang.ref=\r\n.Finalizer\n 98:       200        8000  java.util.Hashtable\n 99:       124  =\r\n      7936  java.util.logging.Logger\n100:       118        7208  [[C\n101:  =\r\n     221        7072  java.io.ObjectStreamField\n102:       285        6840 =\r\n java.security.Provider$ServiceKey\n103:       282        6768  sun.security=\r\n.util.DerInputBuffer\n104:       282        6768  sun.security.util.DerValue=\r\n\n105:       210        6720  org.mortbay.util.StringMap$Node\n106:       280=\r\n        6720  sun.security.x509.RDN\n107:       352        6648  \nTotal 1962=\r\n7050   1024430952\n\n\n--- In archive-crawler@yahoogroups.com, &quot;pandae667&quot; &lt;aa=\r\nron667@...&gt; wrote:\n&gt;\n&gt; Hi,\n&gt; \n&gt; if you still have access to the machine and=\r\n the process is still\n&gt; hanging arround in OOM condition you might try a &quot;j=\r\nmap -histo &lt;pid&gt;&quot;\n&gt; to get an overview of all the objects arround - this mi=\r\nght help to\n&gt; track down the real cause of the OOME.\n&gt; \n&gt; Regards\n&gt;   Olaf =\r\nFreyer\n&gt; \n&gt; --- In archive-crawler@yahoogroups.com, &quot;anitabidari&quot; &lt;abidari@=\r\n&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hi Gordan\n&gt; &gt; I have run into the OOME again. This time I =\r\nhad the heap size set to\n&gt; &gt; 1G. I downloaded Java 1.6 per your suggestion,=\r\n and below is the Stack\n&gt; &gt; Trace that you requested.\n&gt; &gt; \n&gt; &gt; The crawl ra=\r\nn for 11 days and progress stats are\n&gt; &gt; Discovered      Queued       Downl=\r\noaded  mem-use-KB  Heap-use-KB   \n&gt; &gt; Congestion\n&gt; &gt; 23181561        117458=\r\n68     11024191    979905     987584  1.0\n&gt; &gt; Do you need any other informa=\r\ntion such as my order.xml etc?\n&gt; &gt; \n&gt; &gt; 04/16/2007 17:24:20 +0000 SEVERE\n&gt; =\r\n&gt; org.archive.crawler.framework.ToeThread seriousError Serious error\n&gt; &gt; oc=\r\ncured trying to proces\n&gt; &gt; s &#39;unknown&#39;\n&gt; &gt; [ToeThread #79:\n&gt; &gt;  -no CrawlUR=\r\nI-\n&gt; &gt;     WAITING for 11m21s125ms\n&gt; &gt;     step: ABOUT_TO_GET_URI for 11m21=\r\ns125ms\n&gt; &gt;     java.lang.Thread.getStackTrace(Thread.java:1426)\n&gt; &gt;    \norg=\r\n.archive.crawler.framework.ToeThread.reportTo(ToeThread.java:513)\n&gt; &gt;    \no=\r\nrg.archive.crawler.framework.ToeThread.reportTo(ToeThread.java:591)\n&gt; &gt;    =\r\n org.archive.util.DevUtils.extraInfo(DevUtils.java:65)\n&gt; &gt;    \n&gt; &gt;\norg.arch=\r\nive.crawler.framework.ToeThread.seriousError(ToeThread.java:230)\n&gt; &gt;     or=\r\ng.archive.crawler.framework.ToeThread.run(ToeThread.java:174)\n&gt; &gt; ]\n&gt; &gt;    =\r\n        timestamp  discovered      queued   downloaded      \n&gt; &gt; doc/s(avg)=\r\n  KB/s(avg)   dl-failures   busy-thread   mem-use-\n&gt; &gt; KB  heap-size-KB   c=\r\nongestion   max-depth   avg-depth\n&gt; &gt; 2007-04-16T17:24:20Z    23181561    1=\r\n1745868     11024191      \n&gt; &gt; 0.0(12.68)     0(182)        450518         =\r\n    8       9769\n&gt; &gt; 99        987584          1.0     3681209     1468233\n=\r\n&gt; &gt; \n&gt; &gt; java.lang.OutOfMemoryError: Java heap space\n&gt; &gt; &lt;Cleaner name=3D&quot;C=\r\nleaner-1&quot;/&gt; caught exception:\n&gt; &gt; java.lang.NullPointerException\n&gt; &gt; java.l=\r\nang.NullPointerException\n&gt; &gt;         at java.util.TreeMap.getEntry(TreeMap.=\r\njava:324)\n&gt; &gt;         at java.util.TreeMap.remove(TreeMap.java:580)\n&gt; &gt;    =\r\n     at java.util.TreeSet.remove(TreeSet.java:259)\n&gt; &gt;         at\n&gt; &gt;\n&gt;\ncom=\r\n.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(FileSelector.java:=\r\n236)\n&gt; &gt;         at\n&gt; &gt; com.sleepycat.je.cleaner.FileProcessor.doClean(File=\r\nProcessor.java:201)\n&gt; &gt;         at\n&gt; &gt;\ncom.sleepycat.je.cleaner.FileProcess=\r\nor.onWakeup(FileProcessor.java:143)\n&gt; &gt;         at\n&gt; &gt; com.sleepycat.je.uti=\r\nlint.DaemonThread.run(DaemonThread.java:189)\n&gt; &gt;         at java.lang.Threa=\r\nd.run(Thread.java:619)\n&gt; &gt; Continuing\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; --- In archive-crawler@=\r\nyahoogroups.com, Gordon Mohr &lt;gojomo@&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; anitabidari wrote=\r\n:\n&gt; &gt; &gt; &gt; --- In archive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@&gt;\nwro=\r\nte:\n&gt; &gt; &gt; &gt;&gt; anitabidari wrote:\n&gt; &gt; &gt; &gt;&gt;&gt; I have heretrix-1.10.2 running on=\r\n a dual core Linux box with\n&gt; 2.8Ghz\n&gt; &gt; &gt; &gt;&gt;&gt; cpu&#39;s and 8G memory. Heretri=\r\nx is often running into an Out of\n&gt; Memory\n&gt; &gt; &gt; &gt;&gt;&gt; error. I dont recall s=\r\neeing this error with an older version of\n&gt; &gt; &gt; &gt;&gt;&gt; heretrix v1.8 that I ha=\r\nd running for quite sometime.\n&gt; &gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt; &gt;&gt;&gt; I am running it on a 64 b=\r\nit machine. And the version of java\nI am\n&gt; &gt; &gt; &gt;&gt;&gt; using is j2se_jdk_sun-1.=\r\n5.0.07. I have the heap size set to\n3Gigs\n&gt; &gt; &gt; &gt;&gt;&gt; (-Xmx option.). Does an=\r\nyone have any ideas on how to resolve\nthis?\n&gt; &gt; &gt; &gt;&gt;&gt; Should I try running =\r\nit with a 64 bit JVM, so I can specify a\n&gt; larger\n&gt; &gt; &gt; &gt;&gt;&gt; heap? \n&gt; &gt; &gt; &gt;&gt;=\r\n Were you using the exact same JVM (esp. heap) and Heritrix (esp. \n&gt; &gt; &gt; &gt;&gt;=\r\n Processors and UriUniqFilter) options in 1.8? How long does it\n&gt; &gt; take to=\r\n \n&gt; &gt; &gt; &gt;&gt; OOME?\n&gt; &gt; &gt; &gt;&gt;\n&gt; &gt; &gt; &gt;&gt; A problematic issue with our DNS library=\r\n using an ever-growing\n&gt; &gt; &gt; &gt; amount of \n&gt; &gt; &gt; &gt;&gt; cache memory was resolve=\r\nd between 1.8 and 1.10.2, so I would\nhave \n&gt; &gt; &gt; &gt;&gt; expected fewer OOMEs in=\r\n long-running crawls, rather than more.\n&gt; &gt; &gt; &gt;&gt;\n&gt; &gt; &gt; &gt;&gt; Some thoughts:\n&gt; =\r\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt; &gt;&gt; (1) Since you have 8GB, a 64bit JVM and larger heap could h=\r\nelp --\n&gt; &gt; &gt; &gt; but it \n&gt; &gt; &gt; &gt;&gt; tends not help as much as you think, becaus=\r\ne 64bit object\n&gt; &gt; pointers mean \n&gt; &gt; &gt; &gt;&gt; it takes a large heap to hold th=\r\ne same number of objects. (One\n&gt; &gt; estimate \n&gt; &gt; &gt; &gt;&gt; I&#39;ve seen not specifi=\r\nc to Heritrix&#39;s heap: 40% larger heap needed\n&gt; &gt; for \n&gt; &gt; &gt; &gt;&gt; same number =\r\nof 64bit JVM objects.)\n&gt; &gt; &gt; &gt;&gt;\n&gt; &gt; &gt; &gt;&gt; (2) Not all OOMEs are really cause=\r\nd by main heap depletion --\nsome\n&gt; &gt; &gt; &gt; other \n&gt; &gt; &gt; &gt;&gt; resource/memory-sp=\r\nace depletions also cause OOMEs. Some of these\n&gt; &gt; other \n&gt; &gt; &gt; &gt;&gt; depletio=\r\nns can be *worsened* by growing a heap closer to an\n&gt; &gt; addressing \n&gt; &gt; &gt; &gt;=\r\n&gt; ceiling. If you have a OOME that&#39;s easy to reproduce quickly, you\n&gt; &gt; may=\r\n \n&gt; &gt; &gt; &gt;&gt; want to try running under a 1.6 JVM -- its OOME errors are more =\r\n\n&gt; &gt; &gt; &gt;&gt; descriptive, and there are other options for examining the heap\n&gt;=\r\n (see \n&gt; &gt; &gt; &gt;&gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt;\n&gt;\nhttp://java.sun.com/javase/6/webnotes/trouble=\r\n/TSG-VM/html/memleaks.html#gbywi)\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt;&gt; after the OOME.\n&gt; &gt; &gt; &gt;=\r\n&gt;\n&gt; &gt; &gt; &gt;&gt; - Gordon @ IA\n&gt; &gt; &gt; &gt;&gt;\n&gt; &gt; &gt; &gt;&gt;&gt; Yahoo! Groups Links\n&gt; &gt; &gt; &gt;&gt;&gt;\n&gt;=\r\n &gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Hi Gordon\n&gt; &gt; &gt; &gt; Per your recommendati=\r\non I have downloaded 1.6 JVM and am\nrunning the\n&gt; &gt; &gt; &gt; crawl. 3G is a lot =\r\nof memory. What could be causing Heretrix\nto take\n&gt; &gt; &gt; &gt; up more than 3G?\n=\r\n&gt; &gt; &gt; \n&gt; &gt; &gt; I don&#39;t know; the last OOME problem we had was related to the =\r\nDNS\n&gt; issue \n&gt; &gt; &gt; fixed before 1.10.2.\n&gt; &gt; &gt; \n&gt; &gt; &gt; What is your crawl lik=\r\ne -- number of seeds, breadth/scoping, etc. --\n&gt; &gt; and \n&gt; &gt; &gt; how soon does=\r\n it OOME (in time and number of URIs visited and\n&gt; &gt; scheduled)?\n&gt; &gt; &gt; \n&gt; &gt;=\r\n &gt; - Gordon @ IA\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}