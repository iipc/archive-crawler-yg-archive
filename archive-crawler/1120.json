{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"stack","from":"stack &lt;stack@...&gt;","replyTo":"LIST","senderId":"UtHBkACsDpWvc9U6FQK6Lp0SgHmqyYTRM-6TqL2RxnZBUthaBQbti-CF8TaRAoMB8uJ0of10ZhghZoOU0pVg1w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] programming -- how HttpRecorder.ris is related to responseStream","postDate":"1098890343","msgId":1120,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxN0ZCQzY3LjMwNzA5MDFAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGNsbzM3cCt1aDQ5QGVHcm91cHMuY29tPg==","referencesHeader":"PGNsbzM3cCt1aDQ5QGVHcm91cHMuY29tPg=="},"prevInTopic":1119,"nextInTopic":1121,"prevInTime":1119,"nextInTime":1121,"topicId":1119,"numMessagesInTopic":7,"msgSnippet":"Its a little cryptic. You ll note that Heritrix includes a version of org.apache.commons.httpclient.HttpConnection.  This version differs from the version in","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 23203 invoked from network); 27 Oct 2004 15:25:49 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m25.grp.scd.yahoo.com with QMQP; 27 Oct 2004 15:25:49 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (207.241.224.172)\n  by mta3.grp.scd.yahoo.com with SMTP; 27 Oct 2004 15:25:49 -0000\r\nReceived: (qmail 30295 invoked by uid 100); 27 Oct 2004 15:13:58 -0000\r\nReceived: from debord.archive.org (HELO ?207.241.238.140?) (stack@...@207.241.238.140)\n  by mail-dev.archive.org with SMTP; 27 Oct 2004 15:13:58 -0000\r\nMessage-ID: &lt;417FBC67.3070901@...&gt;\r\nDate: Wed, 27 Oct 2004 08:19:03 -0700\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.2) Gecko/20040820 Debian/1.7.2-4\r\nX-Accept-Language: en-us\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;clo37p+uh49@...&gt;\r\nIn-Reply-To: &lt;clo37p+uh49@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=0.2 required=7.0 tests=AWL autolearn=no version=2.63\r\nX-eGroups-Remote-IP: 207.241.224.172\r\nFrom: stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] programming -- how HttpRecorder.ris is related\n to responseStream\r\nX-Yahoo-Group-Post: member; u=168599281\r\n\r\nIts a little cryptic.\n\nYou&#39;ll note that Heritrix includes a version of \norg.apache.commons.httpclient.HttpConnection.  This version differs from \nthe version in the httpclient jar in the following manner:\n\n+// HERITRIX import.\n+import org.archive.util.HttpRecorder;\n+\n/**\n * An abstraction of an HTTP {@link InputStream} and {@link OutputStream}\n * pair, together with the relevant attributes.\n@@ -676,7 +679,6 @@\n            highly interactive environments, such as some client/server\n            situations. In such cases, nagling may be turned off through\n            use of the TCP_NODELAY sockets option.&quot; */\n-\n            socket.setTcpNoDelay(this.params.getTcpNoDelay());\n            socket.setSoTimeout(this.params.getSoTimeout());\n\n@@ -701,8 +703,23 @@\n            if (inbuffersize &gt; 2048) {\n                inbuffersize = 2048;              }\n-            inputStream = new \nBufferedInputStream(socket.getInputStream(), inbuffersize);\n-            outputStream = new \nBufferedOutputStream(socket.getOutputStream(), outbuffersize);\n+            // START HERITRIX Change\n+            HttpRecorder httpRecorder = HttpRecorder.getHttpRecorder();\n+            if (httpRecorder == null) {\n+                inputStream = new BufferedInputStream(\n+                    socket.getInputStream(), inbuffersize);\n+                outputStream = new BufferedOutputStream(\n+                    socket.getOutputStream(), outbuffersize);\n+            } else {\n+                inputStream = httpRecorder.inputWrap((InputStream)\n+                    (new BufferedInputStream(socket.getInputStream(),\n+                    inbuffersize)));\n+                outputStream = httpRecorder.outputWrap((OutputStream)\n+                    (new BufferedOutputStream(socket.getOutputStream(),\n+                    outbuffersize)));\n+            }\n+            // END HERITRIX change.\n+\n\nNote how we&#39;ve wrapped the HttpConnection input and output streams.   \nOur start script ensures that our version of HttpConnection comes before \nthat of the httpclient jar&#39;s version.\n\nWe can pick up the &#39;right&#39; version of HttpRecorder while deep in the \nbowels of httpclient because we make the assumption that the currently \nexecuting thread is an instance of ToeThread.  ToeThreads each carry an \ninstance of HttpRecorder.   This same ToeThread instance correlates to \nthe &#39;rec&#39; instance that FetchHTTP is slinging about.\n\nHope this helps.\nSt.Ack\n\n\nbjhong02 wrote:\n\n&gt;This week, I&#39;m studying Heritrix&#39;s source code to figure out how it \n&gt;works.\n&gt;I have a problem presented as following.\n&gt;\n&gt;in innerProcess() of FetchHTTP.java, the sentence\n&gt;\n&gt;this.http.executeMethod(method);\n&gt;\n&gt;will finally call HttpMethodBase.execute(state, connectioin), and \n&gt;result in calling connect.getResponseInputStream(), the returned \n&gt;InputStream is assignec to HttpMethodBase.responseStream. \n&gt;\n&gt;also in innerProcess() of FetchHTTP.java, after the above sentence, \n&gt;there is the following sentence,\n&gt;\n&gt;rec.getRecordedInput().readFullOrUntil(.,.);\n&gt;\n&gt;rec.getRecordedInput() will return HttpRecorder.ris, but I wonder \n&gt;how HttpRecorder.ris is related to the abovementioned \n&gt;responseStream, or some other response stream of http request.\n&gt;\n&gt;thanks\n&gt;\n&gt;\n&gt; \n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;\n&gt;\n&gt;\n&gt;  \n&gt;\n\n\n"}}