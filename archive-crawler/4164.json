{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":176845436,"authorName":"anitabidari","from":"&quot;anitabidari&quot; &lt;abidari@...&gt;","profile":"anitabidari","replyTo":"LIST","senderId":"OOLRM2UMjLF_pGca_8IlnE7NG7CGOzCQzIbOKtzsAI_xS_V_cfZu2rHDSsXU0P7f3Zlqin4Pqpc1gUhhPo01GhCh6wo-Qg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Out of Memory Error","postDate":"1177297002","msgId":4164,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGYwaDc5Yis1YXJoQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQ2MkJCQ0IwLjYwODAwMDNAYXJjaGl2ZS5vcmc+"},"prevInTopic":4163,"nextInTopic":4165,"prevInTime":4163,"nextInTime":4165,"topicId":4013,"numMessagesInTopic":16,"msgSnippet":"Gordon The heretrix process actually died in this case. So unfortunately I can t run the jmap -histo. You are right this time it was not an issue with the heap","rawEmail":"Return-Path: &lt;abidari@...&gt;\r\nX-Sender: abidari@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 36207 invoked from network); 23 Apr 2007 03:00:47 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m47.grp.scd.yahoo.com with QMQP; 23 Apr 2007 03:00:47 -0000\r\nReceived: from unknown (HELO n9b.bullet.sp1.yahoo.com) (69.147.64.101)\n  by mta7.grp.scd.yahoo.com with SMTP; 23 Apr 2007 03:00:47 -0000\r\nReceived: from [216.252.122.219] by n9.bullet.sp1.yahoo.com with NNFMP; 23 Apr 2007 02:56:44 -0000\r\nReceived: from [209.73.164.86] by t4.bullet.sp1.yahoo.com with NNFMP; 23 Apr 2007 02:56:44 -0000\r\nReceived: from [66.218.66.79] by t8.bullet.scd.yahoo.com with NNFMP; 23 Apr 2007 02:56:44 -0000\r\nDate: Mon, 23 Apr 2007 02:56:42 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;f0h79b+5arh@...&gt;\r\nIn-Reply-To: &lt;462BBCB0.6080003@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;anitabidari&quot; &lt;abidari@...&gt;\r\nSubject: Re: Out of Memory Error\r\nX-Yahoo-Group-Post: member; u=176845436; y=bSQ3RWqB-7m-792oo3pmvdJW_43XmrTuM05XwepekJKfFbR-Scg\r\nX-Yahoo-Profile: anitabidari\r\n\r\nGordon\nThe heretrix process actually died in this case. So unfortunately I\n=\r\ncan&#39;t run the jmap -histo. You are right this time it was not an issue\nwith=\r\n the heap space, but it was out of swap space.\n\nHere are the last few lines=\r\n from the progress stats log\n20070422034357 CRAWL WAITING - Pausing - Waiti=\r\nng for threads to finish\n2007-04-22T03:43:58Z     2289095     1051213      =\r\n1237710      \n37.0(4.04)    190(62)           253             0      162374=\r\n3      \n1642048          1.0      611344      131401\n20070422034358 CRAWL P=\r\nAUSED - Paused\n\nThe below lines are from the heretrix_out.log. \n#\n# An unex=\r\npected error has been detected by Java Runtime Environment:\n#\n# java.lang.O=\r\nutOfMemoryError: requested 81920 bytes for GrET in\n/BUILD_AREA/jdk6_01/hots=\r\npot/src/share/vm/utilities/growableArray.cpp.\nOut of swap space?\n#\n#  Inter=\r\nnal Error (414C4C4F434154494F4E0E494E4C494E450E4850500017),\npid=3D13347, ti=\r\nd=3D879942576\n#\n# Java VM: Java HotSpot(TM) Server VM (1.6.0_01-b06 mixed m=\r\node)\n# An error report file with more information is saved as\nhs_err_pid133=\r\n47.log\n#\n# If you would like to submit a bug report, please visit:\n#   http=\r\n://java.sun.com/webapps/bugreport/crash.jsp\n\n\n--- In archive-crawler@yahoog=\r\nroups.com, Gordon Mohr &lt;gojomo@...&gt; wrote:\n&gt;\n&gt; Can you get a &#39;jmap -histo&#39; =\r\njust after this OOME?\n&gt; \n&gt; Also, what do the last few lines of the progress=\r\n-statistics.log before \n&gt; the OOME show?\n&gt; \n&gt; Note that this stack doesn&#39;t =\r\nshow &quot;Java heap space&quot; after the error \n&gt; name. And it happened in a native=\r\n method. So it may be non-heap \n&gt; resources that have been depleted -- and =\r\nin such a case a larger heap \n&gt; can hurt.\n&gt; \n&gt; - Gordon @ IA\n&gt; \n&gt; anitabida=\r\nri wrote:\n&gt; &gt; Hi Gordan\n&gt; &gt; I upgraded to 1.12.0, and still get the OOME er=\r\nror. I am using Java\n&gt; &gt; Version 1.6 and 3G Heap Size. \n&gt; &gt; \n&gt; &gt; java.lang.=\r\nOutOfMemoryError\n&gt; &gt;         at java.util.zip.Deflater.init(Native Method)\n=\r\n&gt; &gt;         at java.util.zip.Deflater.&lt;init&gt;(Deflater.java:123)\n&gt; &gt;        =\r\n at\njava.util.zip.GZIPOutputStream.&lt;init&gt;(GZIPOutputStream.java:46)\n&gt; &gt;    =\r\n     at\njava.util.zip.GZIPOutputStream.&lt;init&gt;(GZIPOutputStream.java:58)\n&gt; &gt;=\r\n         at\n&gt; &gt;\norg.archive.io.WriterPoolMember$CompressedStream.&lt;init&gt;(Wri=\r\nterPoolMember.java:492)\n&gt; &gt;         at\n&gt; &gt;\norg.archive.io.WriterPoolMember.=\r\npreWriteRecordTasks(WriterPoolMember.java:360)\n&gt; &gt;         at org.archive.i=\r\no.arc.ARCWriter.write(ARCWriter.java:412)\n&gt; &gt;         at\n&gt; &gt;\norg.archive.cr=\r\nawler.writer.ARCWriterProcessor.write(ARCWriterProcessor.java:163)\n&gt; &gt;     =\r\n    at\n&gt; &gt;\norg.archive.crawler.writer.ARCWriterProcessor.innerProcess(ARCWr=\r\niterProcessor.java:130)\n&gt; &gt;         at\n&gt; &gt; org.archive.crawler.framework.Pr=\r\nocessor.process(Processor.java:109)\n&gt; &gt;         at\n&gt; &gt;\norg.archive.crawler.=\r\nframework.ToeThread.processCrawlUri(ToeThread.java:302)\n&gt; &gt;         at\norg.=\r\narchive.crawler.framework.ToeThread.run(ToeThread.java:151)\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; -=\r\n-- In archive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@&gt; wrote:\n&gt; &gt;&gt; Th=\r\ne counts of ReentrantReadWriteLock-related instances are fishy --\n&gt; &gt; and, =\r\n\n&gt; &gt;&gt; by extension, the counts of other instances where there are about \n&gt; =\r\n&gt;&gt; 127,700 of them, such as com.sleepycat.je.latch.Java5SharedLatchImpl.\n&gt; =\r\n&gt;&gt;\n&gt; &gt;&gt; I think you may be running into a bug in the BDB-JE library that&#39;s =\r\n\n&gt; &gt;&gt; bundled with Heritrix-1.10.2 (je-3.0.12). See the note for\n&quot;#15214&quot; i=\r\nn \n&gt; &gt;&gt; the BDB-JE change log:\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;\nhttp://www.oracle.com/technolo=\r\ngy/software/products/berkeley-db/je/files/je3213_changelog.html\n&gt; &gt;&gt; (From =\r\nthe description there, it also looks like you are more\nlikely to \n&gt; &gt;&gt; trig=\r\nger this bug on long-running smaller crawls that *don&#39;t*\nexceed the \n&gt; &gt;&gt; B=\r\nDB-JE in-memory cache size.)\n&gt; &gt;&gt;\n&gt; &gt;&gt; If you can&#39;t move to heritrix-1.12.0=\r\n (which uses BDB-JE 3.2.13), you\n&gt; &gt; can \n&gt; &gt;&gt; *probably* just replace the =\r\n&#39;je-3.0.12.jar&#39; file in your \n&gt; &gt;&gt; HERITRIX_HOME/lib/ directory with the la=\r\ntest BDB-JE release, 3.2.23,\n&gt; &gt; from:\n&gt; &gt;&gt;\n&gt; &gt;\nhttp://www.oracle.com/techn=\r\nology/software/products/berkeley-db/je/index.html\n&gt; &gt;&gt; We haven&#39;t tested th=\r\nat exact combination -- Heritrix 1.10.2 on\nBDB-JE \n&gt; &gt;&gt; 3.2.23 -- but BDB-J=\r\nE updates are generally drop-in compatible and we \n&gt; &gt;&gt; expect to bundle BD=\r\nB-JE 3.2.23 with Heritrix 1.12.1.\n&gt; &gt;&gt;\n&gt; &gt;&gt; - Gordon @ IA\n&gt; &gt;&gt;\n&gt; &gt;&gt; anitabi=\r\ndari wrote:\n&gt; &gt;&gt;&gt; Hi Olaf\n&gt; &gt;&gt;&gt;   Here is the top 100 or so lines from jmap=\r\n -histo output. If\nyou want\n&gt; &gt;&gt;&gt; to see the whole output which is 1500 lin=\r\nes, let me know. I will be\n&gt; &gt;&gt;&gt; happy to post it.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; num   #insta=\r\nnces    #bytes  class name\n&gt; &gt;&gt;&gt; --------------------------------------\n&gt; &gt;=\r\n&gt;&gt;   1:  16047112   547575856  [B\n&gt; &gt;&gt;&gt;   2:    172536   179339016  [J\n&gt; &gt;&gt;=\r\n&gt;   3:    172718    91191232  [[B\n&gt; &gt;&gt;&gt;   4:    172710    91190880  [Lcom.s=\r\nleepycat.je.tree.Node;\n&gt; &gt;&gt;&gt;   5:    169162    21652736  com.sleepycat.je.t=\r\nree.BIN\n&gt; &gt;&gt;&gt;   6:    822988    19751712  com.sleepycat.je.tree.LN\n&gt; &gt;&gt;&gt;   =\r\n7:    198911     9338280  [C\n&gt; &gt;&gt;&gt;   8:    176585     5650720  java.util.Tr=\r\neeMap$Entry\n&gt; &gt;&gt;&gt;   9:    172726     5527232 \n&gt; &gt; com.sleepycat.je.latch.Ja=\r\nva5SharedLatchImpl\n&gt; &gt;&gt;&gt;  10:    172726     5527232 \n&gt; &gt;&gt;&gt; java.util.concur=\r\nrent.locks.ReentrantReadWriteLock$NonfairSync\n&gt; &gt;&gt;&gt;  11:     38695     4958=\r\n680  &lt;constMethodKlass&gt;\n&gt; &gt;&gt;&gt;  12:    197287     4734888  java.lang.String\n=\r\n&gt; &gt;&gt;&gt;  13:     35553     3415760  [I\n&gt; &gt;&gt;&gt;  14:     67101     3301736  &lt;sym=\r\nbolKlass&gt;\n&gt; &gt;&gt;&gt;  15:     38695     3099976  &lt;methodKlass&gt;\n&gt; &gt;&gt;&gt;  16:    172=\r\n726     2763616 \n&gt; &gt;&gt;&gt;\n&gt; &gt;\njava.util.concurrent.locks.ReentrantReadWriteLoc=\r\nk$Sync$ThreadLocalHoldCounter\n&gt; &gt;&gt;&gt;  17:    172726     2763616 \n&gt; &gt;&gt;&gt; java.=\r\nutil.concurrent.locks.ReentrantReadWriteLock$ReadLock\n&gt; &gt;&gt;&gt;  18:    172726 =\r\n    2763616 \n&gt; &gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$WriteL=\r\nock\n&gt; &gt;&gt;&gt;  19:    169174     2706784  com.sleepycat.je.utilint.TinyHashSet\n=\r\n&gt; &gt;&gt;&gt;  20:     23967     2577656  [S\n&gt; &gt;&gt;&gt;  21:      3544     2181864  &lt;con=\r\nstantPoolKlass&gt;\n&gt; &gt;&gt;&gt;  22:      3544     1471096  &lt;instanceKlassKlass&gt;\n&gt; &gt;&gt;=\r\n&gt;  23:      3206     1337328  &lt;constantPoolCacheKlass&gt;\n&gt; &gt;&gt;&gt;  24:     21012=\r\n      840480  com.sleepycat.je.cleaner.FileSummary\n&gt; &gt;&gt;&gt;  25:      3437    =\r\n  833080  &lt;methodDataKlass&gt;\n&gt; &gt;&gt;&gt;  26:     18214      728560  com.sleepycat=\r\n.je.tree.FileSummaryLN\n&gt; &gt;&gt;&gt;  27:     21936      701952 \n&gt; &gt;&gt;&gt; java.util.co=\r\nncurrent.locks.AbstractQueuedSynchronizer$Node\n&gt; &gt;&gt;&gt;  28:      5957      63=\r\n0024  [Ljava.util.HashMap$Entry;\n&gt; &gt;&gt;&gt;  29:      3548      368992  com.slee=\r\npycat.je.tree.IN\n&gt; &gt;&gt;&gt;  30:      3843      368928  java.lang.Class\n&gt; &gt;&gt;&gt;  3=\r\n1:     23005      368080  java.util.regex.Pattern$SliceA\n&gt; &gt;&gt;&gt;  32:      13=\r\n51      350192  [Z\n&gt; &gt;&gt;&gt;  33:     18214      291424  com.sleepycat.je.clean=\r\ner.PackedOffsets\n&gt; &gt;&gt;&gt;  34:      5357      250592  [[I\n&gt; &gt;&gt;&gt;  35:      5735=\r\n      229400  java.util.HashMap\n&gt; &gt;&gt;&gt;  36:      8199      196776  java.util=\r\n.HashMap$Entry\n&gt; &gt;&gt;&gt;  37:      8018      192432  java.util.regex.Pattern$Gr=\r\noupTail\n&gt; &gt;&gt;&gt;  38:      2348      187904  [Ljava.util.regex.Pattern$Node;\n&gt;=\r\n &gt;&gt;&gt;  39:      3377      165048  [Ljava.lang.Object;\n&gt; &gt;&gt;&gt;  40:         6  =\r\n    164128 \n&gt; &gt;&gt;&gt; [Lorg.archive.crawler.settings.SoftSettingsHash$SettingsE=\r\nntry;\n&gt; &gt;&gt;&gt;  41:      4317      138144  java.util.regex.Pattern$Curly\n&gt; &gt;&gt;&gt;=\r\n  42:      2144      137216  java.util.regex.Pattern\n&gt; &gt;&gt;&gt;  43:      2123  =\r\n    135872  java.util.regex.Matcher\n&gt; &gt;&gt;&gt;  44:      7919      126704  java.=\r\nutil.regex.Pattern$GroupHead\n&gt; &gt;&gt;&gt;  45:      3194      102208  java.util.Ha=\r\nshMap$ValueIterator\n&gt; &gt;&gt;&gt;  46:       270       86400  &lt;objArrayKlassKlass&gt;\n=\r\n&gt; &gt;&gt;&gt;  47:      4609       73744  java.util.HashSet\n&gt; &gt;&gt;&gt;  48:      2246   =\r\n    71872 \njava.lang.ThreadLocal$ThreadLocalMap$Entry\n&gt; &gt;&gt;&gt;  49:      1386 =\r\n      70688  [Ljava.lang.String;\n&gt; &gt;&gt;&gt;  50:      2874       68976  java.uti=\r\nl.LinkedList$Entry\n&gt; &gt;&gt;&gt;  51:      2730       65520  java.util.regex.Patter=\r\nn$3\n&gt; &gt;&gt;&gt;  52:      3865       61840  java.lang.Long\n&gt; &gt;&gt;&gt;  53:      2348  =\r\n     56352  java.util.regex.Pattern$Branch\n&gt; &gt;&gt;&gt;  54:      2140       51360=\r\n  java.util.regex.Pattern$9\n&gt; &gt;&gt;&gt;  55:      1503       48096  java.lang.ref=\r\n.SoftReference\n&gt; &gt;&gt;&gt;  56:      1921       46104  java.util.Hashtable$Entry\n=\r\n&gt; &gt;&gt;&gt;  57:      1315       42080  java.util.LinkedHashMap$Entry\n&gt; &gt;&gt;&gt;  58: =\r\n     2603       41648  java.util.regex.Pattern$Slice\n&gt; &gt;&gt;&gt;  59:      1690  =\r\n     40560  java.util.ArrayList\n&gt; &gt;&gt;&gt;  60:      2348       37568  java.util=\r\n.regex.Pattern$BranchConn\n&gt; &gt;&gt;&gt;  61:       207       34544 \n&gt; &gt; [Ljava.lang=\r\n.ThreadLocal$ThreadLocalMap$Entry;\n&gt; &gt;&gt;&gt;  62:      2119       33904  java.u=\r\ntil.HashMap$KeySet\n&gt; &gt;&gt;&gt;  63:       416       33280  java.lang.reflect.Meth=\r\nod\n&gt; &gt;&gt;&gt;  64:      1377       33048  java.util.regex.Pattern$5\n&gt; &gt;&gt;&gt;  65:  =\r\n    1956       31296  java.util.regex.Pattern$Dot\n&gt; &gt;&gt;&gt;  66:      1842     =\r\n  29472  java.util.regex.Pattern$Ctype\n&gt; &gt;&gt;&gt;  67:       603       28944 \n&gt; =\r\n&gt;&gt;&gt; org.archive.crawler.settings.ModuleAttributeInfo\n&gt; &gt;&gt;&gt;  68:       423  =\r\n     27072  java.lang.reflect.Constructor\n&gt; &gt;&gt;&gt;  69:      1086       26064 =\r\n\n&gt; &gt;&gt;&gt; java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter\n&gt;=\r\n &gt;&gt;&gt;  70:       233       25560  [Ljava.util.Hashtable$Entry;\n&gt; &gt;&gt;&gt;  71:   =\r\n   1453       23248  java.util.regex.Pattern$Start\n&gt; &gt;&gt;&gt;  72:       544    =\r\n   21760  org.archive.crawler.settings.SimpleType\n&gt; &gt;&gt;&gt;  73:      1277     =\r\n  20432  java.util.regex.Pattern$BitClass\n&gt; &gt;&gt;&gt;  74:      1099       17584 =\r\n java.lang.Integer\n&gt; &gt;&gt;&gt;  75:       258       16512 \n&gt; &gt; com.sleepycat.je.c=\r\nleaner.TrackedFileSummary\n&gt; &gt;&gt;&gt;  76:        97       16296  org.archive.cra=\r\nwler.framework.ToeThread\n&gt; &gt;&gt;&gt;  77:       677       16248 \n&gt; &gt;&gt;&gt; java.util.=\r\nconcurrent.locks.ReentrantLock$NonfairSync\n&gt; &gt;&gt;&gt;  78:       883       14128=\r\n  java.util.regex.Pattern$Dollar\n&gt; &gt;&gt;&gt;  79:       588       14112  java.uti=\r\nl.regex.Pattern$6\n&gt; &gt;&gt;&gt;  80:       188       13536  java.lang.reflect.Field=\r\n\n&gt; &gt;&gt;&gt;  81:       793       12688  java.util.regex.Pattern$CharProperty$1\n&gt;=\r\n &gt;&gt;&gt;  82:       194       12416  org.archive.io.RecordingOutputStream\n&gt; &gt;&gt;&gt;=\r\n  83:       765       12240 \n&gt; &gt;&gt;&gt; org.archive.crawler.settings.LegalValueT=\r\nypeConstraint\n&gt; &gt;&gt;&gt;  84:       493       11832  java.util.regex.Pattern$Que=\r\ns\n&gt; &gt;&gt;&gt;  85:       352       11264 \n&gt; &gt; java.util.concurrent.ConcurrentHash=\r\nMap$Segment\n&gt; &gt;&gt;&gt;  86:       463       11112  sun.misc.CacheEntry\n&gt; &gt;&gt;&gt;  87=\r\n:         8       10672  [Lsun.misc.CacheEntry;\n&gt; &gt;&gt;&gt;  88:       187       =\r\n10472 \n&gt; &gt;&gt;&gt; javax.management.openmbean.OpenMBeanAttributeInfoSupport\n&gt; &gt;&gt;&gt;=\r\n  89:       430       10320  java.lang.ref.WeakReference\n&gt; &gt;&gt;&gt;  90:       1=\r\n80       10080 \norg.archive.crawler.settings.DataContainer\n&gt; &gt;&gt;&gt;  91:      =\r\n 550        9808  [Ljava.lang.Class;\n&gt; &gt;&gt;&gt;  92:       400        9600 \n&gt; &gt; =\r\ncom.sleepycat.je.cleaner.OffsetList$Segment\n&gt; &gt;&gt;&gt;  93:       594        950=\r\n4  java.util.regex.Pattern$Begin\n&gt; &gt;&gt;&gt;  94:       216        8640  java.mat=\r\nh.BigInteger\n&gt; &gt;&gt;&gt;  95:       154        8624  java.security.Provider$Servi=\r\nce\n&gt; &gt;&gt;&gt;  96:       356        8544  org.apache.commons.lang.IntHashMap$Ent=\r\nry\n&gt; &gt;&gt;&gt;  97:       253        8096  java.lang.ref.Finalizer\n&gt; &gt;&gt;&gt;  98:    =\r\n   200        8000  java.util.Hashtable\n&gt; &gt;&gt;&gt;  99:       124        7936  j=\r\nava.util.logging.Logger\n&gt; &gt;&gt;&gt; 100:       118        7208  [[C\n&gt; &gt;&gt;&gt; 101:   =\r\n    221        7072  java.io.ObjectStreamField\n&gt; &gt;&gt;&gt; 102:       285        =\r\n6840  java.security.Provider$ServiceKey\n&gt; &gt;&gt;&gt; 103:       282        6768  s=\r\nun.security.util.DerInputBuffer\n&gt; &gt;&gt;&gt; 104:       282        6768  sun.secur=\r\nity.util.DerValue\n&gt; &gt;&gt;&gt; 105:       210        6720  org.mortbay.util.String=\r\nMap$Node\n&gt; &gt;&gt;&gt; 106:       280        6720  sun.security.x509.RDN\n&gt; &gt;&gt;&gt; 107:=\r\n       352        6648  \n&gt; &gt;&gt;&gt; Total 19627050   1024430952\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;=\r\n&gt; --- In archive-crawler@yahoogroups.com, &quot;pandae667&quot; &lt;aaron667@&gt;\nwrote:\n&gt; =\r\n&gt;&gt;&gt;&gt; Hi,\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; if you still have access to the machine and the proc=\r\ness is still\n&gt; &gt;&gt;&gt;&gt; hanging arround in OOM condition you might try a &quot;jmap =\r\n-histo\n&lt;pid&gt;&quot;\n&gt; &gt;&gt;&gt;&gt; to get an overview of all the objects arround - this m=\r\night help to\n&gt; &gt;&gt;&gt;&gt; track down the real cause of the OOME.\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; Re=\r\ngards\n&gt; &gt;&gt;&gt;&gt;   Olaf Freyer\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; --- In archive-crawler@yahoogroups=\r\n.com, &quot;anitabidari&quot; &lt;abidari@&gt;\n&gt; &gt; wrote:\n&gt; &gt;&gt;&gt;&gt;&gt; Hi Gordan\n&gt; &gt;&gt;&gt;&gt;&gt; I have =\r\nrun into the OOME again. This time I had the heap size\nset to\n&gt; &gt;&gt;&gt;&gt;&gt; 1G. I=\r\n downloaded Java 1.6 per your suggestion, and below is the\n&gt; &gt; Stack\n&gt; &gt;&gt;&gt;&gt;=\r\n&gt; Trace that you requested.\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; The crawl ran for 11 days and p=\r\nrogress stats are\n&gt; &gt;&gt;&gt;&gt;&gt; Discovered      Queued       Downloaded  mem-use-=\r\nKB \nHeap-use-KB   \n&gt; &gt;&gt;&gt;&gt;&gt; Congestion\n&gt; &gt;&gt;&gt;&gt;&gt; 23181561        11745868     =\r\n11024191    979905     987584  1.0\n&gt; &gt;&gt;&gt;&gt;&gt; Do you need any other informatio=\r\nn such as my order.xml etc?\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; 04/16/2007 17:24:20 +0000 SEVER=\r\nE\n&gt; &gt;&gt;&gt;&gt;&gt; org.archive.crawler.framework.ToeThread seriousError Serious erro=\r\nr\n&gt; &gt;&gt;&gt;&gt;&gt; occured trying to proces\n&gt; &gt;&gt;&gt;&gt;&gt; s &#39;unknown&#39;\n&gt; &gt;&gt;&gt;&gt;&gt; [ToeThread #=\r\n79:\n&gt; &gt;&gt;&gt;&gt;&gt;  -no CrawlURI-\n&gt; &gt;&gt;&gt;&gt;&gt;     WAITING for 11m21s125ms\n&gt; &gt;&gt;&gt;&gt;&gt;     =\r\nstep: ABOUT_TO_GET_URI for 11m21s125ms\n&gt; &gt;&gt;&gt;&gt;&gt;     java.lang.Thread.getStac=\r\nkTrace(Thread.java:1426)\n&gt; &gt;&gt;&gt;&gt;&gt;    \n&gt; &gt;&gt;&gt; org.archive.crawler.framework.To=\r\neThread.reportTo(ToeThread.java:513)\n&gt; &gt;&gt;&gt;&gt;&gt;    \n&gt; &gt;&gt;&gt; org.archive.crawler.=\r\nframework.ToeThread.reportTo(ToeThread.java:591)\n&gt; &gt;&gt;&gt;&gt;&gt;     org.archive.ut=\r\nil.DevUtils.extraInfo(DevUtils.java:65)\n&gt; &gt;&gt;&gt;&gt;&gt;    \n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;\norg.archive=\r\n.crawler.framework.ToeThread.seriousError(ToeThread.java:230)\n&gt; &gt;&gt;&gt;&gt;&gt;    \no=\r\nrg.archive.crawler.framework.ToeThread.run(ToeThread.java:174)\n&gt; &gt;&gt;&gt;&gt;&gt; ]\n&gt; =\r\n&gt;&gt;&gt;&gt;&gt;            timestamp  discovered      queued   downloaded      \n&gt; &gt;&gt;&gt;=\r\n&gt;&gt; doc/s(avg)  KB/s(avg)   dl-failures   busy-thread   mem-use-\n&gt; &gt;&gt;&gt;&gt;&gt; KB =\r\n heap-size-KB   congestion   max-depth   avg-depth\n&gt; &gt;&gt;&gt;&gt;&gt; 2007-04-16T17:24=\r\n:20Z    23181561    11745868     11024191      \n&gt; &gt;&gt;&gt;&gt;&gt; 0.0(12.68)     0(18=\r\n2)        450518             8       9769\n&gt; &gt;&gt;&gt;&gt;&gt; 99        987584         =\r\n 1.0     3681209     1468233\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; java.lang.OutOfMemoryError: Ja=\r\nva heap space\n&gt; &gt;&gt;&gt;&gt;&gt; &lt;Cleaner name=3D&quot;Cleaner-1&quot;/&gt; caught exception:\n&gt; &gt;&gt;&gt;=\r\n&gt;&gt; java.lang.NullPointerException\n&gt; &gt;&gt;&gt;&gt;&gt; java.lang.NullPointerException\n&gt; =\r\n&gt;&gt;&gt;&gt;&gt;         at java.util.TreeMap.getEntry(TreeMap.java:324)\n&gt; &gt;&gt;&gt;&gt;&gt;      =\r\n   at java.util.TreeMap.remove(TreeMap.java:580)\n&gt; &gt;&gt;&gt;&gt;&gt;         at java.ut=\r\nil.TreeSet.remove(TreeSet.java:259)\n&gt; &gt;&gt;&gt;&gt;&gt;         at\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;\ncom.slee=\r\npycat.je.cleaner.FileSelector.selectFileForCleaning(FileSelector.java:236)\n=\r\n&gt; &gt;&gt;&gt;&gt;&gt;         at\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt; com.sleepycat.je.cleaner.FileProcessor.doCle=\r\nan(FileProcessor.java:201)\n&gt; &gt;&gt;&gt;&gt;&gt;         at\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;\ncom.sleepycat.je.=\r\ncleaner.FileProcessor.onWakeup(FileProcessor.java:143)\n&gt; &gt;&gt;&gt;&gt;&gt;         at\n&gt;=\r\n &gt;&gt;&gt;&gt;&gt; com.sleepycat.je.utilint.DaemonThread.run(DaemonThread.java:189)\n&gt; &gt;=\r\n&gt;&gt;&gt;&gt;         at java.lang.Thread.run(Thread.java:619)\n&gt; &gt;&gt;&gt;&gt;&gt; Continuing\n&gt; =\r\n&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; --- In archive-crawler@yahoogroups.com, Gordon Mohr &lt;=\r\ngojomo@&gt;\nwrote:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; anitabidari wrote:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; --- In archive-crawle=\r\nr@yahoogroups.com, Gordon Mohr &lt;gojomo@&gt;\n&gt; &gt;&gt;&gt; wrote:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; anitabidar=\r\ni wrote:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I have heretrix-1.10.2 running on a dual core Linux bo=\r\nx with\n&gt; &gt;&gt;&gt;&gt; 2.8Ghz\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; cpu&#39;s and 8G memory. Heretrix is often run=\r\nning into an Out of\n&gt; &gt;&gt;&gt;&gt; Memory\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; error. I dont recall seeing t=\r\nhis error with an older\nversion of\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; heretrix v1.8 that I had run=\r\nning for quite sometime.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I am running it on a 64 bi=\r\nt machine. And the version of java\n&gt; &gt;&gt;&gt; I am\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; using is j2se_jdk=\r\n_sun-1.5.0.07. I have the heap size set to\n&gt; &gt;&gt;&gt; 3Gigs\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (-Xmx op=\r\ntion.). Does anyone have any ideas on how to resolve\n&gt; &gt;&gt;&gt; this?\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;=\r\n&gt; Should I try running it with a 64 bit JVM, so I can specify a\n&gt; &gt;&gt;&gt;&gt; larg=\r\ner\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; heap? \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Were you using the exact same JVM (esp. he=\r\nap) and Heritrix\n(esp. \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Processors and UriUniqFilter) options in=\r\n 1.8? How long does it\n&gt; &gt;&gt;&gt;&gt;&gt; take to \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; OOME?\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;=\r\n&gt;&gt;&gt; A problematic issue with our DNS library using an ever-growing\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;=\r\n&gt; amount of \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; cache memory was resolved between 1.8 and 1.10.2, s=\r\no I would\n&gt; &gt;&gt;&gt; have \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; expected fewer OOMEs in long-running crawl=\r\ns, rather than more.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Some thoughts:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;=\r\n&gt;&gt;&gt;&gt; (1) Since you have 8GB, a 64bit JVM and larger heap could\nhelp --\n&gt; &gt;&gt;=\r\n&gt;&gt;&gt;&gt;&gt; but it \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; tends not help as much as you think, because 64bit=\r\n object\n&gt; &gt;&gt;&gt;&gt;&gt; pointers mean \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; it takes a large heap to hold the=\r\n same number of objects. (One\n&gt; &gt;&gt;&gt;&gt;&gt; estimate \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I&#39;ve seen not sp=\r\necific to Heritrix&#39;s heap: 40% larger heap\nneeded\n&gt; &gt;&gt;&gt;&gt;&gt; for \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; s=\r\name number of 64bit JVM objects.)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (2) Not all OOMEs a=\r\nre really caused by main heap depletion --\n&gt; &gt;&gt;&gt; some\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; other \n&gt; &gt;&gt;=\r\n&gt;&gt;&gt;&gt;&gt;&gt; resource/memory-space depletions also cause OOMEs. Some of\nthese\n&gt; &gt;=\r\n&gt;&gt;&gt;&gt; other \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; depletions can be *worsened* by growing a heap close=\r\nr to an\n&gt; &gt;&gt;&gt;&gt;&gt; addressing \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ceiling. If you have a OOME that&#39;s e=\r\nasy to reproduce\nquickly, you\n&gt; &gt;&gt;&gt;&gt;&gt; may \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; want to try running u=\r\nnder a 1.6 JVM -- its OOME errors are\nmore \n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; descriptive, and the=\r\nre are other options for examining the heap\n&gt; &gt;&gt;&gt;&gt; (see \n&gt; &gt;\nhttp://java.su=\r\nn.com/javase/6/webnotes/trouble/TSG-VM/html/memleaks.html#gbywi)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;=\r\n after the OOME.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Gordon @ IA\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;=\r\n Yahoo! Groups Links\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Gordo=\r\nn\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Per your recommendation I have downloaded 1.6 JVM and am\n&gt; &gt;&gt;&gt; =\r\nrunning the\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; crawl. 3G is a lot of memory. What could be causing H=\r\neretrix\n&gt; &gt;&gt;&gt; to take\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; up more than 3G?\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; I don&#39;t know; the=\r\n last OOME problem we had was related to the DNS\n&gt; &gt;&gt;&gt;&gt; issue \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; fix=\r\ned before 1.10.2.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; What is your crawl like -- number of se=\r\neds, breadth/scoping,\n&gt; &gt; etc. --\n&gt; &gt;&gt;&gt;&gt;&gt; and \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; how soon does it OO=\r\nME (in time and number of URIs visited and\n&gt; &gt;&gt;&gt;&gt;&gt; scheduled)?\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; - G=\r\nordon @ IA\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;  \n&gt; &gt;&gt;&gt; Yahoo! Groups Links\n&gt; &gt;=\r\n&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt;  \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt; \n=\r\n&gt; &gt;\n&gt;\n\n\n\n"}}