{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"mXJm6wlg9mvMkshXTa1xEEWpTsINe_9vMxidBFx0SlXY8H59138OAav9mbPxfiTbQdz8a_-cbDfsWS25N5-g0xUVwd1jbag","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Checkpointing","postDate":"1071174193","msgId":202,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNGRDhEMjMxLjMwNjAzMDVAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDNGRDhDN0VCLjUwOTAyMDBAYXJjaGl2ZS5vcmc+","referencesHeader":"PDNGQkJGNjUzLjkwNjAxMDdAYXJjaGl2ZS5vcmc+IDwxMDcxMTAxMDAzLjEwOTA0LjkxLmNhbWVsQGIxMTYtZHluLTM3LmFyY2hpdmUub3JnPiA8M0ZEOEM3RUIuNTA5MDIwMEBhcmNoaXZlLm9yZz4="},"prevInTopic":201,"nextInTopic":203,"prevInTime":201,"nextInTime":203,"topicId":178,"numMessagesInTopic":7,"msgSnippet":"I should qualify the following: ... In practice, we might choose to accept this risk rather than tackle the problem of checkpointing a whole cluster of","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 73097 invoked from network); 11 Dec 2003 20:23:24 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m16.grp.scd.yahoo.com with QMQP; 11 Dec 2003 20:23:24 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (209.237.232.202)\n  by mta3.grp.scd.yahoo.com with SMTP; 11 Dec 2003 20:23:24 -0000\r\nReceived: (qmail 32263 invoked by uid 100); 11 Dec 2003 20:22:31 -0000\r\nReceived: from b116-dyn-43.archive.org (HELO archive.org) (gojomo@...@209.237.240.43)\n  by mail-dev.archive.org with SMTP; 11 Dec 2003 20:22:31 -0000\r\nMessage-ID: &lt;3FD8D231.3060305@...&gt;\r\nDate: Thu, 11 Dec 2003 12:23:13 -0800\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6b) Gecko/20031205 Thunderbird/0.4\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nSubject: Re: [archive-crawler] Checkpointing\r\nReferences: &lt;3FBBF653.9060107@...&gt; &lt;1071101003.10904.91.camel@...&gt; &lt;3FD8C7EB.5090200@...&gt;\r\nIn-Reply-To: &lt;3FD8C7EB.5090200@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-Status: No, hits=-5.9 required=6.0\n\ttests=AWL,BAYES_01,EMAIL_ATTRIBUTION,IN_REP_TO,QUOTED_EMAIL_TEXT,\n\t      REFERENCES,REPLY_WITH_QUOTES,USER_AGENT_MOZILLA_UA\n\tautolearn=ham version=2.55\r\nX-Spam-Level: \r\nX-Spam-Checker-Version: SpamAssassin 2.55 (1.174.2.19-2003-05-19-exp)\r\nX-eGroups-Remote-IP: 209.237.232.202\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nX-Yahoo-Group-Post: member; u=137285340\r\nX-Yahoo-Profile: gojomo\r\n\r\nI should qualify the following:\n\nGordon Mohr wrote:\n&gt; John Erik Halse wrote:\n\n&gt;&gt; If we add the possibility to run a multiple machine crawl; Should the\n&gt;&gt; checkpoint span all the crawler instances or should the checkpoint be\n&gt;&gt; local to a single instance?\n&gt; \n&gt; \n&gt; It must span all instances to the extent required to prevent any URIs\n&gt; from falling through the cracks or major discrepancies in expected\n&gt; behavior between the original run and a subsequent resume-from-checkpoint.\n&gt; \n&gt; For example, if cooperating crawler A sends a URI to B for crawling, then\n&gt; makes checkpoint 0001, while B makes checkpoint 0001, then receives\n&gt; the URI, there would be a problem upon resuming both from their respective\n&gt; checkpoints 0001: A would think the URI was already handled, while B will\n&gt; not have received it.\n\nIn practice, we might choose to accept this risk rather than tackle the\nproblem of checkpointing a whole cluster of machines in unison.\n\nIn very broad (or continuous) crawls, it&#39;s quite likely the same URI would be\ndiscovered by other paths and retrieved. Even if it is not discovered, or is\nnot discovered quickly, missing it might not rise above the level of inherent\nimperfection in any broad crawl, because...\n  - the web changes even as it is being crawled\n  - the crawler cannot follow every path, because..\n     - time/bandwidth is limited\n     - many paths are of vanishingly small value and/or infinite\n     - other important volatile pages must be revisited\n\nSo this sort of error might be in the noise with regard to our development\npriorities.\n\n- Gordon\n\n"}}