{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":193794848,"authorName":"nhckbdk","from":"&quot;nhckbdk&quot; &lt;nhckbdk@...&gt;","profile":"nhckbdk","replyTo":"LIST","senderId":"-9naYTVn03AilYOBwKBctfxNDDx0AUqceNuJRZIs-PZLSyEcfsCUYSUTL2qdfj8QtW4Qwr9IG-5M-35NlqAr1lcgVIs","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: ARC reading","postDate":"1091547826","msgId":738,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNlb2JyaStldjQzQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQxMEU3NkZBLjkwNDAzMDFAYXJjaGl2ZS5vcmc+"},"prevInTopic":737,"nextInTopic":739,"prevInTime":737,"nextInTime":739,"topicId":727,"numMessagesInTopic":11,"msgSnippet":"... No need. It wasn t designed for that. :-) ... Super. Thanks! ... Looks good. ... What I m using it for is an application where I m running several, ","rawEmail":"Return-Path: &lt;nhckbdk@...&gt;\r\nX-Sender: nhckbdk@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 28960 invoked from network); 3 Aug 2004 15:44:21 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m10.grp.scd.yahoo.com with QMQP; 3 Aug 2004 15:44:21 -0000\r\nReceived: from unknown (HELO n11.grp.scd.yahoo.com) (66.218.66.66)\n  by mta2.grp.scd.yahoo.com with SMTP; 3 Aug 2004 15:44:20 -0000\r\nReceived: from [66.218.67.187] by n11.grp.scd.yahoo.com with NNFMP; 03 Aug 2004 15:43:50 -0000\r\nDate: Tue, 03 Aug 2004 15:43:46 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;ceobri+ev43@...&gt;\r\nIn-Reply-To: &lt;410E76FA.9040301@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 1465\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.218.66.66\r\nFrom: &quot;nhckbdk&quot; &lt;nhckbdk@...&gt;\r\nSubject: Re: ARC reading\r\nX-Yahoo-Group-Post: member; u=193794848\r\nX-Yahoo-Profile: nhckbdk\r\n\r\n&gt; Sorry about that.\n\nNo need. It wasn&#39;t designed for that. :-)\n\n&gt; I&#39;ve made an RFE to cover the work: &quot;[ 1002107 ] Externalize arc \n&gt; reader/writer as distinct package&quot; \n\nSuper. Thanks!\n\n&gt; I attached a patch that adds in the arc file File object to the\n&gt; metadata \n\nLooks good.\n\n&gt; &gt;&gt;&gt;public class ShareableARCRecord{\n&gt; &gt;&gt;&gt;   public ShareableARCRecord(ARCRecord record,File file);\n&gt; &gt;&gt;&gt;   public File getFile();\n&gt; &gt;&gt;&gt;   public ARCRecordMetaData getMetaData();\n&gt; &gt;&gt;&gt;   public byte[] readAll() throws IOException;\n&gt; &gt;&gt;&gt;   public InputStream getObjectAsInputStream()\n&gt; &gt;&gt;&gt;     throws IOException;\n\n&gt; Is there still need for this class instance?  The above cited patch\n&gt; adds getFile as getArcFile.  The above has the readAll which would\n&gt; be nice if you wanted to persist an ARC record beyond the closing \n&gt; of the underlying file but is there a use case for doing this?\n\nWhat I&#39;m using it for is an application where I&#39;m running several,\nindependent batch jobs on a given ARC file simultaneously.\nThe implementation (soon to come in a release of \ndk.netarkivet.ArcUtils) makes sure that\n  - no reading of the ARCRecord is done unless someone calls\n    readAll() or getObjectAsInputStream().\n  - every call to one of these two methods returns a &quot;fresh&quot; object.\n    This way, many callers can inspect the object independently.\n(So getObjectAsInputStream() cannot return the ARCRecord itself, as\ncallers would then share the position of the InputStream.)\n\nCheers,\nNiels\n\n\n\n"}}