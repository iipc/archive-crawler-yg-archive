{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"Michael Stack","from":"Michael Stack &lt;stack@...&gt;","profile":"stackarchiveorg","replyTo":"LIST","senderId":"Rh7btVImE_26-svHkg_dGoMsG2OzN62TsxkI5cEyPAQny260baMQEB4QJwA_mtuoUbJCtPBz24Q0FpryQzLzAfrV4q9L7reg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] extracting HTTP headers from WARC response records","postDate":"1174503462","msgId":3939,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2MDE4MDI2LjUwMzAzMDRAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGV0cXFxMytwaWJuQGVHcm91cHMuY29tPg==","referencesHeader":"PGV0cXFxMytwaWJuQGVHcm91cHMuY29tPg=="},"prevInTopic":3937,"nextInTopic":3942,"prevInTime":3938,"nextInTime":3940,"topicId":3937,"numMessagesInTopic":4,"msgSnippet":"... I assume you mean ARCRecord in the above Olaf? ... We could go the ARC route and internal to WARCRecords, they figure themselves whether they have http","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 61099 invoked from network); 21 Mar 2007 18:59:27 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m49.grp.scd.yahoo.com with QMQP; 21 Mar 2007 18:59:27 -0000\r\nReceived: from unknown (HELO mail.archive.org) (207.241.233.246)\n  by mta6.grp.scd.yahoo.com with SMTP; 21 Mar 2007 18:59:26 -0000\r\nReceived: from localhost (localhost [127.0.0.1])\n\tby mail.archive.org (Postfix) with ESMTP id E7811141BC22F;\n\tWed, 21 Mar 2007 11:57:34 -0700 (PDT)\r\nReceived: from mail.archive.org ([127.0.0.1])\n\tby localhost (mail.archive.org [127.0.0.1]) (amavisd-new, port 10024)\n\twith LMTP id 31098-10-23; Wed, 21 Mar 2007 11:57:34 -0700 (PDT)\r\nReceived: from [192.168.1.204] (c-67-180-203-212.hsd1.ca.comcast.net [67.180.203.212])\n\tby mail.archive.org (Postfix) with ESMTP id 3E415141BC01F;\n\tWed, 21 Mar 2007 11:57:34 -0700 (PDT)\r\nMessage-ID: &lt;46018026.5030304@...&gt;\r\nDate: Wed, 21 Mar 2007 11:57:42 -0700\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.8.1.2pre) Gecko/20070111 SeaMonkey/1.1\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;etqqq3+pibn@...&gt;\r\nIn-Reply-To: &lt;etqqq3+pibn@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Virus-Scanned: Debian amavisd-new at archive.org\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Michael Stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] extracting HTTP headers from WARC response\n records\r\nX-Yahoo-Group-Post: member; u=168599281; y=3cvVRrh4LlThobThSpT0Pk23UOriK7zQAVPGjM4QoVqXB9ZWKy5uWUn7\r\nX-Yahoo-Profile: stackarchiveorg\r\n\r\npandae667 wrote:\n&gt;\n&gt; Dear IA-Team,\n&gt;\n&gt; as requested in [HER-1103] I want/need an easy way to retrieve HTTP\n&gt; headers from WARC records (similar to how its done for ARC records).\n&gt;\n&gt; I&#39;ve allready spent some time with this issue and now need some\n&gt; feedback to decide upon a &quot;clean&quot; solution (as I wouldn&#39;t consider my\n&gt; current solution &quot;final&quot; yet).\n&gt;\n&gt; Here is my current approach, feel free to add comments:\n&gt; - I basically moved all of the HTTP-Header parsing code from\n&gt; ARCReader into ArchiveReader (this includes modifing read() to handle\n&gt; the presence of a httpHeaderStream like it was done in ARCReader)\n&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nI assume you mean ARCRecord in the above Olaf?\n\n\n&gt; - extend ArchiveReader with abstract method\n&gt; recordContainsParsableHeader() which I basically use to make sure I\n&gt; don&#39;t try to parse http headers when there are none\n&gt;\n\n\n\n\nWe could go the ARC route and internal to WARCRecords, they figure \nthemselves whether they have http headers or not and respond accordingly \nwhen asked.   We could move the http header processing up into \nArchiveReader so its generally available.  We would need to be careful \nthe additions  do not clash with the existing ArchiveReader headers \nwhich contain for ARCs the parsed metadata line and for WARCs a parse of \nthe &#39;mime&#39; headers.\n\nBut I think that route is going to get ugly quick in the WARC world \nwhere we have a variety of possible record types instead of just one.  \nIt will be unclean having each WARC record mark whether or not it has \nhttp headers.\n\nPlus, it would be sweet if we could make the processing of headers more \ngeneric than just http response headers.  For example, the WARC request, \nif http, will contain http request headers as might the most basic WARC \nmetadata type if written as key, colon, then value.\n\nWhat you think of our making a decorator that a WARCReader applied to \nWARCRecords if it judged the record contained headers? The WARCReader \nwould look at record type and the record&#39;s content-type and then pick an \nappropriate decorator (Or would &#39;parser&#39; be a better term than &#39;decorator&#39;?)\n\n&gt; - change getContentBegin to behave for WARC response records like it\n&gt; does for ARC records (it points after the http headers but before the\n&gt; http payload)\n&gt;\n\n\n\n\n\ngetContentBegin needs cleanup. It currently means something different \nfor ARCs and WARCs.\n\nThanks for looking into this Olaf,\nSt.Ack\n\n\n&gt; Any ideas/thoughts are welcome.\n&gt; If the IA-Team dislikes such heavy modifications of the current\n&gt; readers/records I could also just write my own\n&gt; HttpHeaderParsingWARCReader... But I think extending the allready\n&gt; existant code would be a better approach.\n&gt;\n&gt; Regards\n&gt; Olaf Freyer\n&gt;\n&gt;  \n\n\n"}}