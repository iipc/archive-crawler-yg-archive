{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"VtjjlTbEMdrWeoA69Bm2wnsRaN6-hnHBYDxvR7YhlpcBTamIPB6rYzQuFpcqBewueb6nsVXZtolY9mNIXRN4_K5XoDcUaxk","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [archive-crawler] Decide rules","postDate":"1262909845","msgId":6279,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRCNDY3OTk1LjUwNDA2MDNAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzY2NjFCQThAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1Pg==","referencesHeader":"PDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzI3NkIyRkJAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1PgkgPDZhMDI5ZTJkMDkxMjI2MTAyOG03MGJkNTE5YW0zNGNhMzRmNDEwNmZkMjFAbWFpbC5nbWFpbC5jb20+CSA8MkQxMjdGMTFEQzc5NzE0RTlCNkE0M0FDOTQ1ODE0N0YzMjc2QjMwM0BzdWV4MDctbWJ4LTAzLmFkLnN5ci5lZHU+IDw2YTAyOWUyZDA5MTIyODA4MzVzNTAxMzZmZjB4NzgwNmZlZTMyMmVjZjRlOEBtYWlsLmdtYWlsLmNvbT4gPDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzI3NkIzMDlAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1PiA8NEI0M0Q0MDEuNTA5MDIwNkBhcmNoaXZlLm9yZz4gPDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzY2NjFCQThAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1Pg=="},"prevInTopic":6261,"nextInTopic":6281,"prevInTime":6278,"nextInTime":6280,"topicId":6240,"numMessagesInTopic":14,"msgSnippet":"... That sounds useful, though since the ACCEPT/REJECT/PASS logic isn t quite boolean, you might want to describe the combiners in other terms. For example, if","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 83242 invoked from network); 8 Jan 2010 00:17:28 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.sp2.yahoo.com with QMQP; 8 Jan 2010 00:17:28 -0000\r\nX-Received: from unknown (HELO relay01.pair.com) (209.68.5.15)\n  by mta2.grp.sp2.yahoo.com with SMTP; 8 Jan 2010 00:17:28 -0000\r\nX-Received: (qmail 29852 invoked from network); 8 Jan 2010 00:17:27 -0000\r\nX-Received: from 67.188.14.54 (HELO ?192.168.23.128?) (67.188.14.54)\n  by relay01.pair.com with SMTP; 8 Jan 2010 00:17:27 -0000\r\nX-pair-Authenticated: 67.188.14.54\r\nMessage-ID: &lt;4B467995.5040603@...&gt;\r\nDate: Thu, 07 Jan 2010 16:17:25 -0800\r\nUser-Agent: Thunderbird 2.0.0.23 (Windows/20090812)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;2D127F11DC79714E9B6A43AC9458147F3276B2FB@...&gt;\t &lt;6a029e2d0912261028m70bd519am34ca34f4106fd21@...&gt;\t &lt;2D127F11DC79714E9B6A43AC9458147F3276B303@...&gt; &lt;6a029e2d0912280835s50136ff0x7806fee322ecf4e8@...&gt; &lt;2D127F11DC79714E9B6A43AC9458147F3276B309@...&gt; &lt;4B43D401.5090206@...&gt; &lt;2D127F11DC79714E9B6A43AC9458147F36661BA8@...&gt;\r\nIn-Reply-To: &lt;2D127F11DC79714E9B6A43AC9458147F36661BA8@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] Decide rules\r\nX-Yahoo-Group-Post: member; u=137285340; y=seo93yEHOFrcraP6bmpNdf6romkJPDola2MTVBbLuwfw\r\nX-Yahoo-Profile: gojomo\r\n\r\nSteven A Rowe wrote:\n&gt; Hi Gordon,\n&gt; \n&gt; Thanks very much for the background, it helps explain the current situation.\n&gt; \n&gt; I&#39;ve been thinking of implementing BooleanDecideRule, extending PredicatedDecideRule to take an &quot;operation&quot; attribute (=AND/OR/NOT), accepting nested PredicatedDecideRule&#39;s.  If I do end up doing this, I&#39;ll create an issue and attach a patch.\n\nThat sounds useful, though since the ACCEPT/REJECT/PASS logic isn&#39;t \nquite boolean, you might want to describe the combiners in other terms.\n\nFor example, if you had an &quot;OR&quot; rule, and its three internal rules \nreturn {ACCEPT, REJECT, PASS}, what is the desired result? (Is ACCEPT \nlike &#39;true&#39; or REJECT like &#39;true&#39;? I think depends on whether you&#39;re \nruling things in or out at that point.)\n\nWe&#39;ve consciously gone in the direction of *more* rules, descriptively \nnamed, rather than fewer rules with internal settings (except with \nregard to the applied decision). So we have &#39;MatchesRegexDecideRule&#39; and \n&#39;NotMatchesRegexDecideRule&#39;, rather than a single &#39;RegexDecideRule&#39; \nwhich either has a &#39;not&#39; toggle or has to be wrapped in a &#39;not&#39;.\n\nThinking of &#39;AND&#39;- and &#39;OR&#39;-like situations, this would suggest \ncomposite rules like &#39;IfAllAcceptDecideRule&#39;/&#39;IfAllRejectDecideRule&#39;, \nand &#39;IfAnyAcceptDecideRule&#39;/&#39;IfAnyRejectDecideRule&#39;.\n\nAgain, this may seem a little strange but is based on experience where \ndeep boolean combinations caused difficulty keeping track of whether, at \na certain nesting, &#39;true&#39; or &#39;false&#39; implied &#39;in&#39;, &#39;out&#39;, or &#39;no opinion&#39;.\n\n- Gordon\n\n\n&gt; Steve\n&gt; \n&gt; On 01/05/2010 at 7:06 PM, Gordon Mohr wrote:\n&gt;&gt; A bit of background:\n&gt;&gt;\n&gt;&gt; We used to have a system of composable &#39;Filter&#39; URI-test classes, with\n&gt;&gt; AND/OR/NOT options.\n&gt;&gt;\n&gt;&gt; However, to implement common needs, the nesting got to be pretty deep\n&gt;&gt; and complicated. Inside the setup, it wasn&#39;t very easy to understand\n&gt;&gt; whether &#39;true&#39; or &#39;false&#39; meant &#39;ok to get&#39; or &#39;not ok to get&#39; or &#39;no\n&gt;&gt; opinion&#39;.\n&gt;&gt;\n&gt;&gt; We observed that it was very common to need rules where, if a test\n&gt;&gt; passes, a URI is definitively &quot;in&quot; or &quot;out&quot; -- while if the test does\n&gt;&gt; not pass, no opinion is expressed either way. (Doing a series of these\n&gt;&gt; in nested boolean expressions can get quite confusing.)\n&gt;&gt;\n&gt;&gt; So, we transitioned to scoping (and other per-URI go/no-go actions) as a\n&gt;&gt; flat series of &#39;DecideRules&#39;, where the last to express an opinion wins.\n&gt;&gt; That makes a lot of common needs a matter of ordering the rules (rather\n&gt;&gt; than nesting) -- first rule-in everything of general interest, then\n&gt;&gt; rule-out those known to have problems.\n&gt;&gt;\n&gt;&gt; Which brings us to now.\n&gt;&gt;\n&gt;&gt; The series-of-DecideRules approach has worked well for our usual needs.\n&gt;&gt; I thought we might eventually implement OR and AND rules, and they would\n&gt;&gt; be relatively easy to add, but our internal crawls haven&#39;t had a\n&gt;&gt; pressing need for that yet.\n&gt;&gt;\n&gt;&gt; That said, you have a number of options to implement what you need:\n&gt;&gt;\n&gt;&gt; - create generic AND/OR/etc rules in Java, then compose your tests with\n&gt;&gt; them\n&gt;&gt;\n&gt;&gt; - create a custom DecideRule class in Java which does exactly the\n&gt;&gt; test(s) you need, applying a decision if appropriate\n&gt;&gt;\n&gt;&gt; - use the BeanShellDecideRule (Heritrix 1.x) or ScriptedDecideRule (H3)\n&gt;&gt; to write your custom test in a scripting language\n&gt;&gt;\n&gt;&gt; (If you do wind up implementing generic AND/etc composing-rules, we&#39;d\n&gt;&gt; welcome the code-contribution to the core project, even as I would\n&gt;&gt; suggest people avoid that complexity in their scope rules whenever\n&gt;&gt; possible.)\n&gt;&gt;\n&gt;&gt; Hope this helps,\n&gt;&gt;\n&gt;&gt; - Gordon @ IA\n&gt;&gt;\n&gt;&gt; Steven A Rowe wrote:\n&gt;&gt;&gt; Hi Anas,\n&gt;&gt;&gt;\n&gt;&gt;&gt; You&#39;re right, the sequence effect is not OR. I don&#39;t know enough\n&gt;&gt; about the language of process flows to put the right label on what\n&gt;&gt; Heritrix is doing :).\n&gt;&gt;&gt; I would like to be able to write rules (not code) that allow me to\n&gt;&gt; stamp REJECT on URIs that have content type text/html AND are larger\n&gt;&gt; than 10MB, and PASS for everything else. How can I do that?\n&gt;&gt;&gt; Steve\n&gt;&gt;&gt;\n&gt;&gt;&gt; On 12/28/2009 at 11:35 AM, anas elghafari wrote:\n&gt;&gt;&gt;&gt; I don&#39;t think the effect of the sequence is OR. Every rule stamps the\n&gt;&gt;&gt;&gt; URI with ACCEPT, REJECT or PASS. And the last non-pass is the\n&gt;&gt;&gt;&gt; operative judgment. So I don&#39;t quite understand the problem. Just have\n&gt;&gt;&gt;&gt; your rules stamp REJECT on what you don&#39;t like, and PASS on everything\n&gt;&gt;&gt;&gt; else... and this gives the effect of combining the reject rules with\n&gt;&gt;&gt;&gt; &quot;AND&quot;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; On Sat, Dec 26, 2009 at 9:05 PM, Steven A Rowe &lt;sarowe@...\n&gt;&gt;&gt;&gt; &lt;mailto:sarowe%40syr.edu&gt; &gt; wrote:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Hi Anas,\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; I was hoping that you (or someone else on this list) would say that I\n&gt;&gt;&gt;&gt; was missing something that would allow me to only write rules, and not\n&gt;&gt;&gt;&gt; have to write code.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Combining multiple conditions together seems like such a basic\n&gt;&gt;&gt;&gt; requirement I&#39;m surprised it doesn&#39;t already exist - something like\n&gt;&gt;&gt;&gt; the ability to override the logical operator on DecideRuleSequence\n&gt;&gt;&gt;&gt; (currently hardwired to OR) to other possibilities like AND. Then I\n&gt;&gt;&gt;&gt; could write something like (pardon the pseudocode):\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; OrDecideRuleSequence : decision=LASTMATCH RejectDecideRule\n&gt;&gt;&gt;&gt; SurtPrefixedDecideRule : seedsAsSurtPrefixes=true ; decision=ACCEPT\n&gt;&gt;&gt;&gt; AndDecideRuleSequence : decision=REJECT\n&gt;&gt;&gt;&gt; ContentTypeMatchesRegexDecideRule : regex=text/html\n&gt;&gt;&gt;&gt; ExceedsDocumentLengthThresholdDecideRule :\n&gt;&gt;&gt;&gt; contentLengthThreshold=10000000 AndDecideRuleSequence :\n&gt;&gt;&gt;&gt; decision=REJECT ContentTypeMatchesRegexDecideRule : regex=text/plain\n&gt;&gt;&gt;&gt; ExceedsDocumentLengthThresholdDecideRule :\n&gt;&gt;&gt;&gt; contentLengthThreshold=100000\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Is this a bad idea?\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Steve\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; On 12/26/2009 at 1:28 PM, anas elghafari wrote: &gt; &gt; &gt; You can write\n&gt;&gt;&gt;&gt; your own decideRules that subclass the DecideRule, and you &gt; overwrite\n&gt;&gt;&gt;&gt; the decisionFor(Object o) method. In the decisionFor(Object o) &gt; you\n&gt;&gt;&gt;&gt; check if the Object is a CrawlURI, if so you typecast into CrawlURI\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; and then you will be able to check the contenttype and content size\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; (look at CrawlURI API). And you can issue decesion REJECT for the\n&gt;&gt; uris\n&gt;&gt;&gt;&gt;&gt; that don&#39;t fulfill you criteria. &gt; &gt; You can also do this by\n&gt;&gt; adding\n&gt;&gt;&gt;&gt; a processor, where -in your overwriting &gt; of innerProcess(CrawlURI\n&gt;&gt;&gt;&gt; curi)- you check the type and size and then you &gt; reject those URIs\n&gt;&gt;&gt;&gt; you don&#39;t want to process by calling &gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt; curi.skipToProcessorChain(getCrawlController().getPostProcessorChain())\n&gt;&gt;&gt;&gt;&gt;&gt; beware that DecideRules/Filter inserted before the extraction\n&gt;&gt; will\n&gt;&gt;&gt;&gt;&gt; prevent the CrawlJob from ever getting to Uris that are acceptable,\n&gt;&gt;&gt;&gt;&gt; because the path to them goes through URIs that are not. &gt; &gt; Anas\n&gt;&gt;&gt;&gt;&gt;&gt; On Wed, Dec 23, 2009 at 1:48 AM, Steven A Rowe &lt;sarowe@...\n&gt;&gt; &lt;mailto:sarowe%40syr.edu&gt;\n&gt;&gt;&gt;&gt; &lt;mailto:sarowe%40syr.edu&gt; &gt; wrote: &gt; &gt; Hi, &gt; &gt; I want to write\n&gt;&gt;&gt;&gt; decide-rules that reject resources based on two &gt; conditions:\n&gt;&gt;&gt;&gt; content-length and content-type (e.g., text/html resources &gt; larger\n&gt;&gt;&gt;&gt; than 10MB, and text/plain resources larger than 100KB), but I &gt; can&#39;t\n&gt;&gt;&gt;&gt; find any way to logically AND rule subsets together. &gt; &gt; Is there a\n&gt;&gt;&gt;&gt; way to write decide-rules that would achieve what I &gt; want? Should I\n&gt;&gt;&gt;&gt; be using ScriptedDecideRules? &gt; &gt; Thanks (for your patience with a\n&gt;&gt;&gt;&gt; newbie), &gt; Steve\n&gt; \n&gt; \n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n"}}