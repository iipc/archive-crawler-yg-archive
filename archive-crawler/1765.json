{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":70520249,"authorName":"rich_80205","from":"&quot;rich_80205&quot; &lt;rich_80205@...&gt;","profile":"rich_80205","replyTo":"LIST","senderId":"mvDcEdv5GFNPLk6VbOfWcnRm5Dy600o9w9loqvYSr4ZaRJ7HOvxd9LYYKBOWK-7H6_evWsobrFUjY3TvH6ss0yHxs7_ygIew42E","spamInfo":{"isSpam":false,"reason":"12"},"subject":"GzippedInputStream usage confusion","postDate":"1114734999","msgId":1765,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGQ0cnZpbit0OXVuQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":1772,"prevInTime":1764,"nextInTime":1766,"topicId":1765,"numMessagesInTopic":2,"msgSnippet":"I thought it d be useful to use GzippedInputStream separately for a project I m working on, which processes files created by gzip and have multi-part gzipped","rawEmail":"Return-Path: &lt;rich_80205@...&gt;\r\nX-Sender: rich_80205@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 84758 invoked from network); 29 Apr 2005 00:36:42 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m28.grp.scd.yahoo.com with QMQP; 29 Apr 2005 00:36:42 -0000\r\nReceived: from unknown (HELO n24.bulk.scd.yahoo.com) (66.94.237.53)\n  by mta2.grp.scd.yahoo.com with SMTP; 29 Apr 2005 00:36:42 -0000\r\nReceived: from [66.218.69.4] by n24.bulk.scd.yahoo.com with NNFMP; 29 Apr 2005 00:36:42 -0000\r\nReceived: from [66.218.66.78] by mailer4.bulk.scd.yahoo.com with NNFMP; 29 Apr 2005 00:36:42 -0000\r\nDate: Fri, 29 Apr 2005 00:36:39 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;d4rvin+t9un@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2818\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: &quot;rich_80205&quot; &lt;rich_80205@...&gt;\r\nSubject: GzippedInputStream usage confusion\r\nX-Yahoo-Group-Post: member; u=70520249\r\nX-Yahoo-Profile: rich_80205\r\n\r\nI thought it&#39;d be useful to use GzippedInputStream separately for a\nproject I&#39;m working on, which processes files created by &#39;gzip&#39; and\nhave multi-part gzipped contents. However, I have had no luck\nin getting it to uncompress multiple parts.\n\nI&#39;ve looked at the code and the Javadoc for that class, but\nI always get some variation of the following error:\n\nException in thread &quot;main&quot; java.lang.RuntimeException: Failed i/o:\nNegative seek offset at\norg.archive.io.GzippedInputStream.hasNext(GzippedInputStream.java:125)\n\tat GZTest.main(GZTest.java:39)\n\nSee my test program below - if I change it to just call\nunzipper.read(b, 0, blockSize) without the outer (it.hasNext())\nloop, it works fine, but I only get the first gzipped file.\nI&#39;m not clear on the usage of hasNext() and next() for this\n(I&#39;ve used Iterator instances in many other classes successfully).\nDo I get a new GzippedInputStream from each call to next() and\nuse that to get that gzipped-member, or something else?\n\nAny help would be very appreciated. Thanks.\n\nRich Scott\n\n---------------\nimport java.io.BufferedInputStream;\nimport java.io.BufferedReader;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Iterator;\n\nimport org.archive.io.GzippedInputStream;\nimport org.archive.io.RandomAccessInputStream;\n\npublic class GZTest {\n\n  public static void main(String[] args) { \n    int blockSize = 4096;\n    String fileName = &quot;/tmp/multi.gz&quot;;\n    ByteArrayOutputStream plainBytes = \n        new ByteArrayOutputStream(1000000);\n    String plainText = null;\n\n    GzippedInputStream unzipper = null;\n\n    try {\n      unzipper = new GzippedInputStream(                             \n                    new RandomAccessInputStream(new File(fileName)),\nblockSize);\n    } catch (IOException e) {\n      System.err.println(&quot;I/O exception creating unzipper stream: &quot; +\n                 e.getMessage());\n    }   \n    byte[] b = new byte[blockSize];\n\n\n    Iterator it = unzipper.iterator();\n\n    while (it.hasNext()) {\n      GzippedInputStream gzin = (GzippedInputStream) it.next();\n      int i = 0;\n      try { \n        while ((i = gzin.read(b, 0, blockSize)) &gt; 0)\n          plainBytes.write(b, 0, i);\n      } catch (IOException e) {\n        System.err.println(&quot;I/O exception while copying stream: &quot; +\n                   e.getMessage());\n      }     \n    }   \n\n    try {\n      unzipper.close();\n    } catch (IOException e) {\n        System.err.println(&quot;I/O exception while closing stream: &quot; +\n                   e.getMessage());\n      }     \n\n    plainText  = plainBytes.toString();\n    plainBytes = null;\n\n    System.out.println(plainText);\n  } \n}\n\n\n\n\n"}}