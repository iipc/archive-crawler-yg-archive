{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"H9Uta0pMX-vNXoiImUUd4SUgBCdogiPQcIk42XeQ-PeGjevtsVD6-5lRXqBdjpqIsFL_gaqPHMMdqTNSO3t3OsJpZyKqL-I","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [archive-crawler] Change URI Ordering","postDate":"1276894906","msgId":6587,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDMUJERUJBLjQwMjAzMDFAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDRDMUI5MjYyLjEwMTA3MDRAbXBpLWluZi5tcGcuZGU+","referencesHeader":"PDRDMUI5MjYyLjEwMTA3MDRAbXBpLWluZi5tcGcuZGU+"},"prevInTopic":6586,"nextInTopic":0,"prevInTime":6586,"nextInTime":6588,"topicId":6586,"numMessagesInTopic":2,"msgSnippet":"... The assumption that a URI s relative order within its own named queue (usually, a queue per hostname) doesn t change is fairly entwined with the current","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 91077 invoked from network); 18 Jun 2010 21:01:49 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m14.grp.re1.yahoo.com with QMQP; 18 Jun 2010 21:01:49 -0000\r\nX-Received: from unknown (HELO relay01.pair.com) (209.68.5.15)\n  by mta3.grp.sp2.yahoo.com with SMTP; 18 Jun 2010 21:01:48 -0000\r\nX-Received: (qmail 19601 invoked from network); 18 Jun 2010 21:01:48 -0000\r\nX-Received: from 208.70.27.190 (HELO silverbook.local) (208.70.27.190)\n  by relay01.pair.com with SMTP; 18 Jun 2010 21:01:48 -0000\r\nX-pair-Authenticated: 208.70.27.190\r\nMessage-ID: &lt;4C1BDEBA.4020301@...&gt;\r\nDate: Fri, 18 Jun 2010 14:01:46 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.1.9) Gecko/20100317 Thunderbird/3.0.4\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nCc: Dimitar Denev &lt;ddenev@...&gt;\r\nReferences: &lt;4C1B9262.1010704@...&gt;\r\nIn-Reply-To: &lt;4C1B9262.1010704@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] Change URI Ordering\r\nX-Yahoo-Group-Post: member; u=137285340; y=4B8CJorRgFaFtJQE3UKF7Ej-LUZ-tgH23EZmWKA_08-T\r\nX-Yahoo-Profile: gojomo\r\n\r\nOn 6/18/10 8:36 AM, Dimitar Denev wrote:\n&gt; Hi all,\n&gt;\n&gt; I use Heritrix 3 and I&#39;d like to change the URI order during the crawl.\n&gt; Right now I have a custom PrecedencePolicy which assigns precedence to\n&gt; each URI after it is discovered. My understanding is that once the\n&gt; precedence is assigned it can not be updated. Is there a way to change\n&gt; the precedence in the later stages of the crawl?\n\nThe assumption that a URI&#39;s relative order within its own named queue \n(usually, a queue per hostname) doesn&#39;t change is fairly entwined with \nthe current architecture. There&#39;s no current facility for random access \nto URIs deep inside a queue; essentially the &#39;key&#39; is an arbitrary value \nchosen for ordering purposes, not for lookup.\n\nYou could remember these insert keys for the duration of the time a URI \nis enqueued-but-not-yet-fetched, if you could afford the overhead. Then \nwhen you know a URI needs to be removed and reinserted at a new \nlocation, you could find the previous insert efficiently.\n\nIf the reorderings were infrequently triggered, you could also iterate \nover the whole queue and remove/reinsert each URI in turn.\n\nAlso, the existing precedence features do accommodate *queues* changing \nprecedence during the crawl. So if the kinds of URIs that change \nprecedence are all alike, and change together, that might be a suitable \napproach.\n\nIt really depends on the scale of your crawls and the frequency of your \nreorderings.\n\nAlso keep in mind that this functionality isn&#39;t yet in active use in any \nof our production crawls, and may not be very efficient for fine-grained \nordering (many separate precedence levels -- dozens or hundreds). It was \ndesigned thinking of crawls that might have a handful (2-10) of distinct \nprecedence groupings.\n\n&gt; I consider replacing the BdbMultipleWorkQueues class with my own\n&gt; implementation which replaces BerkleyDB with a simple container for the\n&gt; URIs. Is that a plausible solution?\n\nPossibly, though if you&#39;re discarding BerkeleyDB-JE as the queue storage \nlayer, you might want to create a sibling class or subclass of \nBdbFrontier. Lots of simple in-memory queue/map structures are plausible \nbases for the frontier in small crawls; for large crawls the BDB layer \nhelpfully hides a bunch of complexity.\n\nHope this helps,\n\n- Gordon @ IA\n\n"}}