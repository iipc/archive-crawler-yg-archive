{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"stack","from":"stack &lt;stack@...&gt;","profile":"stackarchiveorg","replyTo":"LIST","senderId":"MkG6I_mkjzVRVMyqQglpwoFk5-E_MMTXx6cAyCLjCMcJNu4B9gbQI70dlHogJrm-DlGXfuW1USr9sgH8GYurCA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Some improvements for FetchHTTP","postDate":"1108658914","msgId":1575,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQyMTRDQUUyLjUwNDA5MDJAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDIwMDUwMjE3MTQxMi4wNDMxMi5jay1oZXJpdHJpeEBuZXdzY2x1Yi5kZT4=","referencesHeader":"PDIwMDUwMjE3MTQxMi4wNDMxMi5jay1oZXJpdHJpeEBuZXdzY2x1Yi5kZT4="},"prevInTopic":1574,"nextInTopic":1582,"prevInTime":1574,"nextInTime":1576,"topicId":1574,"numMessagesInTopic":4,"msgSnippet":"... I d say we should just decide for the operator which CM to use.  Its detail an operator need not be concerned with. Do you find a single connection CM more","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 73403 invoked from network); 17 Feb 2005 16:44:50 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m6.grp.scd.yahoo.com with QMQP; 17 Feb 2005 16:44:50 -0000\r\nReceived: from unknown (HELO dns.duboce.net) (63.203.238.114)\n  by mta1.grp.scd.yahoo.com with SMTP; 17 Feb 2005 16:44:49 -0000\r\nReceived: from archive.org ([192.168.1.105])\n\t(authenticated)\n\tby dns-eth1.duboce.net (8.10.2/8.10.2) with ESMTP id j1HFt7E31134\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 17 Feb 2005 07:55:08 -0800\r\nMessage-ID: &lt;4214CAE2.5040902@...&gt;\r\nDate: Thu, 17 Feb 2005 08:48:34 -0800\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7b) Gecko/20040421\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;200502171412.04312.ck-heritrix@...&gt;\r\nIn-Reply-To: &lt;200502171412.04312.ck-heritrix@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Remote-IP: 63.203.238.114\r\nFrom: stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] Some improvements for FetchHTTP\r\nX-Yahoo-Group-Post: member; u=168599281\r\nX-Yahoo-Profile: stackarchiveorg\r\n\r\nChristian Kohlschuetter wrote:\n\n&gt; Hi,\n&gt;\n&gt; I have modified FetchHTTP a little bit and would like to contribute my\n&gt; changes. Please tell me if you are interested in the following features:\n&gt;\n&gt; - Provide an expert configuration setting to choose the \n&gt; HttpConnectionManager\n&gt; (I use my own instead of MultiThreadedHttpConnectionManager)\n\nI&#39;d say we should just decide for the operator which CM to use.  Its \ndetail an operator need not be concerned with.\n\nDo you find a single connection CM more performant somehow or is it just \nthat it just makes sense to you that the CM be advertised as single \nconnection only?\n\nYour patch doesn&#39;t include your single connection CM.  Send it over and \nI&#39;ll just add it in in place of the MTCM.\n\n&gt;\n&gt; - Be polite to the HTTP servers and send the &quot;Range&quot; header, stating \n&gt; that you\n&gt; are only interested in the first n bytes (if max-length-bytes &gt; 0)\n&gt; This results in a &quot;206 Partial Content&quot; status, which probably is \n&gt; better than\n&gt; just cutting the full response afterwards.\n\n&gt;\n&gt; - Always send a &quot;Connection: close&quot; header\n&gt;\nThe above look like good additions but are HTTP/1.1 features when the \ncrawler is advertising itself as http 1.0.  Are you finding evidence \nthat they improve the way servers react to the crawler?\n\n&gt; - Shutdown the connection manager at the finalTasks step, if possible.\n&gt;\n&gt; The patch is attached (I was too lazy to split it into several ones, \n&gt; please\n&gt; excuse).\n\nNo worries.  Its fine as is.\n\n&gt;\n&gt; Greetings,\n&gt;\n&gt; Christian\n&gt;\n&gt; PS: I hope it&#39;s okay to post such patches to the mailing list. Please \n&gt; tell me\n&gt; if you would like to only have them in the sourceforge tracker.\n\nMailing list is grand.  An RFE which had for a topic the subject of this \nemail might work better if there&#39;s to be a bunch of back and forth. It&#39;d \nalso ensure a mark in the release notes upon patch application (Main \nsource for release notes is trawling of closed bugs and rfes).\n\nYours,\nSt.Ack\n\n\n&gt; -- \n&gt; Christian Kohlschï¿½tter\n&gt; mailto: ck -at- NewsClub.de\n&gt;\n&gt; *Yahoo! Groups Sponsor*\n&gt; ADVERTISEMENT\n&gt;\n&gt;\n&gt; ------------------------------------------------------------------------\n&gt; *Yahoo! Groups Links*\n&gt;\n&gt;     * To visit your group on the web, go to:\n&gt;       http://groups.yahoo.com/group/archive-crawler/\n&gt;        \n&gt;     * To unsubscribe from this group, send an email to:\n&gt;       archive-crawler-unsubscribe@yahoogroups.com\n&gt;       &lt;mailto:archive-crawler-unsubscribe@yahoogroups.com?subject=Unsubscribe&gt;\n&gt;        \n&gt;     * Your use of Yahoo! Groups is subject to the Yahoo! Terms of\n&gt;       Service &lt;http://docs.yahoo.com/info/terms/&gt;.\n&gt;\n&gt;\n&gt;------------------------------------------------------------------------\n&gt;\n&gt;Index: FetchHTTP.java\n&gt;===================================================================\n&gt;RCS file: /cvsroot/archive-crawler/ArchiveOpenCrawler/src/java/org/archive/crawler/fetcher/FetchHTTP.java,v\n&gt;retrieving revision 1.84\n&gt;diff -u -r1.84 FetchHTTP.java\n&gt;--- FetchHTTP.java\t1 Feb 2005 21:40:41 -0000\t1.84\n&gt;+++ FetchHTTP.java\t17 Feb 2005 12:40:14 -0000\n&gt;@@ -48,6 +48,7 @@\n&gt; import org.apache.commons.httpclient.Header;\n&gt; import org.apache.commons.httpclient.HttpClient;\n&gt; import org.apache.commons.httpclient.HttpConnection;\n&gt;+import org.apache.commons.httpclient.HttpConnectionManager;\n&gt; import org.apache.commons.httpclient.HttpException;\n&gt; import org.apache.commons.httpclient.HttpMethod;\n&gt; import org.apache.commons.httpclient.HttpMethodBase;\n&gt;@@ -61,6 +62,7 @@\n&gt; import org.apache.commons.httpclient.auth.DigestScheme;\n&gt; import org.apache.commons.httpclient.auth.MalformedChallengeException;\n&gt; import org.apache.commons.httpclient.cookie.CookiePolicy;\n&gt;+import org.apache.commons.httpclient.params.HttpClientParams;\n&gt; import org.apache.commons.httpclient.params.HttpMethodParams;\n&gt; import org.apache.commons.httpclient.protocol.Protocol;\n&gt; import org.apache.commons.httpclient.protocol.ProtocolSocketFactory;\n&gt;@@ -121,7 +123,13 @@\n&gt;     public static final String ATTR_ACCEPT_HEADERS = &quot;accept-headers&quot;;\n&gt;     public static final String ATTR_DEFAULT_ENCODING = &quot;default-encoding&quot;;\n&gt;     public static final String ATTR_SHA1_CONTENT = &quot;sha1-content&quot;;\n&gt;-   \n&gt;+    \n&gt;+    public static final String ATTR_CONNECTION_MANAGER = &quot;http-connection-manager&quot;;\n&gt;+    private static final String[] AVAILABLE_CONNECTION_MANAGERS = new String[]{\n&gt;+        MultiThreadedHttpConnectionManager.class.getName()\n&gt;+    };\n&gt;+    private static final String DEFAULT_CONNECTION_MANAGER = AVAILABLE_CONNECTION_MANAGERS[0];\n&gt;+    \n&gt;     /**\n&gt;      * SSL trust level setting attribute name.\n&gt;      */\n&gt;@@ -148,6 +156,9 @@\n&gt;     private static Boolean DEFAULT_SHA1_CONTENT = new Boolean(true);\n&gt; \n&gt;     private transient HttpClient http = null;\n&gt;+    private transient HttpConnectionManager cm = null;\n&gt;+    \n&gt;+    private static final Header HEADER_CONNECTION_CLOSE = new Header(&quot;Connection&quot;, &quot;close&quot;);\n&gt; \n&gt;     /**\n&gt;      * How many &#39;instant retries&#39; of HttpRecoverableExceptions have occurred\n&gt;@@ -244,6 +255,12 @@\n&gt;                 &quot;retrieved content-bodies.&quot;,\n&gt;                 DEFAULT_SHA1_CONTENT));\n&gt;             e.setExpertSetting(true);\n&gt;+            \n&gt;+       e = addElementToDefinition(new SimpleType(ATTR_CONNECTION_MANAGER,\n&gt;+            &quot;The HTTP Connection Manager to be used&quot;,\n&gt;+            DEFAULT_CONNECTION_MANAGER, AVAILABLE_CONNECTION_MANAGERS));\n&gt;+       e.setExpertSetting(true);\n&gt;+       e.setOverrideable(false);\n&gt;     }\n&gt; \n&gt;     protected void innerProcess(final CrawlURI curi)\n&gt;@@ -306,6 +323,12 @@\n&gt; \n&gt;         configureMethod(curi, method);\n&gt;         \n&gt;+        final long maxLength = getMaxLength(curi);\n&gt;+        if(maxLength &gt; 0) {\n&gt;+            method.addRequestHeader(&quot;Range&quot;, &quot;bytes=0-&quot;.concat(Long.toString(maxLength-1)));\n&gt;+        }\n&gt;+        method.addRequestHeader(HEADER_CONNECTION_CLOSE);\n&gt;+        \n&gt;         // Populate credentials. Set config so auth. is not automatic.\n&gt;         boolean addedCredentials = populateCredentials(curi, method);\n&gt;         method.setDoAuthentication(addedCredentials);\n&gt;@@ -330,7 +353,7 @@\n&gt;             try {\n&gt;                 // Force read-to-end, so that any socket hangs occur here,\n&gt;                 // not in later modules.\n&gt;-                rec.getRecordedInput().readFullyOrUntil(getMaxLength(curi),\n&gt;+                rec.getRecordedInput().readFullyOrUntil(maxLength,\n&gt;                         1000 * getTimeout(curi));\n&gt;             } catch (RecorderTimeoutException ex) {\n&gt;                 curi.addAnnotation(&quot;timeTrunc&quot;);\n&gt;@@ -832,6 +855,8 @@\n&gt;         HeritrixProtocolSocketFactory.cleanup();\n&gt;         // At the end save cookies to the file specified in the order file.\n&gt;         saveCookies();\n&gt;+        \n&gt;+        shutdownHttp();\n&gt;         super.finalTasks();\n&gt;     }\n&gt; \n&gt;@@ -839,8 +864,21 @@\n&gt;         // Get timeout.  Use it for socket and for connection timeout.\n&gt;         int timeout = (getSoTimeout(null) &gt; 0)? getSoTimeout(null): 0;\n&gt;         \n&gt;-        MultiThreadedHttpConnectionManager cm =\n&gt;-            new MultiThreadedHttpConnectionManager();\n&gt;+        try {\n&gt;+            final Class cl = Class\n&gt;+                .forName((String) getUncheckedAttribute(null,\n&gt;+                    ATTR_CONNECTION_MANAGER));\n&gt;+\n&gt;+            this.cm = (HttpConnectionManager) cl\n&gt;+                .newInstance();\n&gt;+        } catch (Exception e) {\n&gt;+            logger.log(Level.SEVERE, &quot;Bad HttpConnectionManager class&quot;, e);\n&gt;+            throw new RuntimeException(e.getMessage());\n&gt;+        }\n&gt;+\n&gt;+        // TODO: The following settings should be made in the corresponding\n&gt;+        // HttpConnectionManager, not here.\n&gt;+        \n&gt;         // TODO: Tie this to host valence in frontier (When its made\n&gt;         // work properly).\n&gt;         cm.getParams().setDefaultMaxConnectionsPerHost(10);\n&gt;@@ -859,16 +897,16 @@\n&gt;         cm.getParams().setConnectionTimeout(timeout);\n&gt;         cm.getParams().setStaleCheckingEnabled(true);\n&gt;         // Minimizes bandwidth usage.  Setting to true disables Nagle&#39;s\n&gt;-        // alogarthim.  IBM JVMs &lt; 142 give an NPE setting this boolean\n&gt;+        // algorithm.  IBM JVMs &lt; 142 give an NPE setting this boolean\n&gt;         // on ssl sockets.\n&gt;         cm.getParams().setTcpNoDelay(false);\n&gt;         this.http = new HttpClient(cm);\n&gt;         \n&gt;+        HttpClientParams cp = this.http.getParams();\n&gt;         // Set default socket timeout.\n&gt;-        this.http.getParams().setSoTimeout(timeout);\n&gt;-\n&gt;+        cp.setSoTimeout(timeout);\n&gt;         // Set client to be version 1.0.\n&gt;-        this.http.getParams().setVersion(HttpVersion.HTTP_1_0);\n&gt;+        cp.setVersion(HttpVersion.HTTP_1_0);\n&gt;         \n&gt;         // Use our own protocol factory, one that gets IP to use from\n&gt;         // heritrix cache (They&#39;re cached in CrawlHost instances).\n&gt;@@ -893,6 +931,12 @@\n&gt;                 &quot; attributes: &quot; + e.getMessage());\n&gt;         }\n&gt; \t}\n&gt;+    \n&gt;+    protected void shutdownHttp() throws RuntimeException {\n&gt;+        if(cm instanceof MultiThreadedHttpConnectionManager) {\n&gt;+            ((MultiThreadedHttpConnectionManager)cm).shutdown();\n&gt;+        }\n&gt;+    }\n&gt; \n&gt;     /**\n&gt;      * @param curi Current CrawlURI.  Used to get context.\n&gt;  \n&gt;\n\n\n"}}