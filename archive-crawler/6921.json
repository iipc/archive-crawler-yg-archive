{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"J-6kpWnkWDKnYKdwWmbPZwmgyrMIoNhpZzV-8Wi4ruKHbANvdc45MIxMO8KMZ1AHowuFA1KyeMe3E5xeiXtMHLkcAGZ5tg8","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [archive-crawler] General questions and questions about DecideRule","postDate":"1292636690","msgId":6921,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDREMEMxMjEyLjcwNjAzMDdAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGllZjhiYyttOXM3QGVHcm91cHMuY29tPg==","referencesHeader":"PGllZjhiYyttOXM3QGVHcm91cHMuY29tPg=="},"prevInTopic":6918,"nextInTopic":6928,"prevInTime":6920,"nextInTime":6922,"topicId":6918,"numMessagesInTopic":4,"msgSnippet":"... Great! We ve put some notes about contributing code on the project wiki at: https://webarchive.jira.com/wiki/display/Heritrix/Contributing+to+Heritrix ... ","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 16644 invoked from network); 18 Dec 2010 01:44:54 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m7.grp.sp2.yahoo.com with QMQP; 18 Dec 2010 01:44:54 -0000\r\nX-Received: from unknown (HELO relay00.pair.com) (209.68.5.9)\n  by mta3.grp.sp2.yahoo.com with SMTP; 18 Dec 2010 01:44:54 -0000\r\nX-Received: (qmail 41741 invoked by uid 0); 18 Dec 2010 01:44:50 -0000\r\nX-Received: from 67.188.34.83 (HELO silverbook.local) (67.188.34.83)\n  by relay00.pair.com with SMTP; 18 Dec 2010 01:44:50 -0000\r\nX-pair-Authenticated: 67.188.34.83\r\nMessage-ID: &lt;4D0C1212.7060307@...&gt;\r\nDate: Fri, 17 Dec 2010 17:44:50 -0800\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.13) Gecko/20101207 Thunderbird/3.1.7\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nCc: dechouxb &lt;dechouxb@...&gt;\r\nReferences: &lt;ief8bc+m9s7@...&gt;\r\nIn-Reply-To: &lt;ief8bc+m9s7@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] General questions and questions about DecideRule\r\nX-Yahoo-Group-Post: member; u=137285340; y=VwyJ_7kkNRLA24po7wgPRFYEZjmkifD4WKOtDzE_jOK8\r\nX-Yahoo-Profile: gojomo\r\n\r\nOn 12/17/10 12:51 AM, dechouxb wrote:\n&gt; Hi,\n&gt;\n&gt; I basically would like to contribute back to H3. But first I have a few\n&gt; questions :\n\nGreat! We&#39;ve put some notes about contributing code on the project wiki at:\n\nhttps://webarchive.jira.com/wiki/display/Heritrix/Contributing+to+Heritrix\n\n&gt;     * How does serialization work within H3?\n\nObjects are primarily serialized to be saved in persistent caches \n(summary info for each known host, server, queue) or on-disk queues.\n\nUp through 3.0.0, Java&#39;s native serialization was used, with a few \nclasses implementing custom serialization for efficiency. However, in \nSVN TRUNK, we&#39;ve moved to the &#39;Kryo&#39; serialization library for speed and \ncompactness benefits.\n\nStarting in H3, we avoid use of serialization for saving checkpoint \nstate, preferring JSON, to make state easier to view and edit before \nresumption.\n\n&gt;     * I believe I saw that job configuration might be serialized, not\n&gt;       using the standard java serialization, but a JSON variant. Is\n&gt;       there a relation with the HasKeyedProperties interface or is this\n&gt;       interface uniquely for sheet-based contextual overriding of\n&gt;       properties?\n\nThe configuration is only really stored in the &#39;CXML&#39; files, which are \nthe same XML format as specified by the Spring Inversion-of-Control \ncontainer. Such CXML is only consulted when a crawl job is first &#39;built&#39; \n-- it&#39;s never updated by a running job.\n\nThe HasKeyedProperties interface is only used for the sheet-based \noverlaying of some settings based on URI context -- for example flipping \na flag, or changing a threshold, for some sites or URI patterns. It&#39;s \nnot related to any serialization.\n\n&gt;     * What is the development relationships between version 1, 2 and 3\n&gt;       of archive-crawler/Heritrix? I guess bug fixes are spread as much\n&gt;       as possible but what about if a minor architectural change was\n&gt;       made within H3?\n\nH1 and H3 are getting active development, though for H1 mostly bug \nfixes. H3 is still a bit more suited for expert operators and those more \ncomfortable seeing the raw Java class names, and occasionally looking \nthrough the Java source code to understand all the options.  H3 is \nrecommended over H2; no mroe fixes or features are expected for H2.\n\nH3 has many big changes that won&#39;t be backported to H1; moving to H3 is \nthe right way to use them.\n\n&gt;     * Could the design of DecideRule be simplified?\n&gt;\n&gt; Basically, for code reading/understanding/maintenance, high inheritance\n&gt; trees are not that great. The current DecideRule mother class has many\n&gt; children and could abstracted with :\n&gt;\n&gt;     package org.archive.modules.decisions;\n&gt;\n&gt;     public interface DecideRule implements Serializable {\n&gt;\n&gt;     boolean accepts(CrawlURI uri);\n&gt;\n&gt;     }\n&gt;\n&gt;\n&gt; The other real public method (a method which is used outside any\n&gt; DecideRule classes) is decisionFor(CrawlURI). But really, I believe the\n&gt; tree-state logic does not have to leak out from the DecideRule various\n&gt; implementations. The NONE DecideResult has no reason to be used\n&gt; consistently because the callers want a boolean decision. That is\n&gt; something which slows down the setting up and updating of rules ie &#39;How\n&gt; NONE was handled for that particular implementation?&#39; &#39;Does it only keep\n&gt; CrawlURI with ACCEPT or does it only ignore CrawlURI with REJECT?&#39; ...*\n&gt; All current implementations could use the accepts(CrawlURI uri) method.\n&gt; Those which are currently using decisionFor(CrawlURI) could be\n&gt; refactored with full backward compatibility using a DecideRuleSequence\n&gt; and the right default constant DecideResult without changing their API\n&gt; and their behaviour.\n\n\nActually, the fact that a DecideRule can offer three different decisions \n-- ACCEPT, REJECT, or PASS -- is important to its style of \nspecification, allowing a flat list of rules to cover most common \nscoping needs, without multilevel boolean-clause nesting.\n\nA mere boolean true/false would be insufficient to allow a later (and \nthus superceding) rule to simply say, &#39;no opinion&#39;.\n\n(Additionally, the onlyDecision() optimization allows rules that would \nonly repeat the already-standing decision to be skipped.)\n\nAs an exercise, you might try to replicate the behavior of the current \ndefault rule set with rules that only answer true/false. I think you&#39;d \nfind nesting with ANDs/ORs/NOTs to 3+ levels would be necessary. Our \nscoping used to work like that, and it became quite confusing to \nremember that a filter in one place returning &#39;true&#39; meant &#39;reject&#39; and \nin another place &#39;true&#39; means &#39;accept&#39;.\n\nThus, it would take a strong demonstration that such a change made \ntypical configurations easier and more understandable to refactor in \nthat direction now.\n\n- Gordon @ IA\n\n&gt; I am of course volunteering for the task. I only wanted to have your\n&gt; thoughts before starting any coding work. I might not understand/know\n&gt; all the reasons for the current design. And at the end of the day, I\n&gt; will need your agreement for the work to be integrated into the current\n&gt; version of H3.\n&gt;\n&gt; Regards\n&gt;\n&gt; Bertrand Dechoux\n&gt;\n&gt; *\n&gt; **\n\n"}}