{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"AIIISCGEyQAu1jfBT97W12at0JjBFCxtzpwMKm3ORkrodBVA5i9Q7Rul5efFsJa7jAnAMr8PcoIhDTAFQya3RrCUBQ4d-Jg","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [archive-crawler] ServerCache lookup stuck [1 Attachment]","postDate":"1252999867","msgId":6032,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRBQUY0MkJCLjcwMUBhcmNoaXZlLm9yZz4=","inReplyToHeader":"PDY0MTMzLjM4Ljk5LjQyLjI0NC4xMjUyOTUxODYwLnNxdWlycmVsQG1haWwuYXJjaGl2ZS5vcmc+","referencesHeader":"PGg4aXBmcytsaHBwQGVHcm91cHMuY29tPiAgICA8NjE3MDYuOTguMjM0Ljg2LjE2Ny4xMjUyODY4NTU2LnNxdWlycmVsQG1haWwuYXJjaGl2ZS5vcmc+ICAgIDw0QUFFMDg5Qi41MDMwODA0QGFyY2hpdmUub3JnPiA8NjQxMzMuMzguOTkuNDIuMjQ0LjEyNTI5NTE4NjAuc3F1aXJyZWxAbWFpbC5hcmNoaXZlLm9yZz4="},"prevInTopic":6030,"nextInTopic":6033,"prevInTime":6031,"nextInTime":6033,"topicId":6026,"numMessagesInTopic":15,"msgSnippet":"Still investigating, but thoughts so far: A notable thing about the ToeThread #19 dumps is that they are usually BLOCKED waiting for the monitor on a","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 58730 invoked from network); 15 Sep 2009 07:31:21 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m8.grp.re1.yahoo.com with QMQP; 15 Sep 2009 07:31:21 -0000\r\nX-Received: from unknown (HELO mail.archive.org) (207.241.231.239)\n  by mta1.grp.sp2.yahoo.com with SMTP; 15 Sep 2009 07:31:20 -0000\r\nX-Received: from localhost (localhost [127.0.0.1])\n\tby mail.archive.org (Postfix) with ESMTP id A54C027DB5C\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Tue, 15 Sep 2009 00:31:37 -0700 (PDT)\r\nX-Received: from mail.archive.org ([127.0.0.1])\n\tby localhost (mail.archive.org [127.0.0.1]) (amavisd-new, port 10024)\n\twith LMTP id fDikcWOp7eJA for &lt;archive-crawler@yahoogroups.com&gt;;\n\tTue, 15 Sep 2009 00:31:36 -0700 (PDT)\r\nX-Received: from [10.0.13.17] (adsl-70-137-165-7.dsl.snfc21.sbcglobal.net [70.137.165.7])\n\tby mail.archive.org (Postfix) with ESMTPSA id 2FFE819BC3E\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Tue, 15 Sep 2009 00:31:36 -0700 (PDT)\r\nMessage-ID: &lt;4AAF42BB.701@...&gt;\r\nDate: Tue, 15 Sep 2009 00:31:07 -0700\r\nUser-Agent: Thunderbird 2.0.0.23 (Windows/20090812)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;h8ipfs+lhpp@...&gt;    &lt;61706.98.234.86.167.1252868556.squirrel@...&gt;    &lt;4AAE089B.5030804@...&gt; &lt;64133.38.99.42.244.1252951860.squirrel@...&gt;\r\nIn-Reply-To: &lt;64133.38.99.42.244.1252951860.squirrel@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] ServerCache lookup stuck [1 Attachment]\r\nX-Yahoo-Group-Post: member; u=137285340; y=-4C2mbkOkWfr0a4iSqsHOPeTodAXFpXRxABA3WX42m3o\r\nX-Yahoo-Profile: gojomo\r\n\r\nStill investigating, but thoughts so far:\n\nA notable thing about the &quot;ToeThread #19&quot; dumps is that they are usually \nBLOCKED waiting for the monitor on a specific CachedBdbMap$SoftEntry \ninstance (&lt;0x97f40ad8&gt;, corresponding to the one server of interest to \nthe URI-in-progress). That means some other thread holds it. But \noccasionally, tt#19 holds that lock.\n\nThis alternation suggests the other thread or threads are contributors \nto the problem state. You mentioned these might be in the middle of a \nJMX URI import; can you share some of those stacks, too? (Indeed, any \nstack with a reference to &lt;0x97f40ad8&gt; from the same all-threads-dump.)\n\nAlso, is the reported CPU usage negligible, pegged-near-100%, or \nsomewhere in between?\n\nIs there a chance the JMX threads are adding many URIs from this same \nsource server, and are making very very slow contended progress? (A \nfrontier report might show the count of URIs on the corresponding queue \ngrowing, and maybe even &#39;lsof -o&#39; would show any read-position progress \nin the source files for the JMX operation, confirming some progress.) It \nwould be good to know if this is a true endless-hysteresis/loop or just \npathological slowness under a certain kind of contention.\n\nWhat does the heap usage look like? (The behavior of CachedBdbMap is \nintentionally GC-sensitive; operation under low-memory conditions, where \nsomething is GC&#39;d as soon as it&#39;s created, could be part of the problem \ncycle. But that&#39;s less likely a factor to consider if there&#39;s plenty of \nheap free space.)\n\nAre you hoping to kick this crawl back into working state (which might \nbe possible with enough trickery once we understand the problem), or \njust keeping it around for debugging?\n\n- Gordon @ IA\n\nigor@... wrote:\n&gt; Hi Gordon,\n&gt; \n&gt; Thanks for looking into it. See comments below.\n&gt; \n&gt;&gt; The CachedBdbMap somewhat recently (since last official release)\n&gt;&gt; underwent some major refactoring to improve concurrency. The test\n&gt;&gt; coverage is reasonable and the code has been through some volume tests\n&gt;&gt; without showing problems, but this might be a new bug triggered by that\n&gt;&gt; code.\n&gt;&gt; If you pause the crawl, I presume only that one thread remains active.\n&gt;&gt; Is that right?\n&gt; \n&gt; Only one toe thread, that is right.\n&gt; \n&gt;&gt; Is the CPU busy with only that thread active? I&#39;m still considering the\n&gt;&gt; other stacks you forwarded in a subsequent message; can you collect even\n&gt;&gt; more samples to get a sense of which branches are always being taken in\n&gt;&gt; the relevant methods?\n&gt; \n&gt; There is more than one thread active given that there is JMX activities\n&gt; even when the crawl is paused.\n&gt; \n&gt; There are at least two more JMX threads (trying to import an URI) that are\n&gt; stuck in the same loop as the toe thread.\n&gt; \n&gt; I attached a file with 100 quick thread dumps related to toe thread #19.\n&gt; \n&gt;&gt; The CachedBdbMap depends on some some garbage-collection-related\n&gt;&gt; trickery that might not be reliable in all JVMs. Can you say what\n&gt;&gt; JVM/host OS you&#39;re using?\n&gt; \n&gt; Sun&#39;s 1.6 (1.6.0_10-b33) and CentOS (CentOS release 5.3 (Final)).\n&gt; \n&gt; i.\n&gt; \n&gt;&gt; igor@... wrote:\n&gt;&gt;&gt; I got a stuck thread that is disrupting the crawl.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Heritrix verion:\n&gt;&gt;&gt; 1.15.4 (checked out on 9/9/2009)\n&gt;&gt;&gt;\n&gt;&gt;&gt; Java env:\n&gt;&gt;&gt; Linux 2.6.18-128.1.10.el5PAE #1 SMP Thu May 7 11:14:31 EDT 2009 i686\n&gt;&gt;&gt; i686\n&gt;&gt;&gt; i386 GNU/Linux\n&gt;&gt;&gt; java version &quot;1.6.0_10&quot;\n&gt;&gt;&gt; Java(TM) SE Runtime Environment (build 1.6.0_10-b33)\n&gt;&gt;&gt; Java HotSpot(TM) Server VM (build 11.0-b15, mixed mode)\n&gt;&gt;&gt; JAVA_OPTS=-Xmx512m\n&gt;&gt;&gt;\n&gt;&gt;&gt; Sleepycat:\n&gt;&gt;&gt; je-3.3.82.jar\n&gt;&gt;&gt;\n&gt;&gt;&gt; Here is the thread dump:\n&gt;&gt;&gt; ToeThread #19: http://newyork.craigslist.org/mnh/tix/1371733715.html\n&gt;&gt;&gt;  CrawlURI http://newyork.craigslist.org/mnh/tix/1371733715.html      1\n&gt;&gt;&gt; attempts\n&gt;&gt;&gt;     in processor: Preprocessor\n&gt;&gt;&gt;     ACTIVE for 16h25m22s108ms\n&gt;&gt;&gt;     step: ABOUT_TO_BEGIN_PROCESSOR for 16h25m22s108ms\n&gt;&gt;&gt;     org.archive.util.CachedBdbMap$SoftEntry.getPhantom(CachedBdbMap.java:1625)\n&gt;&gt;&gt;     org.archive.util.CachedBdbMap$SoftEntry.isCleared(CachedBdbMap.java:1632)\n&gt;&gt;&gt;     org.archive.util.CachedBdbMap$SoftEntry.startExpunge(CachedBdbMap.java:1693)\n&gt;&gt;&gt;     org.archive.util.CachedBdbMap.isExpunged(CachedBdbMap.java:490)\n&gt;&gt;&gt;     org.archive.util.CachedBdbMap._getMem(CachedBdbMap.java:698)\n&gt;&gt;&gt;     org.archive.util.CachedBdbMap.get(CachedBdbMap.java:627)\n&gt;&gt;&gt;     org.archive.crawler.datamodel.ServerCache.getServerFor(ServerCache.java:99)\n&gt;&gt;&gt;     org.archive.crawler.datamodel.ServerCache.getServerFor(ServerCache.java:124)\n&gt;&gt;&gt;     org.archive.crawler.prefetch.PreconditionEnforcer.considerDnsPreconditions(PreconditionEnforcer.java:227)\n&gt;&gt;&gt;     org.archive.crawler.prefetch.PreconditionEnforcer.innerProcess(PreconditionEnforcer.java:111)\n&gt;&gt;&gt;     org.archive.crawler.framework.Processor.process(Processor.java:112)\n&gt;&gt;&gt;     org.archive.crawler.framework.ToeThread.processCrawlUri(ToeThread.java:302)\n&gt;&gt;&gt;     org.archive.crawler.framework.ToeThread.run(ToeThread.java:151)\n&gt;&gt;&gt;\n&gt;&gt;&gt; i.\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; ------------------------------------\n&gt;&gt;\n&gt;&gt; Yahoo! Groups Links\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt; \n&gt; \n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n"}}