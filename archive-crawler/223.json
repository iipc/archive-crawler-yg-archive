{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"6eCq84Wby6k7WwTt0k3RautQOJh9pl4Kl3xQ9GXP3vAdWsgdJNRx2L2qf6AM8KxNKW4MXojX1gI9L6ESjXyPS1520NGMknc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Version numbering: a plan","postDate":"1073100886","msgId":223,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNGRjYzODU2LjIwNTAyQGFyY2hpdmUub3JnPg==","inReplyToHeader":"PDNGRTNCNDBELjkwNDAyMDFAYXJjaGl2ZS5vcmc+","referencesHeader":"PDNGRTI0ODBCLjZAYXJjaGl2ZS5vcmc+IDwzRkUzNkNGRC4xMDAwNjA1QGFyY2hpdmUub3JnPiA8M0ZFM0I0MEQuOTA0MDIwMUBhcmNoaXZlLm9yZz4="},"prevInTopic":222,"nextInTopic":224,"prevInTime":222,"nextInTime":224,"topicId":210,"numMessagesInTopic":12,"msgSnippet":"I remain attracted to the Linux version numbering scheme, as described for example here... http://www.ussg.iu.edu/hypermail/linux/kernel/9804.3/0241.html It","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 48761 invoked from network); 3 Jan 2004 03:34:46 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m13.grp.scd.yahoo.com with QMQP; 3 Jan 2004 03:34:46 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (209.237.232.202)\n  by mta5.grp.scd.yahoo.com with SMTP; 3 Jan 2004 03:34:46 -0000\r\nReceived: (qmail 31462 invoked by uid 100); 3 Jan 2004 03:33:19 -0000\r\nReceived: from b116-dyn-43.archive.org (HELO archive.org) (gojomo@...@209.237.240.43)\n  by mail-dev.archive.org with SMTP; 3 Jan 2004 03:33:19 -0000\r\nMessage-ID: &lt;3FF63856.20502@...&gt;\r\nDate: Fri, 02 Jan 2004 19:34:46 -0800\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6b) Gecko/20031205 Thunderbird/0.4\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;3FE2480B.6@...&gt; &lt;3FE36CFD.1000605@...&gt; &lt;3FE3B40D.9040201@...&gt;\r\nIn-Reply-To: &lt;3FE3B40D.9040201@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-Status: No, hits=-1.9 required=6.0\n\ttests=AWL,BAYES_01,IN_REP_TO,REFERENCES,USER_AGENT_MOZILLA_UA\n\tversion=2.55\r\nX-Spam-Level: \r\nX-Spam-Checker-Version: SpamAssassin 2.55 (1.174.2.19-2003-05-19-exp)\r\nX-eGroups-Remote-IP: 209.237.232.202\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Version numbering: a plan\r\nX-Yahoo-Group-Post: member; u=137285340\r\nX-Yahoo-Profile: gojomo\r\n\r\nI remain attracted to the Linux version numbering scheme, as\ndescribed for example here...\n\nhttp://www.ussg.iu.edu/hypermail/linux/kernel/9804.3/0241.html\n\nIt does have the potentially confusing property that around\na &quot;stable&quot; release, there are essentially 3 separate version\nnumbers referring to nearly identical code.\n\nTaking the example from that message:\n\n &gt; when 2.1.x is deemed an officially ready release kernel, the version will\n &gt; be incremented to 2.2.0. Linus will make this call in all probability.\n &gt;\n &gt; the development tree will then acquire the version number of 2.3.x and\n &gt; progress will continue.\n\nSo functionally 2.1.x == 2.2.0 == 2.3.0, except with regards to\nsuperficial version-identifier strings.\n\nMapping that practice to CVS, I take the above to mean that 2.1.(x-1)\nand 2.1.x and 2.3.0 and 2.3.1 etc. all live in the working CVS HEAD.\n2.2.0 gets its own branch, if/when a 2.2.1 etc. become necessary.\n\nThe major benefit is clear isolation of official release\nnumbers from volatile development code: they look different\n(even), and other CVS work after the release won&#39;t\ninadvertently get built as the same version number.\n\nIn our situation, I consider us to have been working on &quot;0.1.0&quot; --\ndevelopment, unstable, CVS-only. We&#39;ve put a &quot;heritrix-0_1_0&quot;\nlabel into CVS HEAD to reflect that.\n\nBy decision -- and to work through release and numbering issues --\nwe now want to make an official release. Because this is\nan external/&quot;stable&quot; (sorta) release, it will get an even\nminor number: 0.2.0.\n\nThe first step should be to make sure the last 0.1.x series\nnumber is assigned, to collect any changes since the previous\n0.1.x label. So we&#39;d update any internal version-identifier\nstrings to read &quot;0.1.1cvs&quot;, and then apply a &quot;heritrix-0_1_1&quot;\nlabel. Essentially, this is a &quot;release candidate&quot;.\n\nProvided it passes muster, we&#39;d effect the necessary version-\nidentifier string changes in source/config files to reflect a\n&quot;0.2.0&quot; version.  Then, we&#39;d apply a &quot;heritrix-0_2_0&quot; label\nand use so-labelled files to build an official release in all\nformats.\n\nFinally, internal software version identifiers would be updated to\nbe &quot;0.3.0cvs&quot;, and a &quot;heritrix-0_3_0&quot; CVS label applied.\n\n&quot;heritrix-0_1_1&quot;, &quot;heritrix-0_2_0&quot;, and &quot;heritrix-0_3_0&quot; would\ndescribe functionally identical code, with only the version\nidentifiers changed. However, when remote users fetch and run\nanything from us, any displayed version number (in a User-Agent\nstring, command-line stdout, or web admin UI) would make the\npedigree of what they&#39;re running clear.\n\nIf an &quot;0.2.1&quot; patch release becomes necessary, we would branch\nfrom the &quot;heritrix-0_2_0&quot; label, apply the necessary fixes,\nrev the internal version identifiers, apply the &quot;heritrix-0_2_1&quot;\nlabel, and build the 0.2.1 distribution from that branch.\n\nI hope this sounds useful and not overly complicated. I&#39;ll\nalso be placing this scheme description into our &quot;developer\nguide&quot;.\n\n- Gordon\n\n"}}