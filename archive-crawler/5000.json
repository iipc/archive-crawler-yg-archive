{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":334689939,"authorName":"Micah Wedemeyer","from":"Micah Wedemeyer &lt;mwedeme@...&gt;","replyTo":"LIST","senderId":"gjSqjYG3IqBntiVWigs-JRog5BOihuqbex7_-VaESzvbX4ZjZNmFKeJHHp91KuuYhOEgwO1fNGZQETjqIR92dZAbPlDfjl5Bb-0","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] Extracting title attribute and linktext of an HTML-anchor","postDate":"1203547763","msgId":5000,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ3QkNBRTczLjMwNDAwMDlAZW1vcnkuZWR1Pg==","inReplyToHeader":"PDU2Mzg5Ni4xOTY4MS5xbUB3ZWI1NDYwNy5tYWlsLnJlMi55YWhvby5jb20+","referencesHeader":"PDU2Mzg5Ni4xOTY4MS5xbUB3ZWI1NDYwNy5tYWlsLnJlMi55YWhvby5jb20+"},"prevInTopic":4998,"nextInTopic":5385,"prevInTime":4999,"nextInTime":5001,"topicId":4985,"numMessagesInTopic":16,"msgSnippet":"I avoid regular expressions whenever possible, because in my experience they tend to quickly grow huge in order to account for strange cases I never thought","rawEmail":"Return-Path: &lt;mwedeme@...&gt;\r\nX-Sender: mwedeme@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 95855 invoked from network); 20 Feb 2008 22:49:27 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m56.grp.scd.yahoo.com with QMQP; 20 Feb 2008 22:49:27 -0000\r\nX-Received: from unknown (HELO mr4.cc.emory.edu) (170.140.52.93)\n  by mta17.grp.scd.yahoo.com with SMTP; 20 Feb 2008 22:49:27 -0000\r\nX-Received: from [170.140.210.152] (emoryfloatdmz.cc.emory.edu [170.140.52.254])\n\tby mr4.cc.emory.edu (8.13.1/8.13.1) with ESMTP id m1KMnNl3001692\n\t(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Wed, 20 Feb 2008 17:49:23 -0500\r\nMessage-ID: &lt;47BCAE73.3040009@...&gt;\r\nDate: Wed, 20 Feb 2008 17:49:23 -0500\r\nUser-Agent: Mozilla-Thunderbird 2.0.0.9 (X11/20080110)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;563896.19681.qm@...&gt;\r\nIn-Reply-To: &lt;563896.19681.qm@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-emory.edu-MailScanner: Found to be clean\r\nX-emory.edu-MailScanner-From: mwedeme@...\r\nX-Spam-Status: No\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Micah Wedemeyer &lt;mwedeme@...&gt;\r\nSubject: Re: [archive-crawler] Extracting title attribute and linktext of\n an HTML-anchor\r\nX-Yahoo-Group-Post: member; u=334689939\r\n\r\nI avoid regular expressions whenever possible, because in my experience \nthey tend to quickly grow huge in order to account for strange cases I \nnever thought of.  The &quot;simple&quot; regex usually covers about 90-95% of the \ncases, and I hit diminishing returns pretty quickly after that.  Plus, \nthe regex becomes unreadable.  My hope is that an established, \nHTML-specific library (like HTMLParser) will be smart enough to handle \nthe cases that I haven&#39;t thought of.  Still, no guarantees there, and \nregex may be your only option if you have to deal with the memory \nrequirements discussed.\n\nMathew Nik Foscarini wrote:\n&gt; \n&gt; \n&gt; If your just going to read attributes found on links, then I would \n&gt; recommend regular expressions. Since regexp works with the \n&gt; ReplayCharSequence implemented by Heritrix without adding memory overhead.\n&gt; \n&gt; To grab the entire link\n&gt; \n&gt; &quot;(?is)(&lt;a&#92;s.*?&gt;.{0,200}&lt;/a&gt;)&quot;\n&gt; \n&gt; That will give you the entire link, but limit the length to 200 \n&gt; characters in the link text. This will help aborting &lt;a&gt; tags that don&#39;t \n&gt; have a closing &lt;/a&gt;\n&gt; \n&gt; You can then use regular expressions to extra the attributes you want.\n&gt; \n&gt; for the title, example; title=&quot;Hello World&quot;\n&gt; \n&gt; &quot;(?is)&#92;b(title)[&#92;s&#92;t&#92;r&#92;n]?=[&#92;s&#92;t&#92;r&#92;n]?&#92;&quot;.*?{0,200}&#92;&quot;&quot;\n&gt; \n&gt; You have to be careful with regular expressions. They can get confused \n&gt; by inline JavaScript.\n&gt; \n&gt; I think the above works, but I haven&#39;t tested it.\n&gt; \n\n"}}