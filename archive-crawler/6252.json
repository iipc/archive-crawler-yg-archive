{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127529970,"authorName":"Steven A Rowe","from":"Steven A Rowe &lt;sarowe@...&gt;","replyTo":"LIST","senderId":"tPc_ELzaRirRif5TZ3i099je7CuQbZE1ZgLM8_fmo4PWgVCeonbQ-55-Cr9TclxFx7OLB4jy3CAnj51TN9GEnOVNyW7J","spamInfo":{"isSpam":false,"reason":"4"},"subject":"RE: [archive-crawler] Decide rules","postDate":"1262149711","msgId":6252,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzI3NkIzMTNAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1Pg==","inReplyToHeader":"PDZhMDI5ZTJkMDkxMjI4MTE0NXY2YjhkZjAxNGcxNDkwNjliYjdkYTJiZDIyQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzI3NkIyRkJAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1PgkgPDZhMDI5ZTJkMDkxMjI2MTAyOG03MGJkNTE5YW0zNGNhMzRmNDEwNmZkMjFAbWFpbC5nbWFpbC5jb20+CSA8MkQxMjdGMTFEQzc5NzE0RTlCNkE0M0FDOTQ1ODE0N0YzMjc2QjMwM0BzdWV4MDctbWJ4LTAzLmFkLnN5ci5lZHU+CSA8NmEwMjllMmQwOTEyMjgwODM1czUwMTM2ZmYweDc4MDZmZWUzMjJlY2Y0ZThAbWFpbC5nbWFpbC5jb20+CSA8MkQxMjdGMTFEQzc5NzE0RTlCNkE0M0FDOTQ1ODE0N0YzMjc2QjMwOUBzdWV4MDctbWJ4LTAzLmFkLnN5ci5lZHU+IDw2YTAyOWUyZDA5MTIyODExNDV2NmI4ZGYwMTRnMTQ5MDY5YmI3ZGEyYmQyMkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":6250,"nextInTopic":6259,"prevInTime":6251,"nextInTime":6253,"topicId":6240,"numMessagesInTopic":14,"msgSnippet":"Hi Anas, Thanks for the code and the deployment instructions. I ll give it a try. Thanks, Steve","rawEmail":"Return-Path: &lt;sarowe@...&gt;\r\nX-Sender: sarowe@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 81081 invoked from network); 30 Dec 2009 05:08:49 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m11.grp.re1.yahoo.com with QMQP; 30 Dec 2009 05:08:49 -0000\r\nX-Received: from unknown (HELO smtp2.syr.edu) (128.230.18.92)\n  by mta1.grp.sp2.yahoo.com with SMTP; 30 Dec 2009 05:08:49 -0000\r\nX-Received: from suex07-hub-01.ad.syr.edu (suex07-hub-01.ad.syr.edu [128.230.108.195])\n\tby smtp2.syr.edu (8.14.3/8.14.3) with ESMTP id nBU58aQj014580\n\t(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=FAIL)\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Wed, 30 Dec 2009 00:08:36 -0500\r\nX-Received: from suex07-mbx-03.ad.syr.edu ([128.230.108.133]) by\n suex07-hub-01.ad.syr.edu ([2002:80e6:6cc3::80e6:6cc3]) with mapi; Wed, 30 Dec\n 2009 00:08:35 -0500\r\nTo: &quot;archive-crawler@yahoogroups.com&quot; &lt;archive-crawler@yahoogroups.com&gt;\r\nDate: Wed, 30 Dec 2009 00:08:31 -0500\r\nThread-Topic: [archive-crawler] Decide rules\r\nThread-Index: AcqH9mFAGvVWDlMgTYueWeZ9eA56IQBFv/Bg\r\nMessage-ID: &lt;2D127F11DC79714E9B6A43AC9458147F3276B313@...&gt;\r\nReferences: &lt;2D127F11DC79714E9B6A43AC9458147F3276B2FB@...&gt;\n\t &lt;6a029e2d0912261028m70bd519am34ca34f4106fd21@...&gt;\n\t &lt;2D127F11DC79714E9B6A43AC9458147F3276B303@...&gt;\n\t &lt;6a029e2d0912280835s50136ff0x7806fee322ecf4e8@...&gt;\n\t &lt;2D127F11DC79714E9B6A43AC9458147F3276B309@...&gt;\n &lt;6a029e2d0912281145v6b8df014g149069bb7da2bd22@...&gt;\r\nIn-Reply-To: &lt;6a029e2d0912281145v6b8df014g149069bb7da2bd22@...&gt;\r\nAccept-Language: en-US\r\nContent-Language: en-US\r\nX-MS-Has-Attach:\r\nX-MS-TNEF-Correlator:\r\nacceptlanguage: en-US\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nMIME-Version: 1.0\r\nX-Proofpoint-Virus-Version: vendor=fsecure engine=1.12.8161:2.4.5,1.2.40,4.0.166 definitions=2009-12-29_17:2009-12-12,2009-12-29,2009-12-29 signatures=0\r\nX-Proofpoint-Spam-Reason: safe\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Steven A Rowe &lt;sarowe@...&gt;\r\nSubject: RE: [archive-crawler] Decide rules\r\nX-Yahoo-Group-Post: member; u=127529970; y=IRHMO7cbegzej9NWDHxNo5ZDsKC_ztyb1jhq8s8_Xh4DMGiGOqMGQQ\r\n\r\nHi Anas,\n\nThanks for the code and the deployment instructions.\n\nI&#39;ll give i=\r\nt a try.\n\nThanks,\nSteve\n\n\nOn 12/28/2009 at 2:45 PM, anas elghafari wrote:\n&gt;=\r\n \n&gt; \n&gt; I am relatively new to Heritrix, but as far as I understand things,\n=\r\n&gt; there are only two ways to input rules into the system: you either use\n&gt; =\r\nthe shipped in rules and modify the settings, or you write your own.\n&gt; Writ=\r\ning your own DecideRules means writing code. I don&#39;t know if there\n&gt; is a w=\r\nay around that. (There might be some rule shipped in with heritrix\n&gt; that d=\r\noes what you want. But I am not familiar enough with the\n&gt; shipped-in Decid=\r\neRules to be able to tell you).\n&gt; \n&gt; In any case, writing a DecideRule is f=\r\nairly simple. Here is an example\n&gt; of a DecideRule I wrote to reject candid=\r\nateURIs that end with certain\n&gt; suffixes. I modelled it after the DecideRul=\r\nes that are shipped with\n&gt; Heritrix. Note that you will be doing this for C=\r\nrawlURI instead of a\n&gt; CandidateURI:\n&gt; \n&gt; \n&gt; public class SuffixBasedReject=\r\nionRule extends DecideRule {\n&gt; \n&gt; private static final long serialVersionUI=\r\nD =3D\n&gt; ArchiveUtils.classnameBasedUID(SuffixBasedRejectionRule.class,1);\n&gt;=\r\n \n&gt; private static final Logger logger =3D\n&gt; \n&gt;         Logger.getLogger(Su=\r\nffixBasedRejectionRule.class.getName());\n&gt; \n&gt; private static StringList dis=\r\nallowedSuffixes;\n&gt; \n&gt; public SuffixBasedRejectionRule(String name) {\n&gt; \n&gt; s=\r\nuper(name);\n&gt; \n&gt; setDescription(&quot;Reject URIs based on their suffixes&quot;);\n&gt; \n=\r\n&gt; disallowedSuffixes =3D new StringList(&quot;Disallowed Suffixes&quot;,\n&gt; \n&gt; &quot;A list=\r\n of suffixes where, if a URI ends with one of those suffixes the\n&gt; URI will=\r\n be rejected.&quot;);\n&gt; \n&gt; addElementToDefinition(disallowedSuffixes);\n&gt; \n&gt;     =\r\n            //making disallowedSuffixes a field that can be set\n&gt; through t=\r\nhe WUI\n&gt; \n&gt; }\n&gt; \n&gt; public Object decisionFor(Object o) {\n&gt; \n&gt; if (o instanc=\r\neof CandidateURI =3D=3D false){\n&gt; \n&gt;             // Only handles CandidtaeU=\r\nRIs\n&gt;             \n&gt;             if (logger.isLoggable(Level.INFO)) {\n&gt; \n&gt; =\r\n                logger.info(&quot;Error: Object passed for evaluation was\n&gt; not\n=\r\n&gt; a &quot; +\n&gt; \n&gt;                     &quot;CandidateURI. &quot; + o.toString());\n&gt; \n&gt;    =\r\n         }\n&gt;             \n&gt;             return REJECT;\n&gt; \n&gt;         }\n&gt; \n&gt; =\r\nCandidateURI curi =3D (CandidateURI) o;\n&gt; \n&gt; String suffix =3D\n&gt; curi.toStr=\r\ning().substring(curi.toString().lastIndexOf(&#39;.&#39;)+1);\n&gt; \n&gt; if (disallowedSuf=\r\nfixes.contains(suffix)) {\n&gt; \n&gt; return REJECT;\n&gt; \n&gt; }\n&gt; \n&gt; else {\n&gt; \n&gt; retur=\r\nn PASS;\n&gt; \n&gt; }\n&gt; \n&gt; }\n&gt; \n&gt; }\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; The constructor make=\r\ns disallowedSuffixes a field that can be set through\n&gt; the WUI. the User en=\r\nters the unwanted suffixes in the WUI and the method\n&gt; decisionFor checks e=\r\nach URI to see if it ends with one of the unwanted\n&gt; suffixes and rejects i=\r\nt if it does.\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; If you write your own DecideRule, you must writ=\r\ne its name thus\n&gt; &quot;PackagenameHere.youDecideRuleNameHere&quot; into a file calle=\r\nd\n&gt; DecideRule.options\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; you jar the file and the your decide r=\r\nule compilation and put the\n&gt; resulting jar file in Heritrix/lib. That is i=\r\nt! Your rule will then be\n&gt; available through the WUI and you can use it.\n&gt;=\r\n \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; On Mon, Dec 28, 2009 at 7:31 PM, Steven A=\r\n Rowe &lt;sarowe@...&gt; wrote:\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \tHi Anas,\n&gt; \n&gt; \tYou&#39;re right, t=\r\nhe sequence effect is not OR. I don&#39;t know enough\n&gt; about the language of p=\r\nrocess flows to put the right label on what\n&gt; Heritrix is doing :).\n&gt; \n&gt; \tI=\r\n would like to be able to write rules (not code) that allow me\n&gt; to stamp R=\r\nEJECT on URIs that have content type text/html AND are larger\n&gt; than 10MB, =\r\nand PASS for everything else. How can I do that?\n&gt; \n&gt; \tSteve\n&gt; \n&gt; \n&gt; \n&gt; \tOn=\r\n 12/28/2009 at 11:35 AM, anas elghafari wrote: \t&gt; \t&gt; \t&gt; I don&#39;t think\n&gt; the=\r\n effect of the sequence is OR. Every rule stamps the \t&gt; URI with\n&gt; ACCEPT, =\r\nREJECT or PASS. And the last non-pass is the operative \t&gt;\n&gt; judgment. So I =\r\ndon&#39;t quite understand the problem. Just have your rules\n&gt; \t&gt; stamp REJECT =\r\non what you don&#39;t like, and PASS on everything else...\n&gt; and \t&gt; this gives =\r\nthe effect of combining the reject rules with &quot;AND&quot; \t&gt;\n&gt; \t&gt; \t&gt; On Sat, Dec =\r\n26, 2009 at 9:05 PM, Steven A Rowe &lt;sarowe@...\n&gt; &lt;mailto:sarowe%40syr.e=\r\ndu&gt; &gt; wrote: \t&gt; \t&gt; \t&gt; \t&gt; \t&gt; Hi Anas, \t&gt; \t&gt; I was\n&gt; hoping that you (or some=\r\none else on this list) would say \t&gt; that I was\n&gt; missing something that wou=\r\nld allow me to only write rules, \t&gt; and not\n&gt; have to write code. \t&gt; \t&gt; Com=\r\nbining multiple conditions together seems\n&gt; like such a basic \t&gt; requiremen=\r\nt I&#39;m surprised it doesn&#39;t already exist\n&gt; - something like the \t&gt; ability =\r\nto override the logical operator on\n&gt; DecideRuleSequence \t&gt; (currently hard=\r\nwired to OR) to other possibilities\n&gt; like AND. Then I \t&gt; could write somet=\r\nhing like (pardon the pseudocode):\n&gt; \t&gt; \t&gt; OrDecideRuleSequence : decision=\r\n=3DLASTMATCH RejectDecideRule \t&gt;\n&gt; SurtPrefixedDecideRule : seedsAsSurtPref=\r\nixes=3Dtrue ; decision=3DACCEPT \t&gt;\n&gt; AndDecideRuleSequence : decision=3DREJ=\r\nECT \t&gt;\n&gt; ContentTypeMatchesRegexDecideRule : regex=3Dtext/html \t&gt;\n&gt; Exceeds=\r\nDocumentLengthThresholdDecideRule : \t&gt;\n&gt; contentLengthThreshold=3D10000000 =\r\nAndDecideRuleSequence : decision=3DREJECT\n&gt; \t&gt; ContentTypeMatchesRegexDecid=\r\neRule : regex=3Dtext/plain \t&gt;\n&gt; ExceedsDocumentLengthThresholdDecideRule : =\r\n\t&gt;\n&gt; contentLengthThreshold=3D100000 \t&gt; \t&gt; Is this a bad idea? \t&gt; \t&gt; Steve =\r\n\t&gt;\n&gt; \t&gt; \t&gt; \t&gt; On 12/26/2009 at 1:28 PM, anas elghafari wrote: &gt; &gt; &gt; You can=\r\n\n&gt; write \t&gt; your own decideRules that subclass the DecideRule, and you &gt;\n&gt; =\r\noverwrite \t&gt; the decisionFor(Object o) method. In the decisionFor(Object\n&gt; =\r\no)\n&gt; &gt; you\n&gt; \t&gt; check if the Object is a CrawlURI, if so you typecast into =\r\nCrawlURI &gt;\n&gt; \t&gt; and then you will be able to check the contenttype and cont=\r\nent size &gt;\n&gt; \t&gt; (look at CrawlURI API). And you can issue decesion REJECT f=\r\nor the\n&gt; uris \t&gt; &gt; that don&#39;t fulfill you criteria. &gt; &gt; You can also do thi=\r\ns by\n&gt; adding \t&gt; a processor, where -in your overwriting &gt; of\n&gt; innerProces=\r\ns(CrawlURI \t&gt; curi)- you check the type and size and then you\n&gt; &gt; reject th=\r\nose URIs you \t&gt; don&#39;t want to process by calling &gt; \t&gt;\n&gt; curi.skipToProcesso=\r\nrChain(getCrawlController().getPostProcessorChain())\n&gt; \t&gt; &gt; &gt; beware that D=\r\necideRules/Filter inserted before the extraction\n&gt; will \t&gt; &gt; prevent the Cr=\r\nawlJob from ever getting to Uris that are\n&gt; acceptable, \t&gt; &gt; because the pa=\r\nth to them goes through URIs that are\n&gt; not. &gt; &gt; Anas \t&gt; &gt; &gt; On Wed, Dec 23=\r\n, 2009 at 1:48 AM, Steven A Rowe\n&gt; &lt;sarowe@... &lt;mailto:sarowe%40syr.edu=\r\n&gt;\n&gt; \n&gt; \t&gt; &lt;mailto:sarowe%40syr.edu &lt;mailto:sarowe%2540syr.edu&gt; &gt; &gt;\n&gt; wrote:=\r\n &gt; &gt; Hi, &gt; &gt; I want to write\n&gt; \n&gt; \t&gt; decide-rules that reject resources bas=\r\ned on two &gt; conditions: \t&gt;\n&gt; content-length and content-type (e.g., text/ht=\r\nml resources &gt; larger \t&gt;\n&gt; than 10MB, and text/plain resources larger than =\r\n100KB), but I\n&gt; &gt; can&#39;t\n&gt; \t&gt; find any way to logically AND rule subsets tog=\r\nether. &gt; &gt; Is there a\n&gt; \t&gt; way to write decide-rules that would achieve wha=\r\nt I &gt; want? Should I\n&gt; be \t&gt; using ScriptedDecideRules? &gt; &gt; Thanks (for you=\r\nr patience with a \t&gt;\n&gt; newbie), &gt; Steve \t&gt; \t&gt; \t&gt; \t&gt; \t&gt; \t&gt;\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; =\r\n\n&gt; \n\n\n\n"}}