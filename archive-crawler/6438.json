{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":354174125,"authorName":"matthewyau12","from":"&quot;matthewyau12&quot; &lt;matthewyau12@...&gt;","profile":"matthewyau12","replyTo":"LIST","senderId":"JbiUrR8ZFkl4sJp2vqPRsCbLcRbZsS0ODJAu9fCvegTVpYqC3NyYjbgRFEmOV7kGwv80V5g0PeJKsPzxJIzgOCnOvbR0KKOvCmNK1g4J6Hv5","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Database Processor in Heritrix","postDate":"1268929833","msgId":6438,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhudGtmOSt0bnJuQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGhucXRnMithdTk0QGVHcm91cHMuY29tPg=="},"prevInTopic":6436,"nextInTopic":0,"prevInTime":6437,"nextInTime":6439,"topicId":5313,"numMessagesInTopic":9,"msgSnippet":"fixed, thx","rawEmail":"Return-Path: &lt;matthewyau12@...&gt;\r\nX-Sender: matthewyau12@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 69661 invoked from network); 18 Mar 2010 16:35:05 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 18 Mar 2010 16:35:05 -0000\r\nX-Received: from unknown (HELO n40b.bullet.mail.sp1.yahoo.com) (66.163.168.154)\n  by mta3.grp.sp2.yahoo.com with SMTP; 18 Mar 2010 16:35:05 -0000\r\nX-Received: from [69.147.65.149] by n40.bullet.mail.sp1.yahoo.com with NNFMP; 18 Mar 2010 16:30:34 -0000\r\nX-Received: from [98.137.34.35] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 18 Mar 2010 16:30:34 -0000\r\nDate: Thu, 18 Mar 2010 16:30:33 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;hntkf9+tnrn@...&gt;\r\nIn-Reply-To: &lt;hnqtg2+au94@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;matthewyau12&quot; &lt;matthewyau12@...&gt;\r\nSubject: Re: Database Processor in Heritrix\r\nX-Yahoo-Group-Post: member; u=354174125; y=PoH_kCH2x4Y223RK_RVy1OHNv0iz506G6WegDTQxBR_3X4Y4bBaL\r\nX-Yahoo-Profile: matthewyau12\r\n\r\nfixed, thx\n\n--- In archive-crawler@yahoogroups.com, &quot;matthewyau12&quot; &lt;matthew=\r\nyau12@...&gt; wrote:\n&gt;\n&gt; hihi,\n&gt; \n&gt; I am trying to do something similar with y=\r\nour work and inserting content information into a mysql database. I am able=\r\n to see the JDBC setting in user interface. However, I can not insert the c=\r\nontent into database, and I have placed the mysql-connector-java-5.0.8-bin.=\r\njar to the library in &#92;heritrix-1.14.3&#92;lib. I can not find any error messag=\r\ne in the heritrix windows but some warning message (org.arhive.rawler.setti=\r\nngs.CrawlerSettingsSAXHandler$SimpleElementHandler endElement Unknown attri=\r\nbute &#39;com.mysql.jdbc.Driver&#39; in file:../order.xml&#39; line: 234, column: 76\n&gt; =\r\n\n&gt; Attached please find a java file.\n&gt; \n&gt; Thx\n&gt; Mat\n&gt; \n&gt; package org.archiv=\r\ne.crawler.writer;\n&gt; \n&gt; import org.archive.crawler.datamodel.CoreAttributeCo=\r\nnstants;\n&gt; import org.archive.crawler.datamodel.CrawlURI;\n&gt; import org.arch=\r\nive.crawler.framework.Processor;\n&gt; import org.archive.crawler.settings.Simp=\r\nleType;\n&gt; import org.archive.io.RecordingInputStream;\n&gt; import org.archive.=\r\nio.ReplayInputStream;\n&gt; import org.archive.net.UURI;\n&gt; \n&gt; \n&gt; \n&gt; import java=\r\n.io.ByteArrayOutputStream;\n&gt; import java.io.IOException;\n&gt; import java.sql.=\r\n*;\n&gt; import java.util.logging.Logger ;\n&gt; import javax.management.AttributeN=\r\notFoundException;\n&gt; \n&gt; /**\n&gt; * Processor module that writes the results of =\r\nsuccessful fetches to\n&gt; * Database via JDBC.\n&gt; */\n&gt; public class JDBCWriter=\r\nProcessor \n&gt; extends Processor implements CoreAttributeConstants {\n&gt; \n&gt; pri=\r\nvate static final long serialVersionUID =3D 111407556238389168L;\n&gt; \n&gt; /**\n&gt;=\r\n * Key to use asking settings for JDBC driver.\n&gt; */\n&gt; public static final S=\r\ntring ATTR_JDBC_DRIVER =3D &quot;com.mysql.jdbc.Driver&quot;;\n&gt; \n&gt; /**\n&gt; * Key to use=\r\n asking settings for JDBC URL.\n&gt; */\n&gt; public static final String ATTR_JDBC_=\r\nURL =3D &quot;jdbc:mysql://localhost/&quot;;\n&gt; \n&gt; // Key to use asking database name\n=\r\n&gt; public static final String ATTR_JDBC_DBNAME =3D &quot;northwind&quot;;\n&gt; \n&gt; // Key =\r\nto use asking table name\n&gt; public static final String ATTR_JDBC_TBNAME =3D =\r\n&quot;testing&quot;;\n&gt; \n&gt; /**\n&gt; * Key to use asking settings for username.\n&gt; */\n&gt; pub=\r\nlic static final String ATTR_JDBC_USERNAME =3D &quot;root&quot;;\n&gt; \n&gt; /**\n&gt; * Key to =\r\nuse asking settings for passwd.\n&gt; */\n&gt; public static final String ATTR_JDBC=\r\n_PASSWD =3D &quot;zxc&quot;;\n&gt; \n&gt; /**\n&gt; * Logger.\n&gt; */\n&gt; private static final Logger =\r\nlogger =3D\n&gt; Logger.getLogger(JDBCWriterProcessor.class.getName());\n&gt; \n&gt; /*=\r\n*\n&gt; * @param name Name of this processor.\n&gt; */\n&gt; public JDBCWriterProcessor=\r\n(String name) {\n&gt; //for adding attributes to heritrix processor, appears in=\r\n WebUI&#92;\n&gt; //be sure to define variables in the format up above first.\n&gt; sup=\r\ner(name, &quot;JDBCWriter processor. &quot; +\n&gt; &quot;A writer that writes each URL to dat=\r\nabase via jdbc &quot;);\n&gt; addElementToDefinition(new SimpleType(ATTR_JDBC_DRIVER=\r\n,\n&gt; &quot;jdbc driver name&quot;, &quot;com.mysql.jdbc.Driver&quot;));\n&gt; addElementToDefinition=\r\n(new SimpleType(ATTR_JDBC_URL,\n&gt; &quot;jdbc url in this form:jdbc:databasetype:/=\r\n/URL_to_db:port/&quot;, &quot;&quot;));\n&gt; //the last / is necessary after port b/c the ful=\r\nl URL of a jdbc is\n&gt; //jdbc:databasetype://URL_to_db:port/db_name\n&gt; addElem=\r\nentToDefinition(new SimpleType(ATTR_JDBC_DBNAME,\n&gt; &quot;database name&quot;, &quot;&quot;));\n&gt;=\r\n addElementToDefinition(new SimpleType(ATTR_JDBC_TBNAME,\n&gt; &quot;table name&quot;, &quot;&quot;=\r\n));\n&gt; addElementToDefinition(new SimpleType(ATTR_JDBC_USERNAME,\n&gt; &quot;username=\r\n&quot;, &quot;&quot;));\n&gt; addElementToDefinition(new SimpleType(ATTR_JDBC_PASSWD,\n&gt; &quot;passw=\r\nord&quot;, &quot;&quot;));\n&gt; }\n&gt; \n&gt; protected void innerProcess(CrawlURI curi) {\n&gt; if (!cu=\r\nri.isSuccess()) {\n&gt; return;\n&gt; }\n&gt; UURI uuri =3D curi.getUURI(); // Current =\r\nURI.\n&gt; \n&gt; // Only http and https schemes are supported.\n&gt; String scheme =3D=\r\n uuri.getScheme();\n&gt; if (!&quot;http&quot;.equalsIgnoreCase(scheme)\n&gt; && !&quot;https&quot;.equ=\r\nalsIgnoreCase(scheme)) {\n&gt; return;\n&gt; }\n&gt; \n&gt; //Only xml file will store in d=\r\natabase, change this expression to accept different content types\n&gt; String =\r\ncontenttype =3D curi.getContentType();\n&gt; if (null =3D=3D contenttype ||\n&gt; !=\r\n&quot;application/xml&quot;.equalsIgnoreCase(contenttype)) {\n&gt; return;\n&gt; }\n&gt; \n&gt; Recor=\r\ndingInputStream recis =3D\n&gt; curi.getHttpRecorder().getRecordedInput();\n&gt; if=\r\n (0L =3D=3D recis.getResponseContentLength()) {\n&gt; return;\n&gt; }\n&gt; \n&gt; try {\n&gt; =\r\nwriteToDatabase(curi); //calls the function write to database\n&gt; } catch (IO=\r\nException e) {\n&gt; logger.warning(e.getLocalizedMessage());\n&gt; }\n&gt; }\n&gt; \n&gt; /**\n=\r\n&gt; * write into database\n&gt; *\n&gt; * @param curi the curi that recorded the cont=\r\nents\n&gt; * of the resource\n&gt; * @throws java.io.IOException when something err=\r\nor;\n&gt; */\n&gt; private void writeToDatabase(CrawlURI curi) throws IOException {=\r\n\n&gt; ReplayInputStream replayis =3D\n&gt; curi.getHttpRecorder().getRecordedInput=\r\n().getContentReplayInputStream();\n&gt; ByteArrayOutputStream sContent =3D new =\r\nByteArrayOutputStream();\n&gt; \n&gt; try {\n&gt; replayis.readContentTo(sContent);\n&gt; }=\r\n finally {\n&gt; replayis.close();\n&gt; }\n&gt; \n&gt; Connection conn =3D null;\n&gt; Prepare=\r\ndStatement stmt =3D null;\n&gt; //calls a function getAttrValue to set each var=\r\niable from webUI settings\n&gt; String driver =3D getAttrValue(ATTR_JDBC_DRIVER=\r\n);\n&gt; String URL =3D getAttrValue(ATTR_JDBC_URL);\n&gt; String db =3D getAttrVal=\r\nue(ATTR_JDBC_DBNAME);\n&gt; String table =3D getAttrValue(ATTR_JDBC_TBNAME);\n&gt; =\r\nString user =3D getAttrValue(ATTR_JDBC_USERNAME);\n&gt; String pass =3D getAttr=\r\nValue(ATTR_JDBC_PASSWD);\n&gt; \n&gt; System.out.println(driver+&quot; &quot;+URL+&quot; &quot;+db+&quot; &quot;+=\r\ntable+&quot; &quot;+user+&quot; &quot;+pass);\n&gt; try {// ERROR OCCURS HERE DUE TO INABILITY TO S=\r\nEE THE DRIVER\n&gt; Class.forName(driver); //loads the JDBC driver.\n&gt; } catch (=\r\nException e) {\n&gt; //handle error\n&gt; System.out.println(&quot;Failed to load JDBC D=\r\nriver.&quot;);\n&gt; logger.warning(e.getLocalizedMessage());\n&gt; }\n&gt; try {\n&gt; conn =3D=\r\n DriverManager.getConnection(URL+db,user,pass);\n&gt; //insert into table secti=\r\non, change if column names are\n&gt; //different\n&gt; //Note this assumes you alre=\r\nady made the table with these columns\n&gt; \n&gt; stmt =3D conn.prepareStatement(&quot;=\r\nINSERT INTO&quot;+table+&quot;(site,url,content,creation_date) VALUES(?,?,?,NOW())&quot;);=\r\n\n&gt; stmt.setString(1, curi.getUURI().getHost()); //contains host\n&gt; //address=\r\n\n&gt; stmt.setString(2, curi.getUURI().getURI()); //contains\n&gt; //URL of conten=\r\nt\n&gt; stmt.setString(3, sContent.toString()); //contains actual\n&gt; //content o=\r\nf the page\n&gt; stmt.executeUpdate();\n&gt; stmt.close();\n&gt; conn.close();\n&gt; } catc=\r\nh (SQLException ex) {\n&gt; logger.warning(curi.getUURI().getURI() + &quot;--&gt;&quot; +\n&gt; =\r\nex.getLocalizedMessage());\n&gt; System.out.println(&quot;SQLException: &quot; + ex.getMe=\r\nssage());\n&gt; System.out.println(&quot;SQLState: &quot; + ex.getSQLState());\n&gt; System.o=\r\nut.println(&quot;VendorError: &quot; + ex.getErrorCode());\n&gt; } finally {\n&gt; /*\n&gt; * clo=\r\nse any jdbc instances here that weren&#39;t\n&gt; * explicitly closed during normal=\r\n code path, so\n&gt; * that we don&#39;t &#39;leak&#39; resources...\n&gt; */\n&gt; if (stmt !=3D n=\r\null) {\n&gt; try {\n&gt; stmt.close();\n&gt; } catch (SQLException sqlex) {\n&gt; // ignore=\r\n -- as we can&#39;t do anything about it here\n&gt; }\n&gt; stmt =3D null;\n&gt; }\n&gt; if (co=\r\nnn !=3D null) {\n&gt; try {\n&gt; conn.close();\n&gt; } catch (SQLException sqlex) {\n&gt; =\r\n// ignore -- as we can&#39;t do anything about it here\n&gt; }\n&gt; conn =3D null;\n&gt; }=\r\n\n&gt; }\n&gt; } //function writeToDB ends\n&gt; \n&gt; public String getAttrValue(String s=\r\nettingvalue) {\n&gt; //function gets and sets the attribute values entered in w=\r\nebUI,\n&gt; //other similar functions with different return types can be used\n&gt;=\r\n //if needed.\n&gt; String varname =3D null;\n&gt; try {\n&gt; varname =3D ((String) ge=\r\ntAttribute(settingvalue));\n&gt; } catch (AttributeNotFoundException e) {\n&gt; log=\r\nger.warning(e.getLocalizedMessage());\n&gt; } finally { return varname; }\n&gt; }\n&gt;=\r\n }// end of class\n&gt; \n&gt; \n&gt; --- In archive-crawler@yahoogroups.com, &quot;lpeterus=\r\n&quot; &lt;lpeterus@&gt; wrote:\n&gt; &gt;\n&gt; &gt; I finally managed to get this to work. Turns o=\r\nut the driver wasn&#39;t the\n&gt; &gt; problem at all. Placing the jar file in lib fo=\r\nlder does include it in\n&gt; &gt; the classpath properly. Thanks for pointing tha=\r\nt out. \n&gt; &gt; What was wrong is the way the processor access variables for in=\r\nput in\n&gt; &gt; the webUI. I fixed that and everything works.\n&gt; &gt; I&#39;m posting th=\r\ne final version of the code here if anyone else is doing\n&gt; &gt; something simi=\r\nlar. \n&gt; &gt; \n&gt; &gt; - Shawn\n&gt; &gt; \n&gt; &gt; package org.archive.crawler.writer;\n&gt; &gt; \n&gt; =\r\n&gt; import org.archive.crawler.datamodel.CoreAttributeConstants;\n&gt; &gt; import o=\r\nrg.archive.crawler.datamodel.CrawlURI;\n&gt; &gt; import org.archive.crawler.frame=\r\nwork.Processor;\n&gt; &gt; import org.archive.crawler.settings.SimpleType;\n&gt; &gt; imp=\r\nort org.archive.io.RecordingInputStream;\n&gt; &gt; import org.archive.io.ReplayIn=\r\nputStream;\n&gt; &gt; import org.archive.net.UURI;\n&gt; &gt; \n&gt; &gt; import java.io.ByteArr=\r\nayOutputStream;\n&gt; &gt; import java.io.IOException;\n&gt; &gt; import java.sql.*;\n&gt; &gt; =\r\nimport java.util.logging.Logger ;\n&gt; &gt; import javax.management.AttributeNotF=\r\noundException;\n&gt; &gt; \n&gt; &gt; /**\n&gt; &gt;  * Processor module that writes the results=\r\n of successful fetches to\n&gt; &gt;  * Database via JDBC.\n&gt; &gt;  */\n&gt; &gt; public clas=\r\ns JDBCWriterProcessor\n&gt; &gt;         extends Processor implements CoreAttribut=\r\neConstants {\n&gt; &gt; \n&gt; &gt;     private static final long serialVersionUID =3D 11=\r\n1407556238389168L;\n&gt; &gt; \n&gt; &gt;     /**\n&gt; &gt;      * Key to use asking settings f=\r\nor JDBC driver.\n&gt; &gt;      */\n&gt; &gt;     public static final String ATTR_JDBC_DR=\r\nIVER =3D &quot;JDBC Driver&quot;;\n&gt; &gt; \n&gt; &gt;     /**\n&gt; &gt;      * Key to use asking setti=\r\nngs for JDBC URL.\n&gt; &gt;      */\n&gt; &gt;     public static final String ATTR_JDBC_=\r\nURL =3D &quot;JDBC URL&quot;;\n&gt; &gt;     \n&gt; &gt;     //  Key to use asking database name\n&gt; =\r\n&gt;     public static final String ATTR_JDBC_DBNAME =3D &quot;database&quot;;\n&gt; &gt; \n&gt; &gt; =\r\n    // Key to use asking table name\n&gt; &gt;     public static final String ATTR=\r\n_JDBC_TBNAME =3D &quot;table&quot;;\n&gt; &gt; \n&gt; &gt;     /**\n&gt; &gt;      * Key to use asking set=\r\ntings for username.\n&gt; &gt;      */\n&gt; &gt;     public static final String ATTR_JDB=\r\nC_USERNAME =3D &quot;username&quot;;\n&gt; &gt; \n&gt; &gt;     /**\n&gt; &gt;      * Key to use asking se=\r\nttings for passwd.\n&gt; &gt;      */\n&gt; &gt;     public static final String ATTR_JDBC=\r\n_PASSWD =3D &quot;password&quot;;\n&gt; &gt; \n&gt; &gt;     /**\n&gt; &gt;      * Logger.\n&gt; &gt;      */\n&gt; &gt;=\r\n     private static final Logger logger =3D\n&gt; &gt;             Logger.getLogge=\r\nr(JDBCWriterProcessor.class.getName());\n&gt; &gt; \n&gt; &gt;     /**\n&gt; &gt;      * @param =\r\nname Name of this processor.\n&gt; &gt;      */\n&gt; &gt;     public JDBCWriterProcessor=\r\n(String name) {\n&gt; &gt; \t//for adding attributes to heritrix processor, appears=\r\n in WebUI&#92;\n&gt; &gt; \t//be sure to define variables in the format up above first.=\r\n\n&gt; &gt;         super(name, &quot;JDBCWriter processor. &quot; +\n&gt; &gt;                 &quot;A =\r\nwriter that writes each URL to database via jdbc &quot;);\n&gt; &gt;         addElement=\r\nToDefinition(new SimpleType(ATTR_JDBC_DRIVER,\n&gt; &gt;                 &quot;jdbc dri=\r\nver name&quot;, &quot;com.mysql.jdbc.Driver&quot;));\n&gt; &gt;         addElementToDefinition(ne=\r\nw SimpleType(ATTR_JDBC_URL,\n&gt; &gt;                 &quot;jdbc url in this form:\n&gt; &gt;=\r\n jdbc:databasetype://URL_to_db:port/&quot;, &quot;&quot;));\n&gt; &gt; \t//the last / is necessary=\r\n after port b/c the full URL of a jdbc is\n&gt; &gt; jdbc:databasetype://URL_to_db=\r\n:port/db_name\n&gt; &gt; \taddElementToDefinition(new SimpleType(ATTR_JDBC_DBNAME,\n=\r\n&gt; &gt; \t\t&quot;database name&quot;, &quot;&quot;));\n&gt; &gt; \taddElementToDefinition(new SimpleType(ATT=\r\nR_JDBC_TBNAME,\n&gt; &gt; \t\t&quot;table name&quot;, &quot;&quot;));\n&gt; &gt;         addElementToDefinition=\r\n(new SimpleType(ATTR_JDBC_USERNAME,\n&gt; &gt;                 &quot;username&quot;, &quot;&quot;));\n&gt;=\r\n &gt;         addElementToDefinition(new SimpleType(ATTR_JDBC_PASSWD,\n&gt; &gt;     =\r\n            &quot;password&quot;, &quot;&quot;));\n&gt; &gt;     }\n&gt; &gt; \n&gt; &gt;     protected void innerPr=\r\nocess(CrawlURI curi) {\n&gt; &gt;         if (!curi.isSuccess()) {\n&gt; &gt;            =\r\n return;\n&gt; &gt;         }\n&gt; &gt;         UURI uuri =3D curi.getUURI(); // Current=\r\n URI.\n&gt; &gt; \n&gt; &gt;         // Only http and https schemes are supported.\n&gt; &gt;   =\r\n      String scheme =3D uuri.getScheme();\n&gt; &gt;         if (!&quot;http&quot;.equalsIgn=\r\noreCase(scheme)\n&gt; &gt;                 && !&quot;https&quot;.equalsIgnoreCase(scheme)) {=\r\n\n&gt; &gt;             return;\n&gt; &gt;         }\n&gt; &gt; \n&gt; &gt;         //Only xml file wil=\r\nl store in database, change this expression\n&gt; &gt; to accept different content=\r\n types\n&gt; &gt;         String contenttype =3D curi.getContentType();\n&gt; &gt;       =\r\n  if (null =3D=3D contenttype ||\n&gt; &gt; !&quot;application/xml&quot;.equalsIgnoreCase(co=\r\nntenttype)) {\n&gt; &gt;             return;\n&gt; &gt;         }\n&gt; &gt; \n&gt; &gt;         Record=\r\ningInputStream recis =3D\n&gt; &gt; curi.getHttpRecorder().getRecordedInput();\n&gt; &gt;=\r\n         if (0L =3D=3D recis.getResponseContentLength()) {\n&gt; &gt;             =\r\nreturn;\n&gt; &gt;         }\n&gt; &gt; \n&gt; &gt;         try {\n&gt; &gt;             writeToDatabas=\r\ne(curi); //calls the function write to database\n&gt; &gt;         } catch (IOExce=\r\nption e) {\n&gt; &gt;             logger.warning(e.getLocalizedMessage());\n&gt; &gt;    =\r\n     }\n&gt; &gt;     }\n&gt; &gt; \n&gt; &gt;     /**\n&gt; &gt;      * write into database\n&gt; &gt;      *=\r\n\n&gt; &gt;      * @param curi the curi that recorded the contents\n&gt; &gt;      *     =\r\n        of the resource\n&gt; &gt;      * @throws java.io.IOException when somethi=\r\nng error;\n&gt; &gt;      */\n&gt; &gt;     private void writeToDatabase(CrawlURI curi) t=\r\nhrows IOException {\n&gt; &gt;         ReplayInputStream replayis =3D\n&gt; &gt; curi.get=\r\nHttpRecorder().getRecordedInput().getContentReplayInputStream();\n&gt; &gt;       =\r\n  ByteArrayOutputStream sContent =3D new ByteArrayOutputStream(); \n&gt; &gt; \n&gt; &gt;=\r\n         try {\n&gt; &gt;             replayis.readContentTo(sContent);\n&gt; &gt;       =\r\n  } finally {\n&gt; &gt;             replayis.close();\n&gt; &gt;         }\n&gt; &gt; \n&gt; &gt;     =\r\n    Connection conn =3D null;\n&gt; &gt;         PreparedStatement stmt =3D null;\n=\r\n&gt; &gt; \t//calls a function getAttrValue to set each variable from webUI settin=\r\ngs\n&gt; &gt; \tString driver =3D getAttrValue(ATTR_JDBC_DRIVER);\n&gt; &gt; \tString URL =\r\n=3D getAttrValue(ATTR_JDBC_URL);\n&gt; &gt; \tString db =3D getAttrValue(ATTR_JDBC_=\r\nDBNAME);\n&gt; &gt; \tString table =3D getAttrValue(ATTR_JDBC_TBNAME);\n&gt; &gt; \tString =\r\nuser =3D getAttrValue(ATTR_JDBC_USERNAME);\n&gt; &gt; \tString pass =3D getAttrValu=\r\ne(ATTR_JDBC_PASSWD);\n&gt; &gt; \n&gt; &gt; \tSystem.out.println(driver+&quot; &quot;+URL+&quot; &quot;+db+&quot; &quot;=\r\n+table+&quot; &quot;+user+&quot; &quot;+pass);\n&gt; &gt;         try {// ERROR OCCURS HERE DUE TO INA=\r\nBILITY TO SEE THE DRIVER\n&gt; &gt;             Class.forName(driver); //loads the=\r\n JDBC driver. \n&gt; &gt; \t}  catch (Exception e) {\n&gt; &gt; \t\t//handle error\n&gt; &gt; \t\tSys=\r\ntem.out.println(&quot;Failed to load JDBC Driver.&quot;);\n&gt; &gt; \t\tlogger.warning(e.getL=\r\nocalizedMessage());\t\n&gt; &gt; \t   }\n&gt; &gt; \ttry {\n&gt; &gt;            conn =3D DriverMan=\r\nager.getConnection(URL+db,user,pass);\n&gt; &gt;            //insert into table se=\r\nction, change if column names are\n&gt; &gt; different\n&gt; &gt; \t   //Note this assumes=\r\n you already made the table with these columns\n&gt; &gt;                         =\r\n                         \n&gt; &gt;              stmt =3D conn.prepareStatement(&quot;=\r\nINSERT INTO\n&gt; &gt; &quot;+table+&quot;(site,url,content,creation_date) VALUES(?,?,?,NOW(=\r\n))&quot;);\n&gt; &gt; \t     stmt.setString(1, curi.getUURI().getHost()); //contains hos=\r\nt\n&gt; &gt; address\t\n&gt; &gt;              stmt.setString(2, curi.getUURI().getURI());=\r\n  //contains\n&gt; &gt; URL of content\n&gt; &gt;  \t     stmt.setString(3, sContent.toStr=\r\ning()); //contains actual\n&gt; &gt; content of the page\n&gt; &gt;              stmt.exe=\r\ncuteUpdate();\n&gt; &gt; \t     stmt.close(); \n&gt; &gt;              conn.close();\n&gt; &gt;  =\r\n        }  catch (SQLException ex) {\n&gt; &gt; \t\t logger.warning(curi.getUURI().g=\r\netURI() + &quot;--&gt;&quot; +\n&gt; &gt; ex.getLocalizedMessage());\n&gt; &gt; \t         System.out.p=\r\nrintln(&quot;SQLException: &quot; + ex.getMessage());\n&gt; &gt; \t         System.out.printl=\r\nn(&quot;SQLState: &quot; + ex.getSQLState());\n&gt; &gt; \t         System.out.println(&quot;Vendo=\r\nrError: &quot; + ex.getErrorCode());\n&gt; &gt; \t    } finally {\n&gt; &gt; \t\t/*\n&gt; &gt; \t\t* close=\r\n any jdbc instances here that weren&#39;t\n&gt; &gt; \t\t* explicitly closed during norm=\r\nal code path, so\n&gt; &gt; \t\t* that we don&#39;t &#39;leak&#39; resources...\n&gt; &gt;             =\r\n    */\n&gt; &gt;             \tif (stmt !=3D null) {\n&gt; &gt;               \t  try {\n&gt; =\r\n&gt;                 \tstmt.close();\n&gt; &gt;               \t  } catch (SQLException=\r\n sqlex) {\n&gt; &gt;               \t      // ignore -- as we can&#39;t do anything abo=\r\nut it here\n&gt; &gt;               \t    }\n&gt; &gt;               \t  stmt =3D null;\n&gt; &gt;=\r\n             \t}\n&gt; &gt;            \tif (conn !=3D null) {\n&gt; &gt;           \t    tr=\r\ny {\n&gt; &gt;                \t    \tconn.close();\n&gt; &gt;                     } catch =\r\n(SQLException sqlex) {\n&gt; &gt;               \t     // ignore -- as we can&#39;t do =\r\nanything about it here\n&gt; &gt;               \t      }\n&gt; &gt;               \t    co=\r\nnn =3D null;\n&gt; &gt; \t\t}\n&gt; &gt;               }\n&gt; &gt;       } //function writeToDB e=\r\nnds\n&gt; &gt;     \n&gt; &gt;     public String getAttrValue(String settingvalue) { \n&gt; &gt;=\r\n     //function gets and sets the attribute values entered in webUI, \n&gt; &gt;  =\r\n   //other similar functions with different return types can be used\n&gt; &gt; if=\r\n needed.\n&gt; &gt; \tString varname =3D null;\n&gt; &gt; \ttry {\n&gt; &gt;  \t  varname =3D ((Str=\r\ning) getAttribute(settingvalue));\n&gt; &gt; \t}  catch (AttributeNotFoundException=\r\n e) {\n&gt; &gt; \t\t logger.warning(e.getLocalizedMessage());\n&gt; &gt; \t   } finally { r=\r\neturn varname; }\n&gt; &gt;     } \n&gt; &gt; }// end of class\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; &gt; --- In arc=\r\nhive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@&gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; =\r\nOur launch script (bin/heritrix) builds its own CLASSPATH so any \n&gt; &gt; &gt; &gt; a=\r\nttempts to set an alternate CLASSPATH before running our script may\n&gt; &gt; &gt; n=\r\not \n&gt; &gt; &gt; &gt; have the intended effect. It automatically builds a CLASSPATH\n&gt;=\r\n &gt; &gt; containing \n&gt; &gt; &gt; &gt; every JAR it finds in the &#39;lib&#39; directory -- you m=\r\nay want to try \n&gt; &gt; &gt; &gt; dropping your other JAR there.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; But=\r\n, it&#39;s impossible to tell for sure what&#39;s happening in your\n&gt; &gt; &gt; situation=\r\n \n&gt; &gt; &gt; &gt; without seeing the errors.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; - Gordon @ IA\n&gt; &gt; &gt; &gt;=\r\n \n&gt; &gt; &gt; &gt; lpeterus wrote:\n&gt; &gt; &gt; &gt; &gt; --- In archive-crawler@yahoogroups.com,=\r\n &quot;lpeterus&quot; &lt;lpeterus@&gt;\n&gt; &gt; wrote:\n&gt; &gt; &gt; &gt; &gt;&gt; --- In archive-crawler@yahoog=\r\nroups.com, Gordon Mohr &lt;gojomo@&gt;\n&gt; &gt; wrote:\n&gt; &gt; &gt; &gt; &gt;&gt;&gt; lpeterus wrote:\n&gt; &gt;=\r\n &gt; &gt; &gt;&gt;&gt;&gt; Hi!\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;&gt;\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;&gt; I made a processor for inserting co=\r\nntent information into a mysql\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;&gt; database. I included the name i=\r\nn processor.options and placed the\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;&gt; .java file into the writer =\r\nfolder in the source. Then built\n&gt; &gt; &gt; heritrix\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;&gt; using Maven. T=\r\nhe new processor does show up on the webUI but the\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;&gt; processor d=\r\noesn&#39;t work correctly when I do a crawl. I get\n&gt; &gt; toethread\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;&gt; e=\r\nrrors, am I doing this wrong? Thanks.\n&gt; &gt; &gt; &gt; &gt;&gt;&gt; Without knowing the error=\r\n, it&#39;s impossible to tell. If it&#39;s not \n&gt; &gt; &gt; &gt; &gt;&gt;&gt; something like &#39;class n=\r\not found&#39;, and the crawl launched\n&gt; &gt; before the \n&gt; &gt; &gt; &gt; &gt;&gt;&gt; error occurre=\r\nd, it&#39;s probably a bug in your code.\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt; &gt; &gt;&gt;&gt; - Gordon @ IA\n=\r\n&gt; &gt; &gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt; &gt; &gt;&gt; I actually modified the code seen in this article. I=\r\n&#39;m not sure\n&gt; &gt; &gt; if its\n&gt; &gt; &gt; &gt; &gt;&gt; not up to date with heritrix 1.14 or so=\r\nmething I changed. For the\n&gt; &gt; &gt; most\n&gt; &gt; &gt; &gt; &gt;&gt; part I just altered it to =\r\naccept xml rather than html and got\n&gt; &gt; rid of\n&gt; &gt; &gt; &gt; &gt;&gt; the strip tag fun=\r\nction and where it was used. \n&gt; &gt; &gt; &gt; &gt;&gt; http://tech.groups.yahoo.com/group=\r\n/archive-crawler/message/4538\n&gt; &gt; &gt; &gt; &gt;&gt;\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; Ok, I believe=\r\n its not recognizing the driver. I&#39;m using the mysql\n&gt; &gt; &gt; &gt; &gt; supported JD=\r\nBC driver thats wrapped in a jar file. Its manual\n&gt; &gt; says to\n&gt; &gt; &gt; &gt; &gt; add=\r\n the path to jar file into CLASSPATH like this:\n&gt; &gt; &gt; &gt; &gt; export set\n&gt; &gt; &gt; =\r\nCLASSPATH=3D/path/mysql-connector-java-[ver]-bin.jar:$CLASSPATH\n&gt; &gt; &gt; &gt; &gt; S=\r\nince I don&#39;t have admin rights on the system, I&#39;m using the Java\n&gt; &gt; &gt; &gt; &gt; =\r\nthats extracted/installed in my home directory. When I run a\n&gt; &gt; script to\n=\r\n&gt; &gt; &gt; &gt; &gt; use the driver after exporting, it sees the driver and works. Whe=\r\nn I\n&gt; &gt; &gt; &gt; &gt; use it in heritrix, it doesn&#39;t work because the errors get ca=\r\nught by\n&gt; &gt; &gt; &gt; &gt; exceptions. \n&gt; &gt; &gt; &gt; &gt; Is it possible that adding it to C=\r\nLASSPATH doesn&#39;t allow the Java\n&gt; &gt; &gt; &gt; &gt; program (which I set JAVA_HOME to=\r\n when running Heritrix) to see\n&gt; &gt; where\n&gt; &gt; &gt; &gt; &gt; the driver is?\n&gt; &gt; &gt; &gt; &gt;=\r\n \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; ------------------------------------\n&gt; &gt; =\r\n&gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; Yahoo! Groups Links\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; =\r\n&gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}