{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":194872127,"authorName":"hinoglu","from":"&quot;hinoglu&quot; &lt;hinoglu@...&gt;","profile":"hinoglu","replyTo":"LIST","senderId":"H199VMHvYpFxOz8scpuyGS4vi8iZ-GycIoT5kLr1jApxogIh1eA3fWwioGsAuq1_r8smc-kM9WkGcORcd7LeVPzias0","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: java.lang.OutOfMemoryError: GC overhead limit exceeded","postDate":"1194470985","msgId":4668,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZndGFvOStmOXZiQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQ3MzFFOUZCLjMwNzAzMDdAYXJjaGl2ZS5vcmc+"},"prevInTopic":4667,"nextInTopic":0,"prevInTime":4667,"nextInTime":4669,"topicId":4629,"numMessagesInTopic":9,"msgSnippet":"... try ... i have a single machine/multiple crawl jobs system, that value was the best i have without killing the system so far :o( ... my changes on","rawEmail":"Return-Path: &lt;hinoglu@...&gt;\r\nX-Sender: hinoglu@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 35135 invoked from network); 7 Nov 2007 21:29:50 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m51.grp.scd.yahoo.com with QMQP; 7 Nov 2007 21:29:50 -0000\r\nX-Received: from unknown (HELO n19d.bullet.scd.yahoo.com) (66.218.67.244)\n  by mta18.grp.scd.yahoo.com with SMTP; 7 Nov 2007 21:29:49 -0000\r\nX-Received: from [66.218.69.1] by n19.bullet.scd.yahoo.com with NNFMP; 07 Nov 2007 21:29:46 -0000\r\nX-Received: from [66.218.66.74] by t1.bullet.scd.yahoo.com with NNFMP; 07 Nov 2007 21:29:46 -0000\r\nDate: Wed, 07 Nov 2007 21:29:45 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;fgtao9+f9vb@...&gt;\r\nIn-Reply-To: &lt;4731E9FB.3070307@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;hinoglu&quot; &lt;hinoglu@...&gt;\r\nSubject: Re: java.lang.OutOfMemoryError: GC overhead limit exceeded\r\nX-Yahoo-Group-Post: member; u=194872127; y=L2C9UiCfSKApIPs875AAzPiZzvYN6nAqhuZTT4Z1kHYjiA\r\nX-Yahoo-Profile: hinoglu\r\n\r\n--- In \narchive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@...&gt; wrote:\n&gt; =\r\nAs 4*35% =3D 140% of heap, if at any time the 4 contemporaneous crawls\ntry =\r\n\n&gt; to use their maximum bdb-cache allocation, you will get an OOME.\n&gt; \n\ni h=\r\nave a single machine/multiple crawl jobs system, that value was the\nbest \ni=\r\n have without killing the system so far :o(   \n\n\n&gt; \n&gt; The previous jmap out=\r\nput you provided suggesting ~1900 instances of \n&gt; common per-crawl objects =\r\nstill causes me some concern that there may be \n&gt; a reference leak in your =\r\npattern of instance/job startup/shutdown, and \n\nmy changes on Heritrix.java=\r\n for easing the controlling are as seen\nbelow. as i mentioned before,\ni&#39;m n=\r\not that into java, so if reference leaks exist, i&#39;d be glad if\npointed out.=\r\n \nthanks for help. \n\n--- ./src/java/org/archive/crawler/Heritrix.java\tSun M=\r\nay  6 21:02:16 2007\n+++ ../calisma/heritrix/src/java/org/archive/crawler/He=\r\nritrix.java\tThu\nOct 25 06:23:58 2007\n@@ -46,6 +46,7 @@\n import java.util.It=\r\nerator;\n import java.util.List;\n import java.util.Map;\n+import java.util.Se=\r\nt;\n import java.util.Properties;\n import java.util.StringTokenizer;\n import=\r\n java.util.TimeZone;\n@@ -352,6 +353,12 @@\n     private final static String =\r\nSHUTDOWN_OPER =3D &quot;shutdown&quot;;\n     private final static String LOG_OPER =3D=\r\n &quot;log&quot;;\n     private final static String REBIND_JNDI_OPER =3D &quot;rebindJNDI&quot;;=\r\n\n+    private final static String HELLO_OPER =3D &quot;hello&quot;;\n+    private fina=\r\nl static String GET_JOBS_BY_NAME_STARTS_WITH_OPER =3D\n&quot;getJobsByNameStartsW=\r\nith&quot;;\n+    private final static String CREATE_INSTANCE_OPER =3D &quot;createInst=\r\nance&quot;;\n+    private final static String GET_JOB_STATUS_OPER =3D &quot;getJobStat=\r\nus&quot;;\n+    private final static String GET_RUNNING_JOB_OPER =3D &quot;getRunningJ=\r\nob&quot;;\n+    private final static String GET_INSTANCE_NAMES_OPER =3D\n&quot;getInsta=\r\nnceNames&quot;;\n     private final static List OPERATION_LIST;\n     static {\n   =\r\n      OPERATION_LIST =3D Arrays.asList(new String [] {START_OPER,\nSTOP_OPER=\r\n,\n@@ -360,7 +367,9 @@\n             DELETE_CRAWL_JOB_OPER, ALERT_OPER, PENDI=\r\nNG_JOBS_OPER,\n             COMPLETED_JOBS_OPER, CRAWLEND_REPORT_OPER, SHUTD=\r\nOWN_OPER,\n             LOG_OPER, DESTROY_OPER, TERMINATE_CRAWL_JOB_OPER,\n- =\r\n           REBIND_JNDI_OPER});\n+            REBIND_JNDI_OPER, HELLO_OPER,\nG=\r\nET_JOBS_BY_NAME_STARTS_WITH_OPER,\n+            CREATE_INSTANCE_OPER, GET_JO=\r\nB_STATUS_OPER,\nGET_RUNNING_JOB_OPER,\n+            GET_INSTANCE_NAMES_OPER})=\r\n;\n     }\n     private CompositeType jobCompositeType =3D null;\n     private=\r\n TabularType jobsTabularType =3D null;\n@@ -1898,6 +1908,19 @@\n             =\r\nthis.jobHandler.stop();\n         }\n     }\n+    \n+    public String hello() =\r\n{\n+    \treturn &quot;hello Mars!&quot;;\n+    }\n+    \n+    public String createInstanc=\r\neWithJMX(String name) {\n+    \ttry {\n+\t\t\tHeritrix heritrix =3D new Heritrix(=\r\nname, true);\n+\t\t\treturn heritrix.getMBeanName().toString();\n+\t\t} catch (IOE=\r\nxception e) {\n+\t\t\treturn &quot;error&quot;;\n+\t\t}\n+    }\n \n     public String interrup=\r\nt(String threadName) {\n         String result =3D &quot;Thread &quot; + threadName + =\r\n&quot; not found&quot;;\n@@ -2111,6 +2134,16 @@\n             Heritrix.REBIND_JNDI_OPER=\r\n,\n             &quot;Rebinds this Heritrix with JNDI.&quot;, null,\n             Simpl=\r\neType.VOID, MBeanOperationInfo.ACTION);\n+       \n+        operations[17] =\r\n=3D new OpenMBeanOperationInfoSupport(\n+        \tHeritrix.HELLO_OPER,\n+    =\r\n    \t&quot;Hello operation&quot;, null,\n+        \tSimpleType.STRING, MBeanOperationIn=\r\nfo.ACTION);\n+        \n+        operations[18] =3D new OpenMBeanOperationInf=\r\noSupport(\n+        \tHeritrix.CREATE_INSTANCE_OPER,\n+        \t&quot;Create a new =\r\ninstance of Heritrix&quot;, null,\n+        \tSimpleType.STRING, MBeanOperationInf=\r\no.ACTION);\n \n         // Build the info object.\n         return new OpenMBe=\r\nanInfoSupport(this.getClass().getName(),\n@@ -2326,11 +2359,73 @@\n          =\r\n   }\n         }\n         \n+        if (operationName.equals(HELLO_OPER)) {\n=\r\n+        \tJmxUtils.checkParamsCount(HELLO_OPER, params, 0);\n+        \tretur=\r\nn hello();\n+        }\n+        \n+        if (operationName.equals(GET_JOBS_=\r\nBY_NAME_STARTS_WITH_OPER)) {\n+        \tJmxUtils.checkParamsCount(GET_JOBS_B=\r\nY_NAME_STARTS_WITH_OPER,\nparams, 1);\n+        \treturn\nthis.jobHandler.getJo=\r\nbsByNameStartsWith(params[0].toString());\n+        }\n+        \n+        if =\r\n(operationName.equals(CREATE_INSTANCE_OPER)) {\n+        \tJmxUtils.checkPara=\r\nmsCount(CREATE_INSTANCE_OPER, params, 1);\n+        \treturn createInstanceWi=\r\nthJMX(params[0].toString());\n+        }\n+        \n+        if (operationNam=\r\ne.equals(GET_JOB_STATUS_OPER)) {\n+        \tJmxUtils.checkParamsCount(GET_JO=\r\nB_STATUS_OPER, params, 1);\n+        \treturn getJobStatus(params[0].toString=\r\n());\n+        }\n+        \n+        if (operationName.equals(GET_RUNNING_JOB=\r\n_OPER)) {\n+            JmxUtils.checkParamsCount(GET_RUNNING_JOB_OPER, para=\r\nms, 0);\n+            return getRunningJob();\n+        }\n+        \n+        =\r\nif (operationName.equals(GET_INSTANCE_NAMES_OPER)) {\n+            JmxUtils.=\r\ncheckParamsCount(GET_INSTANCE_NAMES_OPER,\nparams, 0);\n+            return g=\r\netInstanceNames();\n+        }\n+        \n         throw new ReflectionExcept=\r\nion(\n             new NoSuchMethodException(operationName),\n               =\r\n  &quot;Cannot find the operation &quot; + operationName);\n     }\n     \n+    public S=\r\ntring getInstanceNames() {\n+        StringBuffer retval =3D new StringBuffe=\r\nr();\n+        Set keys =3D instances.keySet();\n+        Iterator it =3D key=\r\ns.iterator();\n+        \n+        while (it.hasNext()) {\n+            retval=\r\n.append((String)it.next() + &quot; &quot;);\n+        }\n+        \n+        return retv=\r\nal.toString();\n+    }\n+    \n+    public String getRunningJob() {\n+        C=\r\nrawlJob job =3D getJobHandler().getCurrentJob();\n+        \n+        if (job=\r\n =3D=3D null) {\n+            return &quot;null&quot;;\n+        }\n+        \n+        r=\r\neturn job.getUID();\n+    }\n+    \n+    public String getJobStatus(String UID=\r\n) {\n+        CrawlJob job =3D getJobHandler().getJob(UID);\n+        \n+     =\r\n   if (job =3D=3D null) {\n+            return &quot;null&quot;;\n+        }\n+        \n=\r\n+        return job.getStatus();\n+    }\n+    \n     /**\n      * Return named=\r\n crawl end report for job with passed uid.\n      * Crawler makes reports wh=\r\nen its finished its crawl.  Use this\nmethod\n\n\n"}}