{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"GSV7IjOpJ7Ek0Lz86yqOkSJPssT6WxTaILWJH93DPSfLNKv7xlCpQkxHPei9MsN0ki4BYM25d7BdSSx52tHBA5vDvYivWTE","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [archive-crawler] Usage of QuotaEnforcer in H3","postDate":"1264643494","msgId":6336,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRCNjBFREE2LjcwMjAxMDVAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGhqcDZlaCs4Y2NzQGVHcm91cHMuY29tPg==","referencesHeader":"PGhqcDZlaCs4Y2NzQGVHcm91cHMuY29tPg=="},"prevInTopic":6335,"nextInTopic":6337,"prevInTime":6335,"nextInTime":6337,"topicId":6335,"numMessagesInTopic":3,"msgSnippet":"The QuotaEnforcer examines the URI passed to the processor, and checks to see if the host/server/group(aka queue) tallies associated with it are over the","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 69471 invoked from network); 28 Jan 2010 01:51:52 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m14.grp.re1.yahoo.com with QMQP; 28 Jan 2010 01:51:52 -0000\r\nX-Received: from unknown (HELO relay02.pair.com) (209.68.5.16)\n  by mta3.grp.re1.yahoo.com with SMTP; 28 Jan 2010 01:51:52 -0000\r\nX-Received: (qmail 26774 invoked from network); 28 Jan 2010 01:51:35 -0000\r\nX-Received: from 70.137.148.203 (HELO ?192.168.23.128?) (70.137.148.203)\n  by relay02.pair.com with SMTP; 28 Jan 2010 01:51:35 -0000\r\nX-pair-Authenticated: 70.137.148.203\r\nMessage-ID: &lt;4B60EDA6.7020105@...&gt;\r\nDate: Wed, 27 Jan 2010 17:51:34 -0800\r\nUser-Agent: Thunderbird 2.0.0.23 (Windows/20090812)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;hjp6eh+8ccs@...&gt;\r\nIn-Reply-To: &lt;hjp6eh+8ccs@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] Usage of QuotaEnforcer in H3\r\nX-Yahoo-Group-Post: member; u=137285340; y=LOkvOtVDhczic45xPKrEUCBmLkksJ2u9uO1F8spscRIo\r\nX-Yahoo-Profile: gojomo\r\n\r\nThe QuotaEnforcer examines the URI passed to the processor, and checks \nto see if the host/server/group(aka queue) tallies associated with it \nare over the configued quotas.\n\nIf over a quota, the QuotaEnforcer...\n- gives the URI a S_BLOCKED_BY_QUOTA (-5003) status-code\n- returns a ProcessResult.FINISH status from the Processor, causing all \nsubsequent processors in the same &#39;chain&#39; to be skipped\n- (if configured) adds a notation to the URI signalling the frontier to \n&#39;retire&#39; the associated queue -- moving out of the rotation where it \nprovides more eligible-to-crawl URIs\n\nIn H1, it would go into the processing chain *before* an attempt to \nfetch the URI -- because its design goal is to cancel all processing of \nURIs from categories that are over-quota. In H3, that would mean early \nin the &#39;fetch&#39; chain.\n\nIt should still work there as before, with the only inefficiency being \nthat URIs are enqueued even if they are destined to be ruled as over-quota.\n\nThe candidates chain is only run on discovered outlink URIs, after their \ndiscovery, before they are enqueued into the frontier. That is, \n&#39;candidates&#39; for enqueuing (that might not be). I&#39;ve just tested \nQuotaEnforcer positioned there, as in your example, and it still works \n-- though perhaps not as straightforwardly.\n\nIt&#39;s checking a not-yet-enqueued URI against the total successes so far. \nIf over-quota, that URI is assigned the negative status, which *prevents \nit from being enqueued at all*. This has several implications:\n\n(1) there will be no crawl.log-line for that URI -- it never passed \ncandidate status, was never enqueued, and so never gets a \nsuccess/failure try (and log line) of its own.\n\n(2) since the URI is never passed to the frontier for enqueuing the \n&#39;forceRetire&#39; request to the frontier has no effect.\n\n(3) a batch of candidate URIs all evaluated before the host-successes \ngoes over quota will all be enqueued (and later tried) -- even if the \nhost goes over-quota before they are all tried.\n\nI suspect this last point is what you&#39;ve seen that makes you think it&#39;s \nnot working -- whereas it is working, but only at enqueue-time, so the \ntotals are approximate rather than exact. You could move the QE to early \nin the fetch chain (or put a second instance there) for precise control.\n\nOne last note: I recommend following the example of our bundled \nconfigurations, and always declaring Processor beans as top-level, named \nbeans -- then placing them into the chains by reference. The Spring \n&#39;Lifecycle&#39; callbacks are most cleanly and reliably handled for \ntop-level named beans. (We try to pass those callbacks along to \nProcessors in the chain&#39;s lifecycle methods, but that may be more \nfragile for some components and features, like checkpointing, so I think \n&#39;all processors as top-level beans&#39; is a good rule-of-thumb.)\n\n- Gordon @ IA\n\n\nt.schoellhorn wrote:\n&gt; Hi,\n&gt; \n&gt; currently I am struggling with the usage of the QuotaEnforcer. As I understand, the QE can be used to restrict the download of to many documents per host/server.\n&gt; \n&gt; Currently I am placing the QuotaEnforcer as a bean in the candidateProcessor. But nonetheless the restrictions don&#39;t seem to get applied. Currently I am using something like this:\n&gt; \n&gt; &lt;bean id=&quot;candidateProcessors&quot; class=&quot;org.archive.modules.CandidateChain&quot;&gt;\n&gt;   &lt;property name=&quot;processors&quot;&gt;\n&gt;    &lt;list&gt;\n&gt;     &lt;!-- apply scoping rules to each individual candidate URI... --&gt;\n&gt;     &lt;ref bean=&quot;candidateScoper&quot;/&gt;\n&gt;     &lt;!-- ...then prepare those ACCEPTed for enqueuing to frontier. --&gt;\n&gt;     &lt;ref bean=&quot;preparer&quot;/&gt;\n&gt; \n&gt;     &lt;bean class=&quot;org.archive.crawler.prefetch.QuotaEnforcer&quot;&gt;\n&gt;       &lt;property name=&quot;hostMaxFetchSuccesses&quot; value=&quot;10&quot;/&gt;\n&gt;     &lt;/bean&gt;\n&gt;    &lt;/list&gt;\n&gt;   &lt;/property&gt;\n&gt;  &lt;/bean&gt;\n&gt; \n&gt; \n&gt; Are there any examples or any suggestion where I should place that enforcer?\n&gt; \n&gt; Cheers,\n&gt; Tino\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n"}}