{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":95697582,"authorName":"G.B.Reddy","from":"&quot;G.B.Reddy&quot; &lt;reddy@...&gt;","profile":"gbreddysoft","replyTo":"LIST","senderId":"XALRZPPSf9MSSVzq-MhP-j575bH4rjfGoG6fCri2u0MiMkzHEFpAgJI1Y9DeVWC7T2HJwDMAzvX_2brQ6cq0p_9H2eqqxQBiqrazKX8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: DNS and HTTP staging (was Re: [archive-crawler] Re: Web crawler work ??","postDate":"1047953974","msgId":28,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDA1NjYwMWMyZWNmNCRkMWEwOGFkMCRkNTAwYThjMEB0aWRlbHBhcmsuaXNvZnR0ZWNoaW5kaWEuY29tPg==","referencesHeader":"PDM3ZWQwMWMyZDczNCQ0ZjQ0NjliMCRkNTAwYThjMEBSZWRkeUdCPiA8MDM4MDAxYzJkN2I2JDJjMTIxZjAwJDNhZWJlZGQxQGdvam92YWlvPiA8M2ZlMDAxYzJkOWM3JGU1OGE0YTgwJGQ1MDBhOGMwQFJlZGR5R0I+IDwwMGRjMDFjMmRhMDckNjZlZTEzNjAkM2FlYmVkZDFAZ29qb3ZhaW8+IDwwNzY5MDFjMmRlODEkMTNmY2ZlOTAkZDUwMGE4YzBAdGlkZWxwYXJrLmlzb2Z0dGVjaGluZGlhLmNvbT4gPDAwOGUwMWMyZGY2ZSQzZDQ4NGJlMCQ0ZGViZWRkMUBXT1JLU1RBVElPTjIxPiA8MGVjNjAxYzJlNDA5JDBiYzYwMmMwJGQ1MDBhOGMwQHRpZGVscGFyay5pc29mdHRlY2hpbmRpYS5jb20+IDwxMTY0MDFjMmU0YzYkZmNhMjU1ZjAkZDUwMGE4YzBAdGlkZWxwYXJrLmlzb2Z0dGVjaGluZGlhLmNvbT4gPDAxYTQwMWMyZTUwMSQ5MjI3NDNkMCQ0ZGViZWRkMUBXT1JLU1RBVElPTjIxPiA8MDI0MTAxYzJlOGIyJDZhNTFlNTkwJGQ1MDBhOGMwQHRpZGVscGFyay5pc29mdHRlY2hpbmRpYS5jb20+IDwwM2RhMDFjMmVhNDUkYTNhMWFkMDAkZDUwMGE4YzBAdGlkZWxwYXJrLmlzb2Z0dGVjaGluZGlhLmNvbT4gPDAwYTEwMWMyZWNiYyQyOTZhZmY0MCQ0OGYwZWRkMUBXT1JLU1RBVElPTjIxPiA8MDU0YjAxYzJlY2MwJGRiMzQ3N2MwJGQ1MDBhOGMwQHRpZGVscGFyay5pc29mdHRlY2hpbmRpYS5jb20+IDwwMGM4MDFjMmVjZGUkY2UyZGQ0NDAkNDhmMGVkZDFAV09SS1NUQVRJT04yMT4="},"prevInTopic":27,"nextInTopic":0,"prevInTime":27,"nextInTime":29,"topicId":24,"numMessagesInTopic":5,"msgSnippet":"Gordon, Yes, as you said dnsjava creates a new udpsocket for every message. I am planning to separate out the processing logic from the socket related code and","rawEmail":"Return-Path: &lt;reddy@...&gt;\r\nX-Sender: reddy@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (EGP: mail-8_2_6_1); 18 Mar 2003 02:20:36 -0000\r\nReceived: (qmail 89704 invoked from network); 18 Mar 2003 02:20:35 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m6.grp.scd.yahoo.com with QMQP; 18 Mar 2003 02:20:35 -0000\r\nReceived: from unknown (HELO pub.isofttechindia.com) (203.199.202.17)\n  by mta1.grp.scd.yahoo.com with SMTP; 18 Mar 2003 02:20:33 -0000\r\nReceived: from ReddyGB (ReddyGB.isofttechindia.com [192.168.0.213])\n\tby pub.isofttechindia.com (8.11.0/8.11.0) with SMTP id h2I2HNi07229;\n\tTue, 18 Mar 2003 07:47:23 +0530\r\nMessage-ID: &lt;056601c2ecf4$d1a08ad0$d500a8c0@...&gt;\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nCc: &lt;wcr-team@...&gt;\r\nReferences: &lt;37ed01c2d734$4f4469b0$d500a8c0@ReddyGB&gt; &lt;038001c2d7b6$2c121f00$3aebedd1@gojovaio&gt; &lt;3fe001c2d9c7$e58a4a80$d500a8c0@ReddyGB&gt; &lt;00dc01c2da07$66ee1360$3aebedd1@gojovaio&gt; &lt;076901c2de81$13fcfe90$d500a8c0@...&gt; &lt;008e01c2df6e$3d484be0$4debedd1@WORKSTATION21&gt; &lt;0ec601c2e409$0bc602c0$d500a8c0@...&gt; &lt;116401c2e4c6$fca255f0$d500a8c0@...&gt; &lt;01a401c2e501$922743d0$4debedd1@WORKSTATION21&gt; &lt;024101c2e8b2$6a51e590$d500a8c0@...&gt; &lt;03da01c2ea45$a3a1ad00$d500a8c0@...&gt; &lt;00a101c2ecbc$296aff40$48f0edd1@WORKSTATION21&gt; &lt;054b01c2ecc0$db3477c0$d500a8c0@...&gt; &lt;00c801c2ecde$ce2dd440$48f0edd1@WORKSTATION21&gt;\r\nSubject: Re: DNS and HTTP staging (was Re: [archive-crawler] Re: Web crawler work ??\r\nDate: Tue, 18 Mar 2003 07:49:34 +0530\r\nOrganization: ISoftTech\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4920.2300\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4920.2300\r\nX-eGroups-From: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nFrom: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nReply-To: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nX-Yahoo-Group-Post: member; u=95697582\r\nX-Yahoo-Profile: gbreddysoft\r\n\r\nGordon,\n\nYes, as you said dnsjava creates a new udpsocket for every message. I am\nplanning to separate out the processing logic from the socket related code\nand give interfaces such that people can use their own transport mechanism\n(sync or async). In our case we would use the seda socket library. Moreover\nthe Lookup.java class ( a core dnsjava class) has a lot of member variables\nwhich are used to carry state between the methods. This forces one to create\ninstances of Lookup class. I would want to make the methods independent of\neach other as far as possible. These limitations have made me extract pieces\nof code from the Lookup class and use it in my DNSLookingUp class.\n\nThanks,\nReddy\n\n\n----- Original Message -----\nFrom: &quot;Gordon Mohr&quot; &lt;gojomo@...&gt;\nTo: &lt;archive-crawler@yahoogroups.com&gt;\nCc: &lt;wcr-team@...&gt;\nSent: Tuesday, March 18, 2003 5:11 AM\nSubject: Re: DNS and HTTP staging (was Re: [archive-crawler] Re: Web crawler\nwork ??\n\n\n&gt; I&#39;ll take a look.\n&gt;\n&gt; Don&#39;t feel obligated to go with Eclipse -- even though it is a\n&gt; very nice environment. Eventually we&#39;ll include versioned ant\n&gt; scripts with each module so as to support the widest possible\n&gt; choice of dev styles.\n&gt;\n&gt; Upgrading dnsjava&#39;s async capabilities looks like a good idea.\n&gt; I see it has a rudimentary async simulation via a background\n&gt; thread-per-call, and also that it uses a fresh UDP socket for every\n&gt; lookup to avoid having to do any other response-to-request mapping.\n&gt; Both of those practices seem too wasteful for us (though maybe\n&gt; the disposable UDP socket cost isn&#39;t that high; I&#39;d need to run\n&gt; tests to be sure).\n&gt;\n&gt; - Gordon\n&gt;\n&gt; ----- Original Message -----\n&gt; From: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\n&gt; To: &lt;archive-crawler@yahoogroups.com&gt;\n&gt; Cc: &lt;wcr-team@...&gt;\n&gt; Sent: Monday, March 17, 2003 12:07 PM\n&gt; Subject: Re: DNS and HTTP staging (was Re: [archive-crawler] Re: Web\ncrawler work ??\n&gt;\n&gt;\n&gt; &gt; Gordon,\n&gt; &gt;\n&gt; &gt; I have checked in the first version of the asynchronous DNS lookup stage\n&gt; &gt; (DNSLookingUp.java). I have also updated the README and the anecdote.cfg\n&gt; &gt; file accordingly.\n&gt; &gt;\n&gt; &gt; I have made my first version without any changes in the dnsjava\nlibraries.\n&gt; &gt; However, I would like to reorganize the dnsjava code to support proper\n&gt; &gt; interfaces for asynchronous queries. I can do it in the next 3 or 4\ndays.\n&gt; &gt; This would help us in the near future since it contains lot of useful\n&gt; &gt; features of a full fledged resolver. At present, my implementation\nrequires\n&gt; &gt; that the name server be configured for recursion.\n&gt; &gt;\n&gt; &gt; At present, the code just prints the received DNS replies and errors.\nThe\n&gt; &gt; results/errors are not set into the CrawlURI object yet.\n&gt; &gt;\n&gt; &gt; Please note that I have not yet updated the .project and .classpath\nfiles. I\n&gt; &gt; am yet to switch to eclipse.\n&gt; &gt;\n&gt; &gt; Thanks,\n&gt; &gt; Reddy\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ----- Original Message -----\n&gt; &gt; From: &quot;Gordon Mohr&quot; &lt;gojomo@...&gt;\n&gt; &gt; To: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\n&gt; &gt; Cc: &lt;wcr-team@...&gt;\n&gt; &gt; Sent: Tuesday, March 18, 2003 1:03 AM\n&gt; &gt; Subject: Re: DNS and HTTP staging (was Re: [archive-crawler] Re: Web\ncrawler\n&gt; &gt; work ??\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; &gt; Great -- I look forward to seeing your design in more detail.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Feel free to check it into the &#39;Anecdote&#39; module -- for now,\n&gt; &gt; &gt; that&#39;s a scratch/prototyping area we can put the first working\n&gt; &gt; &gt; versions of things. Perhaps the package could be org.archive.util.dns\n&gt; &gt; &gt; or org.archive.seda.dns?\n&gt; &gt; &gt;\n&gt; &gt; &gt; I expect that when the system is a bit more stable and evolved, we&#39;ll\n&gt; &gt; &gt; move it to a new CVS module (and perhaps package structure).\n&gt; &gt; &gt;\n&gt; &gt; &gt; - Gordon\n&gt; &gt; &gt;\n&gt; &gt; &gt; ----- Original Message -----\n&gt; &gt; &gt; From: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\n&gt; &gt; &gt; To: &quot;Gordon Mohr&quot; &lt;gojomo@...&gt;\n&gt; &gt; &gt; Cc: &lt;wcr-team@...&gt;\n&gt; &gt; &gt; Sent: Friday, March 14, 2003 8:20 AM\n&gt; &gt; &gt; Subject: Re: DNS and HTTP staging (was Re: [archive-crawler] Re: Web\n&gt; &gt; crawler work ??\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Gordon,\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; I have made certain modifications to the dnsjava code to remove the\n&gt; &gt; tight\n&gt; &gt; &gt; &gt; coupling between the caching and the dns reply message processing. I\n&gt; &gt; would\n&gt; &gt; &gt; &gt; complete this and checkin on Monday.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; -Reddy\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; ----- Original Message -----\n&gt; &gt; &gt; &gt; From: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\n&gt; &gt; &gt; &gt; To: &quot;Gordon Mohr&quot; &lt;gojomo@...&gt;;\n&gt; &gt; &lt;archive-crawler@yahoogroups.com&gt;\n&gt; &gt; &gt; &gt; Cc: &lt;wcr-team@...&gt;\n&gt; &gt; &gt; &gt; Sent: Wednesday, March 12, 2003 9:44 PM\n&gt; &gt; &gt; &gt; Subject: Re: DNS and HTTP staging (was Re: [archive-crawler] Re: Web\n&gt; &gt; crawler\n&gt; &gt; &gt; &gt; work ??\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Gordon,\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; I am done with the asynchronous DNS code. I shall test it more\n&gt; &gt; tomorrow\n&gt; &gt; &gt; &gt; and\n&gt; &gt; &gt; &gt; &gt; checkin. I may start using the caching mechanism present in the\n&gt; &gt; dnsjava\n&gt; &gt; &gt; &gt; &gt; libraries. They seem to be a bit tightly bound with the response\n&gt; &gt; &gt; &gt; processing\n&gt; &gt; &gt; &gt; &gt; code which I am using.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; The CrawlURI object as of now contains only the uri string. I\nwould\n&gt; &gt; need\n&gt; &gt; &gt; &gt; &gt; variables for setting the ipaddress and other state to indicate\nlookup\n&gt; &gt; &gt; &gt; &gt; failures. Please let me know if you have any versions over it.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; &gt; &gt; &gt; Reddy\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; ----- Original Message -----\n&gt; &gt; &gt; &gt; &gt; From: &quot;Gordon Mohr&quot; &lt;gojomo@...&gt;\n&gt; &gt; &gt; &gt; &gt; To: &lt;archive-crawler@yahoogroups.com&gt;\n&gt; &gt; &gt; &gt; &gt; Cc: &lt;wcr-team@...&gt;\n&gt; &gt; &gt; &gt; &gt; Sent: Saturday, March 08, 2003 5:00 AM\n&gt; &gt; &gt; &gt; &gt; Subject: DNS and HTTP staging (was Re: [archive-crawler] Re: Web\n&gt; &gt; crawler\n&gt; &gt; &gt; &gt; &gt; work ??\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; These are good decompositions of the steps involved, and the\nLGPL\n&gt; &gt; &gt; &gt; dnsjava\n&gt; &gt; &gt; &gt; &gt; &gt; library looks very useful for our needs.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; My tendency would be to think fewer stages are better -- and\nwhen\n&gt; &gt; &gt; &gt; &gt; &gt; communicating between our stages, rather than using a shared\n&gt; &gt; RequestMap,\n&gt; &gt; &gt; &gt; &gt; &gt; include on the requesting event whatever context will be needed\nto\n&gt; &gt; deal\n&gt; &gt; &gt; &gt; &gt; &gt; with the response when it arrives.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; You can see this technique used in the ostore.network.ADns class\nI\n&gt; &gt; &gt; &gt; &gt; referenced\n&gt; &gt; &gt; &gt; &gt; &gt; yesterday -- the user_data object lets any client of the ADns\nstage\n&gt; &gt; &gt; &gt; &gt; recover\n&gt; &gt; &gt; &gt; &gt; &gt; the state it needs to deal with ADns&#39;s eventual response. (We\nmay\n&gt; &gt; still\n&gt; &gt; &gt; &gt; &gt; need\n&gt; &gt; &gt; &gt; &gt; &gt; the equivalent of a RequestMap to deal with mapping UDP response\n&gt; &gt; packets\n&gt; &gt; &gt; &gt; &gt; to\n&gt; &gt; &gt; &gt; &gt; &gt; the lookups that triggered them -- but that&#39;d then be a map that\ncan\n&gt; &gt; be\n&gt; &gt; &gt; &gt; &gt; private\n&gt; &gt; &gt; &gt; &gt; &gt; to a single stage.)\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Nothing in the DNS procedure needs to block -- once you assume\n&gt; &gt; &gt; &gt; &gt; asynchronous\n&gt; &gt; &gt; &gt; &gt; &gt; UDP replies and an in-RAM response cache -- and thus one thread\n&gt; &gt; should\n&gt; &gt; &gt; &gt; be\n&gt; &gt; &gt; &gt; &gt; &gt; as good as (in fact better than) N threads.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Similarly, I don&#39;t think more than 1 UDP socket will be\nnecessary\n&gt; &gt; for\n&gt; &gt; &gt; &gt; &gt; &gt; all DNS lookups, because as a practical matter, 1 open UDP\nsocket\n&gt; &gt; will\n&gt; &gt; &gt; &gt; &gt; &gt; never be &quot;busy&quot; in a way that additional UDP sockets would help.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; --\n&gt; &gt; &gt; &gt; &gt; &gt; Regarding 404 and other explicit HTTP app errors: these should\nbe\n&gt; &gt; &gt; &gt; recorded\n&gt; &gt; &gt; &gt; &gt; &gt; into the CrawlURI, and forwarded to the next processing stage,\njust\n&gt; &gt; as\n&gt; &gt; &gt; &gt; &gt; &gt; with successes.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Redirects are a special case we haven&#39;t discussed much yet; they\n&gt; &gt; would\n&gt; &gt; &gt; &gt; &gt; seem\n&gt; &gt; &gt; &gt; &gt; &gt; candidates for some sort of expedited fetching. I think, though,\n&gt; &gt; such\n&gt; &gt; &gt; &gt; &gt; &gt; expedited activity must pass through the full cycle of stages\nfor\n&gt; &gt; &gt; &gt; &gt; &gt; proper logging and policy application. (In contrast, retries in\nthe\n&gt; &gt; face\n&gt; &gt; &gt; &gt; &gt; &gt; of transient errors, which may, at least in some cases, be fed\n&gt; &gt; &gt; &gt; immediately\n&gt; &gt; &gt; &gt; &gt; &gt; back to the Fetching or Preprocessing stages.)\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; --\n&gt; &gt; &gt; &gt; &gt; &gt; The issue of timeouts (esp. in HTTP) is thorny. From what I hear\n&gt; &gt; about\n&gt; &gt; &gt; &gt; &gt; &gt; crawler traps, we need to not only to be able to deal with\nhangs,\n&gt; &gt; but\n&gt; &gt; &gt; &gt; &gt; &gt; also various infinite-length trickles.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; If any of the HTTP-transactions-in-progress is not making\nsufficient\n&gt; &gt; &gt; &gt; &gt; &gt; progress, according to some set of progress-per-time-unit\n&gt; &gt; thresholds,\n&gt; &gt; &gt; &gt; &gt; &gt; we have to be ready to give up on it. We should mark it as an\nerror,\n&gt; &gt; &gt; &gt; &gt; &gt; but probably retain any partial info we did get for later\nanalysis.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Separating this out into its own stage increases synchronization\n&gt; &gt; issues.\n&gt; &gt; &gt; &gt; &gt; &gt; If timeout analysis can instead be part of the same\nsingle-threaded\n&gt; &gt; &gt; &gt; stage\n&gt; &gt; &gt; &gt; &gt; &gt; where HTTP some-progress-made events (from sockets) are handled,\nI\n&gt; &gt; think\n&gt; &gt; &gt; &gt; &gt; &gt; it can be handled very efficiently:\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;    - keep all outstanding transactions on a linked-list\n&gt; &gt; &gt; &gt; &gt; &gt;    - whenever progress is reported (from the socket),\n&gt; &gt; &gt; &gt; &gt; &gt;      and that progress keeps the transaction above\n&gt; &gt; &gt; &gt; &gt; &gt;      acceptable thresholds, move that transaction to\n&gt; &gt; &gt; &gt; &gt; &gt;      the head of the list\n&gt; &gt; &gt; &gt; &gt; &gt;    - check the tail of the list occasionally to see\n&gt; &gt; &gt; &gt; &gt; &gt;      if the worst transactions need to be cut\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; That &quot;occasional&quot; check could mostly occur as part of normal\n&gt; &gt; &gt; &gt; &gt; &gt; progress-packet processing; an extremely infrequent timer could\n&gt; &gt; &gt; &gt; &gt; &gt; trigger reevaluation in the rare case where all progress on all\n&gt; &gt; &gt; &gt; &gt; &gt; sockets has stopped...\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; - Gordon\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; ----- Original Message -----\n&gt; &gt; &gt; &gt; &gt; &gt; From: G.B.Reddy\n&gt; &gt; &gt; &gt; &gt; &gt; To: archive-crawler@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt; Cc: wcr-team@...\n&gt; &gt; &gt; &gt; &gt; &gt; Sent: Friday, March 07, 2003 8:31 AM\n&gt; &gt; &gt; &gt; &gt; &gt; Subject: Re: [archive-crawler] Re: Web crawler work ??\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; More insight on the DNS stages.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; As stated in the design earlier, &quot;DNS Querying Stage&quot;, &quot;DNS\nResponse\n&gt; &gt; &gt; &gt; &gt; Processing Stage&quot; and &quot;Timeout and Retry Handling Stage&quot;\n&gt; &gt; &gt; &gt; &gt; &gt; access/update the shared RequestMap. So, they need to be\n&gt; &gt; synchronized.\n&gt; &gt; &gt; &gt; We\n&gt; &gt; &gt; &gt; &gt; were just thinking whether these need to be three separate\n&gt; &gt; &gt; &gt; &gt; &gt; stages or could it be one stage multiplexing each of those\nincoming\n&gt; &gt; &gt; &gt; event\n&gt; &gt; &gt; &gt; &gt; types. The pros and cons of them are as below.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Single stage benefit / Multi Stage Issue :\n&gt; &gt; &gt; &gt; &gt; &gt; - If it is single stage, then synchronization is not done across\n&gt; &gt; stages.\n&gt; &gt; &gt; &gt; &gt; Even though, synchronization anyway would be needed\n&gt; &gt; &gt; &gt; &gt; &gt; internally in case of single stage, conceptually it looks neater\nnot\n&gt; &gt; to\n&gt; &gt; &gt; &gt; &gt; synchronize across stages.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Single stage issue / Multi Stage benefit :\n&gt; &gt; &gt; &gt; &gt; &gt; - In case of single stage, the event queue would be one and this\n&gt; &gt; fact\n&gt; &gt; &gt; &gt; &gt; pulls our legs when we want to handle overload conditions.\n&gt; &gt; &gt; &gt; &gt; &gt; Since there is no clear count of the distinct elements in the\nqueue,\n&gt; &gt; it\n&gt; &gt; &gt; &gt; &gt; becomes difficult to analyse and condition the system\n&gt; &gt; &gt; &gt; &gt; &gt; accordingly. Whereas, in multi stage, each one having its own\nqueue,\n&gt; &gt; &gt; &gt; &gt; conditioning/prioritizating becomes easy.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; I think we would end up going in for multi stage, unless SEDA\ncould\n&gt; &gt; take\n&gt; &gt; &gt; &gt; &gt; care of it by itself.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; And in case of parallel stages, like the ones in post\nprocessing, I\n&gt; &gt; &gt; &gt; think\n&gt; &gt; &gt; &gt; &gt; most often, synchronization across them may be\n&gt; &gt; &gt; &gt; &gt; &gt; unavoidable.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; &gt; &gt; &gt; &gt; Reddy\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; ----- Original Message -----\n&gt; &gt; &gt; &gt; &gt; &gt; From: G.B.Reddy\n&gt; &gt; &gt; &gt; &gt; &gt; To: archive-crawler@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt; Cc: wcr-team@...\n&gt; &gt; &gt; &gt; &gt; &gt; Sent: Thursday, March 06, 2003 11:21 PM\n&gt; &gt; &gt; &gt; &gt; &gt; Subject: Re: [archive-crawler] Re: Web crawler work ??\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Gordon and Raymie,\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Below are the various stages and their design with the issues\n&gt; &gt; involved\n&gt; &gt; &gt; &gt; in\n&gt; &gt; &gt; &gt; &gt; the DNS Resolver and HTTP Client implementation.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; DNS History/Cache Handling Stage :\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Overview:\n&gt; &gt; &gt; &gt; &gt; &gt; - Maintains successful lookups in cache.\n&gt; &gt; &gt; &gt; &gt; &gt; - Does negative caching.\n&gt; &gt; &gt; &gt; &gt; &gt; - Times itself to clean the expired entries based on TTL. (Would\nuse\n&gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; ssTimer SEDA APIs to schedule itself periodically)\n&gt; &gt; &gt; &gt; &gt; &gt; - This stage would be dummy or could be skipped as of now since\nwe\n&gt; &gt; want\n&gt; &gt; &gt; &gt; to\n&gt; &gt; &gt; &gt; &gt; do caching later.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Events:\n&gt; &gt; &gt; &gt; &gt; &gt; - Two types of events : DNSCacheLookupEvent,\nDNSCacheUpdateEvent.\n&gt; &gt; &gt; &gt; &gt; &gt; - DNSCacheLookupEvent : If entry is found in cache, the\nipaddress is\n&gt; &gt; set\n&gt; &gt; &gt; &gt; &gt; in the CrawlURI object and is enqueued into the &quot;Page\n&gt; &gt; &gt; &gt; &gt; &gt; Requesting Stage&quot;. Else, it is enqueued into the &quot;DNS Querying\n&gt; &gt; Stage&quot;.\n&gt; &gt; &gt; &gt; &gt; &gt; - DNSCacheUpdateEvent : This event is published by the &quot;DNS\nResponse\n&gt; &gt; &gt; &gt; &gt; Processing Stage&quot; every after successful/failed lookup inorder\n&gt; &gt; &gt; &gt; &gt; &gt; to update the cache.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Other notes:\n&gt; &gt; &gt; &gt; &gt; &gt; - This stage could be single threaded else lot of\nsynchronization\n&gt; &gt; might\n&gt; &gt; &gt; &gt; be\n&gt; &gt; &gt; &gt; &gt; needed.\n&gt; &gt; &gt; &gt; &gt; &gt; - Resubmitting events on queue full exceptions while enqueuing\ninto\n&gt; &gt; this\n&gt; &gt; &gt; &gt; &gt; stage&#39;s queue should be handled by the caller by scheduling\n&gt; &gt; &gt; &gt; &gt; &gt; it in future.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; DNS Querying Stage :\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Overview:\n&gt; &gt; &gt; &gt; &gt; &gt; - Sends the actual DNS ARecord query packets to the DNS Server.\n(The\n&gt; &gt; &gt; &gt; &gt; response packets are processed in a later stage)\n&gt; &gt; &gt; &gt; &gt; &gt; - Maintains a pool of DatagramSocket objects.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Events:\n&gt; &gt; &gt; &gt; &gt; &gt; - SendDNSQueryEvent : This is published by the &quot;DNS\nHistory/Cache\n&gt; &gt; &gt; &gt; Handling\n&gt; &gt; &gt; &gt; &gt; Stage&quot; when cache miss happens. The DNS query is formed\n&gt; &gt; &gt; &gt; &gt; &gt; and sent out. The response handling sink is set as the &quot;DNS\nResponse\n&gt; &gt; &gt; &gt; &gt; Processing Stage&quot;.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Implementation:\n&gt; &gt; &gt; &gt; &gt; &gt; - A pool of DatagramSockets of a configurable maximum size is\n&gt; &gt; &gt; &gt; maintained.\n&gt; &gt; &gt; &gt; &gt; It will be filled incrementally. All these datagram\n&gt; &gt; &gt; &gt; &gt; &gt; sockets will be registered to the selector maintained by the\nSEDA\n&gt; &gt; &gt; &gt; &gt; internals. It would be ideal if this pool gets shrunk or expanded\n&gt; &gt; &gt; &gt; &gt; &gt; based on the requirement. If it is not shrunk back, then it is\nan\n&gt; &gt; &gt; &gt; &gt; unnecessary overhead on the selector. The reason behind having a\n&gt; &gt; &gt; &gt; &gt; &gt; pool is to restrict the number of ports the selector has to\nlisten\n&gt; &gt; upon\n&gt; &gt; &gt; &gt; &gt; and also not to create individual DatagramSocket objects for\n&gt; &gt; &gt; &gt; &gt; &gt; every query. Can this logic of bounded pool, be implemented as a\n&gt; &gt; &gt; &gt; &gt; Controller in the SEDA framework (just like the\n&gt; &gt; &gt; &gt; &gt; &gt; ThreadPoolController) is an open question.\n&gt; &gt; &gt; &gt; &gt; &gt; - When an event comes in, a free datagram socket in the pool\nwill be\n&gt; &gt; &gt; &gt; &gt; utilized for sending the message. If all sockets are engaged,\n&gt; &gt; &gt; &gt; &gt; &gt; the incoming event should be postponed to reenter again after a\n&gt; &gt; period\n&gt; &gt; &gt; &gt; of\n&gt; &gt; &gt; &gt; &gt; time.\n&gt; &gt; &gt; &gt; &gt; &gt; - This stage additionally has also to maintain the list of\nmessages\n&gt; &gt; sent\n&gt; &gt; &gt; &gt; &gt; out, their IDs and the request timestamps. Let us call this\n&gt; &gt; &gt; &gt; &gt; &gt; &quot;RequestMap&quot; for future reference. The ID is the integer,\ndescribed\n&gt; &gt; in\n&gt; &gt; &gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; RFC DNS message format, used to map the\n&gt; &gt; &gt; &gt; &gt; &gt; request-responses. The request timestamp will be made use of in\n&gt; &gt; query\n&gt; &gt; &gt; &gt; &gt; timeout handling (discussed later).\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Parameters to this stage :\n&gt; &gt; &gt; &gt; &gt; &gt; - The DNS server hostname/ipaddress. If this is not given, then\nthe\n&gt; &gt; &gt; &gt; &gt; /etc/resolve.conf will be parsed to get the name server (only\n&gt; &gt; &gt; &gt; &gt; &gt; the primary would be taken as of now.). As a next step we will\nhave\n&gt; &gt; to\n&gt; &gt; &gt; &gt; &gt; build a round-robin way of querying the various name servers\n&gt; &gt; &gt; &gt; &gt; &gt; in resolve.conf, inorder to be polite with them.\n&gt; &gt; &gt; &gt; &gt; &gt; - If resolve.conf is not present, the local host will be assumed\nas\n&gt; &gt; the\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; name server.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; DNS Response Processing Stage :\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Overview:\n&gt; &gt; &gt; &gt; &gt; &gt; - Processes DNS responses.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Implementation:\n&gt; &gt; &gt; &gt; &gt; &gt; - When the DNS datagram packets are received, the ID field in\nthe\n&gt; &gt; header\n&gt; &gt; &gt; &gt; &gt; should be used to match the corresponding request packet.\n&gt; &gt; &gt; &gt; &gt; &gt; - Check for timeouts, and discard it if it had timed out; else,\nset\n&gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; ipaddress/canonical name in the CrawlURI object and enqueue\n&gt; &gt; &gt; &gt; &gt; &gt; it to the &quot;Page Requesting Stage&quot;. In addition, enqueue an event\n&gt; &gt; into\n&gt; &gt; &gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; &quot;DNS Cache Handling Stage&quot; for it to update its cache. Do\n&gt; &gt; &gt; &gt; &gt; &gt; the same, even on DNS Errors like &quot;Name not found authoritative\n&gt; &gt; error&quot;.\n&gt; &gt; &gt; &gt; &gt; &gt; - The request entry in the RequestMap (maintained for timeout\n&gt; &gt; handling)\n&gt; &gt; &gt; &gt; &gt; should be removed. This map, being shared across stages,\n&gt; &gt; &gt; &gt; &gt; &gt; should be synchronized.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; HTTP Page Requesting Stage :\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Overview:\n&gt; &gt; &gt; &gt; &gt; &gt; - Connects to host and sends GET requests for pages.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Events:\n&gt; &gt; &gt; &gt; &gt; &gt; - Handles two types of events - StartFetchEvent and\n&gt; &gt; &gt; &gt; &gt; ConnectionCompleteEvent.\n&gt; &gt; &gt; &gt; &gt; &gt; - The StartFetchEvent will make a TCP connect request to the\nhost.\n&gt; &gt; While\n&gt; &gt; &gt; &gt; &gt; doing so, we will register the current stage itself to\n&gt; &gt; &gt; &gt; &gt; &gt; receive back the ConnectionComplete events. Once we receive this\n&gt; &gt; &gt; &gt; &gt; ConnectionCompleteEvent, we should send a HTTP GET request to the\n&gt; &gt; &gt; &gt; &gt; &gt; page. The response handling sink is set as the &quot;HTTP Response\n&gt; &gt; Processing\n&gt; &gt; &gt; &gt; &gt; Stage&quot;. Write failures should be handled.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; HTTP Response Processing Stage :\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Overview:\n&gt; &gt; &gt; &gt; &gt; &gt; - Processes downloaded pages.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Implementation:\n&gt; &gt; &gt; &gt; &gt; &gt; - Check for timeouts, and discard it if it had timed out; else,\nread\n&gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; packets.\n&gt; &gt; &gt; &gt; &gt; &gt; - Once the response is completely read, the request entry in the\n&gt; &gt; &gt; &gt; &gt; RequestMap (maintained for timeout handling) should be removed.\n&gt; &gt; &gt; &gt; &gt; &gt; - One issue here is when we are reading lengthy HTML pages, we\nmight\n&gt; &gt; &gt; &gt; &gt; receive half of the page and it might stop after that. So,\n&gt; &gt; &gt; &gt; &gt; &gt; essentially the timeout should be applied between chunks of\n&gt; &gt; reception.\n&gt; &gt; &gt; &gt; &gt; &gt; - Where should the errors like &quot;404 Not Found&quot;, etc be\npropogated\n&gt; &gt; ???\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Timeout and Retry Handling Stage :\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Overview:\n&gt; &gt; &gt; &gt; &gt; &gt; This is a single threaded stage which enumerates through the\n&gt; &gt; RequestMap\n&gt; &gt; &gt; &gt; &gt; and checks for timeouts. The timed out CrawlURIs will be\n&gt; &gt; &gt; &gt; &gt; &gt; retried until retry count exhausts. This stage will be\nself-timed\n&gt; &gt; &gt; &gt; &gt; periodically using the SEDA ssTimer APIs.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Other Notes:\n&gt; &gt; &gt; &gt; &gt; &gt; This timeout handling is a common stuff between the DNS requests\nand\n&gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; HTTP requests.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Parameters to this stage:\n&gt; &gt; &gt; &gt; &gt; &gt; - DNS timeout value.\n&gt; &gt; &gt; &gt; &gt; &gt; - HTTP timeout value.\n&gt; &gt; &gt; &gt; &gt; &gt; - DNS retry count.\n&gt; &gt; &gt; &gt; &gt; &gt; - HTTP retry count. ( This would be 1 ).\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; One other thing that could be done is that, the events by\nthemselves\n&gt; &gt; &gt; &gt; will\n&gt; &gt; &gt; &gt; &gt; contain information as to which next stage the output has\n&gt; &gt; &gt; &gt; &gt; &gt; to traverse. This will be flexible and no hardcoding is needed.\n&gt; &gt; &gt; &gt; &gt; Especially, in making this non-blocking DNS library an\nopen-source,\n&gt; &gt; &gt; &gt; &gt; &gt; it would come handy. Moreover, many users might not want it to\nbe\n&gt; &gt; over\n&gt; &gt; &gt; &gt; &gt; SEDA. So, we will have to give other interfaces as well.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; I am presently using the library classes given by dnsjava-1.3.2.\n(\n&gt; &gt; &gt; &gt; &gt; http://sourceforge.net/projects/dnsjava/ ). This is an LGPL java\n&gt; &gt; &gt; &gt; &gt; &gt; based synchronous implementation of DNS Resolver. I only make\nuse of\n&gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; classes which encapsulate the formation of request packets,\n&gt; &gt; &gt; &gt; &gt; &gt; parses response packets and the various ResourceRecord classes.\nThis\n&gt; &gt; &gt; &gt; &gt; library is being used by Java Apache Mail Enterprise Server (\n&gt; &gt; &gt; &gt; &gt; &gt; http://james.apache.org/ ). So, it should be pretty reliable and\n&gt; &gt; tested.\n&gt; &gt; &gt; &gt; &gt; Moreover it has support for IPv6, compression and security\n&gt; &gt; &gt; &gt; &gt; &gt; which we can make use of later.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; &gt; &gt; &gt; &gt; Reddy\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; ----- Original Message -----\n&gt; &gt; &gt; &gt; &gt; &gt; From: Gordon Mohr\n&gt; &gt; &gt; &gt; &gt; &gt; To: archive-crawler@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt; Cc: Raymie Stata ; wcr-team@...\n&gt; &gt; &gt; &gt; &gt; &gt; Sent: Saturday, March 01, 2003 2:43 AM\n&gt; &gt; &gt; &gt; &gt; &gt; Subject: Re: [archive-crawler] Re: Web crawler work ??\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Sounds like a reasonable plan.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; By &quot;local name server&quot; do you mean something *very* local -- for\n&gt; &gt; &gt; &gt; example,\n&gt; &gt; &gt; &gt; &gt; &gt; a standard nameserver we run on the same machine?\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; That would seem to offer other benefits -- such as minimizing\nthe\n&gt; &gt; modes\n&gt; &gt; &gt; &gt; &gt; &gt; of DNS lookup we have to do and offloading caching to another\npiece\n&gt; &gt; of\n&gt; &gt; &gt; &gt; &gt; &gt; software (at least at first).\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; - Gordon\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; ----- Original Message -----\n&gt; &gt; &gt; &gt; &gt; &gt; From: G.B.Reddy\n&gt; &gt; &gt; &gt; &gt; &gt; To: archive-crawler@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt; Cc: Raymie Stata ; wcr-team@...\n&gt; &gt; &gt; &gt; &gt; &gt; Sent: Thursday, February 27, 2003 8:55 AM\n&gt; &gt; &gt; &gt; &gt; &gt; Subject: Re: [archive-crawler] Re: Web crawler work ??\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Gordon and Raymie,\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Here goes the proposal for the asynchronous DNS lookup API\n&gt; &gt; &gt; &gt; implementation.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; We shall implement a minimal resolver which is capable of\nsending\n&gt; &gt; DNS\n&gt; &gt; &gt; &gt; &gt; request packets and processing response packets in an\n&gt; &gt; &gt; &gt; &gt; &gt; asynchrounous nio fashion. This resolver class will contact a\nlocal\n&gt; &gt; name\n&gt; &gt; &gt; &gt; &gt; server and rely on it to do the actual lookup. The local\n&gt; &gt; &gt; &gt; &gt; &gt; name server will be configured to support recursion and better\nwould\n&gt; &gt; be\n&gt; &gt; &gt; &gt; to\n&gt; &gt; &gt; &gt; &gt; use a name server which does lookup asynchronously. (\n&gt; &gt; &gt; &gt; &gt; &gt; SQUID has asynchronous DNS lookup facilities ).  Even if the\nlocal\n&gt; &gt; name\n&gt; &gt; &gt; &gt; &gt; server is not asynchrounous, our java resolver being\n&gt; &gt; &gt; &gt; &gt; &gt; asynchronous will be good enough since our primary goal is that\nwe\n&gt; &gt; do\n&gt; &gt; &gt; &gt; not\n&gt; &gt; &gt; &gt; &gt; want any blocking code in our crawler implementation. This\n&gt; &gt; &gt; &gt; &gt; &gt; idea even sounds good considering the fact we would only\nreinvent\n&gt; &gt; the\n&gt; &gt; &gt; &gt; same\n&gt; &gt; &gt; &gt; &gt; wheel if we opt to implement a complete full-fledged\n&gt; &gt; &gt; &gt; &gt; &gt; resolver implementation which complies with the RFC 1035 and\n1034.\n&gt; &gt; We\n&gt; &gt; &gt; &gt; can\n&gt; &gt; &gt; &gt; &gt; definitely implement this full-fledged resolver but the\n&gt; &gt; &gt; &gt; &gt; &gt; real concern is that this would require a lot of testing and the\n&gt; &gt; efforts\n&gt; &gt; &gt; &gt; &gt; to make it rock solid in terms of robustness would be huge.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; So, the various jobs that we would have to do to build our\nSimple\n&gt; &gt; &gt; &gt; &gt; Asynchronous DNS lookup API would be\n&gt; &gt; &gt; &gt; &gt; &gt;     -- Request packet formation and reply packet parsing in the\n&gt; &gt; exact\n&gt; &gt; &gt; &gt; RFC\n&gt; &gt; &gt; &gt; &gt; format.\n&gt; &gt; &gt; &gt; &gt; &gt;     -- Use non-blocking IO APIs and do UDP. (We might not need\nTCP\n&gt; &gt; since\n&gt; &gt; &gt; &gt; &gt; the name server is only in the local network.)\n&gt; &gt; &gt; &gt; &gt; &gt;     -- Do canonical name queries and A record queries.\n&gt; &gt; &gt; &gt; &gt; &gt;     -- Implement timeouts.\n&gt; &gt; &gt; &gt; &gt; &gt;     -- Implement caching based on TTL. ( This may have to be\n&gt; &gt; deferred as\n&gt; &gt; &gt; &gt; &gt; pointed by Raymie earlier. )\n&gt; &gt; &gt; &gt; &gt; &gt;     -- Integrate with SEDA.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; &gt; &gt; &gt; &gt; Reddy\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; ----- Original Message -----\n&gt; &gt; &gt; &gt; &gt; &gt; From: Gordon Mohr\n&gt; &gt; &gt; &gt; &gt; &gt; To: G.B.Reddy\n&gt; &gt; &gt; &gt; &gt; &gt; Cc: Raymie Stata ; wcr-team@... ;\n&gt; &gt; &gt; &gt; &gt; archive-crawler@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt; Sent: Saturday, February 22, 2003 5:37 AM\n&gt; &gt; &gt; &gt; &gt; &gt; Subject: [archive-crawler] Re: Web crawler work ??\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; [CC&#39;ing to archive-crawler@yahoogroups.com]\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Reddy writes:\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; On the first cut do we need to look at implementing an\n&gt; &gt; asynchronous\n&gt; &gt; &gt; &gt; DNS\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; lookup mechanism. If we are not, then it is going to be two\n&gt; &gt; stages,\n&gt; &gt; &gt; &gt; viz.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; DNSCacheHandlingStage and ResolvingStage, that can be employed\n&gt; &gt; using\n&gt; &gt; &gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; blocking DNS lookup calls in Java. The first stage,\n&gt; &gt; &gt; &gt; &gt; DNSCacheHandlingStage,\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; would check if the entry is available in the cache. If\navailable,\n&gt; &gt; he\n&gt; &gt; &gt; &gt; &gt; would\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; set the resolved address in the CrawlURI object and enqueue it\nto\n&gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; appropriate next stage. If the cache doesn&#39;t contain the\nentry,\n&gt; &gt; then\n&gt; &gt; &gt; &gt; he\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; would pass the request to the Resolving stage which would call\nthe\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; InetAddress.getByName blocking method to resolve it. The\ngetByName\n&gt; &gt; &gt; &gt; &gt; result\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; would be set in the CrawlURI object as before and enqueued\ninto\n&gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; appropriate next stage. In addition to this, the Resolving\nstage\n&gt; &gt; will\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; enqueue another event into the DNSCacheHandlingStage to enable\nhim\n&gt; &gt; &gt; &gt; &gt; update\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; his cache. So, the DNSCacheHandlingStage would be handling two\n&gt; &gt; types\n&gt; &gt; &gt; &gt; of\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; events, one is the lookup events and the other is the update\ncache\n&gt; &gt; &gt; &gt; &gt; events.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; One problem here is that the InetAddress class does not expose\nits\n&gt; &gt; &gt; &gt; cache\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; variables to its users. Even we cannot check if the cache has\nan\n&gt; &gt; entry\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; before calling the getByName method. So, we should be\ndisabling\n&gt; &gt; the\n&gt; &gt; &gt; &gt; java\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; cache ( using the policy file ) and implementing our own\ncaching\n&gt; &gt; &gt; &gt; &gt; mechanism.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; ( The DNSCacheHandlingStage would have to additionally do the\njob\n&gt; &gt; of\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; throwing away the expired entries in the cache also.)\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; Let me know your comments on this.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; This looks like a good first cut. I&#39;m still working to improve\nmy\n&gt; &gt; &gt; &gt; &gt; &gt; understanding of the best way to use the staged style, mostly by\n&gt; &gt; &gt; &gt; &gt; &gt; looking at their HTTP and HTTP Server (Haboob) code.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; It seems that they&#39;ve tended to use a single Stage object to do\n&gt; &gt; &gt; &gt; &gt; &gt; many different steps/aspects of one process, by switching on the\n&gt; &gt; &gt; &gt; &gt; &gt; type of QueueElement received.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; So for example their\nseda.sandStorm.seda.apps.Haboob.http.HttpRecv\n&gt; &gt; &gt; &gt; &gt; &gt; accepts events of types....\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;   - httpConnection\n&gt; &gt; &gt; &gt; &gt; &gt;   - httpRequest\n&gt; &gt; &gt; &gt; &gt; &gt;   - SinkClosedEvent\n&gt; &gt; &gt; &gt; &gt; &gt;   - timerEvent\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; And their seda.sandStorm.lib.http.httpServer accepts events of\n&gt; &gt; &gt; &gt; &gt; &gt; types...\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;   - ATcpInPacket\n&gt; &gt; &gt; &gt; &gt; &gt;   - ATcpConnection\n&gt; &gt; &gt; &gt; &gt; &gt;   - aSocketErrorEvent\n&gt; &gt; &gt; &gt; &gt; &gt;   - SinkDrainedEvent\n&gt; &gt; &gt; &gt; &gt; &gt;   - SinkCloggedEvent\n&gt; &gt; &gt; &gt; &gt; &gt;   - SinkClosedEvent\n&gt; &gt; &gt; &gt; &gt; &gt;   - ATcpListenSuccessEvent\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; They also use Sinks that are not associated with stages; rather,\n&gt; &gt; &gt; &gt; &gt; &gt; they interface to unstaged components which nonetheless result\nin\n&gt; &gt; &gt; &gt; &gt; &gt; an eventual event to some supplied answer Sink. See for example\n&gt; &gt; &gt; &gt; &gt; &gt; seda.sandStorm.lib.http.httpConnection.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; So perhaps as a matter of grouping related tasks, the same Stage\n&gt; &gt; object\n&gt; &gt; &gt; &gt; &gt; &gt; should be re-entered over the course of a lookup, with different\n&gt; &gt; &gt; &gt; &gt; triggering\n&gt; &gt; &gt; &gt; &gt; &gt; events. For example, you might want to reenter a single\n&gt; &gt; &gt; &gt; DNSResolvingStage\n&gt; &gt; &gt; &gt; &gt; &gt; over the course of cache lookup, lookup-initiation,\nresult-receiving\n&gt; &gt; (or\n&gt; &gt; &gt; &gt; &gt; &gt; timeout), etc. I&#39;m not sure; use your judgement as to how many\n&gt; &gt; stages\n&gt; &gt; &gt; &gt; are\n&gt; &gt; &gt; &gt; &gt; &gt; really needed.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; P.S : We found some openly available async dns client APIs in\nC\n&gt; &gt; &gt; &gt; &gt; language.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; That could be useful as a model. (I doubt we&#39;d want to call out\nto C\n&gt; &gt; &gt; &gt; &gt; &gt; for this simple step, though -- and if we nailed down a truly\nasync\n&gt; &gt; Java\n&gt; &gt; &gt; &gt; &gt; &gt; DNS facility, a lot of open source projects would probably be\nquite\n&gt; &gt; &gt; &gt; &gt; happy.)\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Also: I heard back from Patrick Eaton about SEDA-style async\nHTTP\n&gt; &gt; client\n&gt; &gt; &gt; &gt; &gt; &gt; code... he has a rough implementation for simple usage, and he\nknows\n&gt; &gt; of\n&gt; &gt; &gt; &gt; &gt; &gt; another one at Berkeley which goes deeper into HTTP/1.1\nconformance\n&gt; &gt; and\n&gt; &gt; &gt; &gt; &gt; &gt; optimal performance. I&#39;ve asked him to forward whatever\nadditional\n&gt; &gt; code\n&gt; &gt; &gt; &gt; &gt; &gt; or details he can.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; - Gordon\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; To unsubscribe from this group, send an email to:\n&gt; &gt; &gt; &gt; &gt; &gt; archive-crawler-unsubscribe@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Your use of Yahoo! Groups is subject to the Yahoo! Terms of\nService.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Yahoo! Groups Sponsor\n&gt; &gt; &gt; &gt; &gt; &gt; ADVERTISEMENT\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; To unsubscribe from this group, send an email to:\n&gt; &gt; &gt; &gt; &gt; &gt; archive-crawler-unsubscribe@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Your use of Yahoo! Groups is subject to the Yahoo! Terms of\nService.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; To unsubscribe from this group, send an email to:\n&gt; &gt; &gt; &gt; &gt; &gt; archive-crawler-unsubscribe@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Your use of Yahoo! Groups is subject to the Yahoo! Terms of\nService.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Yahoo! Groups Sponsor\n&gt; &gt; &gt; &gt; &gt; &gt; ADVERTISEMENT\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; To unsubscribe from this group, send an email to:\n&gt; &gt; &gt; &gt; &gt; &gt; archive-crawler-unsubscribe@yahoogroups.com\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Your use of Yahoo! Groups is subject to the Yahoo! Terms of\nService.\n&gt; &gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; To unsubscribe from this group, send an email to:\n&gt; &gt; archive-crawler-unsubscribe@yahoogroups.com\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Your use of Yahoo! Groups is subject to\nhttp://docs.yahoo.com/info/terms/\n&gt; &gt;\n&gt; &gt;\n\n\n"}}