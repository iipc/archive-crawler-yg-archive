{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":500983475,"authorName":"David Pane","from":"David Pane &lt;dpane@...&gt;","profile":"david_pane1","replyTo":"LIST","senderId":"5jddf_k1hPwWYGUrl0yp7ERdOTckwze-rI1a285xiKOYijldzDbmljoJoYlYgEwlreRZ-5ZY1JK-jfSYLcH9lZaovYo","spamInfo":{"isSpam":false,"reason":"12"},"subject":"[archive-crawler] ToeThreads","postDate":"1321310645","msgId":7401,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRFQzE5OUI1LjgwMDA4MDlAY3MuY211LmVkdT4=","inReplyToHeader":"PDRFQjk4NDlCLjYwMjA2MDFAYXJjaGl2ZS5vcmc+","referencesHeader":"PGo4bXRkcisybnI1QGVHcm91cHMuY29tPiA8NEVCODEyRjQuNDA3MDYwOEBhcmNoaXZlLm9yZz4gPDRFQjgyQ0E3LjYwMDA3MDRAY3MuY211LmVkdT4gPDRFQjgzNTA5LjUwMzAyMDlAYXJjaGl2ZS5vcmc+IDw0RUI4NDM4Ri4zMDQwNjA2QGNzLmNtdS5lZHU+IDw0RUI4OTk5My44MDQwMjA4QGFyY2hpdmUub3JnPiA8NEVCOTgyODMuOTA3MDYwOEBjcy5jbXUuZWR1PiA8NEVCOTg0OUIuNjAyMDYwMUBhcmNoaXZlLm9yZz4="},"prevInTopic":7395,"nextInTopic":7408,"prevInTime":7400,"nextInTime":7402,"topicId":7379,"numMessagesInTopic":23,"msgSnippet":"A naive user would think that if one configures the crawler to use 1200 toe threads, the crawler would use all 1200 threads for the duration of the crawl. I","rawEmail":"Return-Path: &lt;dpane@...&gt;\r\nX-Sender: dpane@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 97211 invoked from network); 14 Nov 2011 22:44:08 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m13.grp.sp2.yahoo.com with QMQP; 14 Nov 2011 22:44:08 -0000\r\nX-Received: from unknown (HELO smtp.andrew.cmu.edu) (128.2.11.96)\n  by mta2.grp.sp2.yahoo.com with SMTP; 14 Nov 2011 22:44:07 -0000\r\nX-Received: from [128.2.209.200] (SAVOY.LTI.CS.CMU.EDU [128.2.209.200])\n\t(user=dpane mech=PLAIN (0 bits))\n\tby smtp.andrew.cmu.edu (8.14.4/8.14.4) with ESMTP id pAEMi4YU017974\n\t(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);\n\tMon, 14 Nov 2011 17:44:05 -0500\r\nMessage-ID: &lt;4EC199B5.8000809@...&gt;\r\nDate: Mon, 14 Nov 2011 17:44:05 -0500\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:8.0) Gecko/20111105 Thunderbird/8.0\r\nMIME-Version: 1.0\r\nTo: Gordon Mohr &lt;gojomo@...&gt;\r\nCc: archive-crawler@yahoogroups.com, Noah Levitt &lt;nlevitt@...&gt;\r\nReferences: &lt;j8mtdr+2nr5@...&gt; &lt;4EB812F4.4070608@...&gt; &lt;4EB82CA7.6000704@...&gt; &lt;4EB83509.5030209@...&gt; &lt;4EB8438F.3040606@...&gt; &lt;4EB89993.8040208@...&gt; &lt;4EB98283.9070608@...&gt; &lt;4EB9849B.6020601@...&gt;\r\nIn-Reply-To: &lt;4EB9849B.6020601@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-PMX-Version: 5.5.9.388399, Antispam-Engine: 2.7.2.376379, Antispam-Data: 2010.4.9.4220\r\nX-SMTP-Spam-Clean: 8% (\n __CT 0, __CTE 0, __CT_TEXT_PLAIN 0, __HAS_MSGID 0, __MIME_TEXT_ONLY 0, __MIME_VERSION 0, __MOZILLA_MSGID 0, __SANE_MSGID 0, __TO_MALFORMED_2 0, __URI_NO_MAILTO 0, __URI_NO_PATH 0, __URI_NO_WWW 0, __USER_AGENT 0)\r\nX-SMTP-Spam-Score: 8%\r\nX-Scanned-By: MIMEDefang 2.60 on 128.2.11.96\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: David Pane &lt;dpane@...&gt;\r\nSubject: [archive-crawler] ToeThreads\r\nX-Yahoo-Group-Post: member; u=500983475; y=UVgHV9qcTvO-ztVldt_g40oUwb0gs2QWD_0nl0R7uzyeMp9JhLeqyw\r\nX-Yahoo-Profile: david_pane1\r\n\r\nA naive user would think that if one configures the crawler to use 1200 \ntoe threads, the crawler would use all 1200 threads for the duration of \nthe crawl.\n\nI have found that this is not always true.  A recent test crawl showed \nonly ~512 of the threads (512 threads: 512 ...) for the duration of a \ncrawl 3 day crawl with as many as 8 million uri queues.\n\nOther crawls show multiple (maybe ~800) warcWriter threads and maybe \nless than a dozen fetch threads.\n\nI have been playing with the balanceReplenishAmount (now at 1500), \nmaxRetries (now at 5)  and recently changed the configuration to use the \nwagCostAssignmentPolicy.\n\nFinally, I have been using the maxTimeSeconds to segments of a crawl. \nThe last few segments were set at 3 1/2 days.  When the crawler goes to \nactive stopping, about 20 minutes later the load goes to zero (e.g. 0 \nactive of 507 threads; 4,891.94 congestion ratio; 11262085 deepest \nqueue; 37 average depth ) but it take multiple hours to actually \ncomplete the stopping.\n\nThe theads show (507 threads: 507 ABOUT_TO_GET_URI; 507 noActiveProcessor )\n\nThe Toe thread report looks something like:\nToe threads report - 201111142240\n  Job being crawled: jobname\n  Number of toe threads in pool: 507 (0 active)\n\n[ToeThread #21:\n  -no CrawlURI-\n     WAITING for 1h30m21s121ms\n     step: ABOUT_TO_GET_URI for 1h30m21s121ms\nJava Thread State: WAITING\nBlocked/Waiting On: NONE\n     sun.misc.Unsafe.park(Native Method)\n     java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n \njava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n \norg.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n     org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n]\n[ToeThread #30:\n  -no CrawlURI-\n     WAITING for 1h30m20s411ms\n     step: ABOUT_TO_GET_URI for 1h30m20s411ms\nJava Thread State: WAITING\nBlocked/Waiting On: NONE\n     sun.misc.Unsafe.park(Native Method)\n     java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n \njava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n \norg.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n     org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n]\n[ToeThread #31:\n  -no CrawlURI-\n     WAITING for 1h22m8s292ms\n     step: ABOUT_TO_GET_URI for 1h22m8s292ms\nJava Thread State: WAITING\nBlocked/Waiting On: NONE\n     sun.misc.Unsafe.park(Native Method)\n     java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n \njava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n \norg.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n     org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n]\n[ToeThread #133:\n  -no CrawlURI-\n     WAITING for 1h19m48s302ms\n     step: ABOUT_TO_GET_URI for 1h19m48s302ms\nJava Thread State: WAITING\nBlocked/Waiting On: NONE\n     sun.misc.Unsafe.park(Native Method)\n     java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n \njava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n \norg.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n     org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n]\n.\n.\n.\n\nToeThread #1198:\n  -no CrawlURI-\n     WAITING for 1h30m20s625ms\n     step: ABOUT_TO_GET_URI for 1h30m20s625ms\nJava Thread State: WAITING\nBlocked/Waiting On: NONE\n     sun.misc.Unsafe.park(Native Method)\n     java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n \njava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n \norg.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n     org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n]\n[ToeThread #1199:\n  -no CrawlURI-\n     WAITING for 1h30m25s395ms\n     step: ABOUT_TO_GET_URI for 1h30m25s395ms\nJava Thread State: WAITING\nBlocked/Waiting On: NONE\n     sun.misc.Unsafe.park(Native Method)\n     java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n \njava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n \norg.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n     org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n]\n[ToeThread #1200:\n  -no CrawlURI-\n     WAITING for 1h30m26s398ms\n     step: ABOUT_TO_GET_URI for 1h30m26s398ms\nJava Thread State: WAITING\nBlocked/Waiting On: NONE\n     sun.misc.Unsafe.park(Native Method)\n     java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)\n \njava.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)\n \njava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lockInterruptibly(ReentrantReadWriteLock.java:639)\n \norg.archive.crawler.frontier.AbstractFrontier.next(AbstractFrontier.java:450)\n     org.archive.crawler.framework.ToeThread.run(ToeThread.java:133)\n]\n\n\nAny clarification and explanation of these would greatly be appreciated.\n\n--David\n\n\n\n\n"}}