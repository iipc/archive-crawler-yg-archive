{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":264783887,"authorName":"pbaclace","from":"&quot;pbaclace&quot; &lt;pbaclace@...&gt;","profile":"pbaclace","replyTo":"LIST","senderId":"j1CKIFf2YWGVjws58Cd-8JxWVEvPUciEpqyrJDS9odK6SAH-InDBE7IGvdawJ6kOxB0hrD0wNRXoW6OvbJqT4j6jR0LWLg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: ServerCache lookup stuck","postDate":"1253566395","msgId":6050,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGg5OHAzcityMW0wQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDRBQjQ1NEJDLjYwOTAwMDNAYXJjaGl2ZS5vcmc+"},"prevInTopic":6048,"nextInTopic":0,"prevInTime":6049,"nextInTime":6051,"topicId":6026,"numMessagesInTopic":15,"msgSnippet":"I wonder if the problem is around: CachedBdbMap.isExpunged(final SoftEntry entry) The idea is that the caller will do the expunge if it can, otherwise...","rawEmail":"Return-Path: &lt;pbaclace@...&gt;\r\nX-Sender: pbaclace@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 72008 invoked from network); 21 Sep 2009 20:53:44 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m5.grp.re1.yahoo.com with QMQP; 21 Sep 2009 20:53:44 -0000\r\nX-Received: from unknown (HELO n37b.bullet.mail.sp1.yahoo.com) (66.163.168.151)\n  by mta3.grp.re1.yahoo.com with SMTP; 21 Sep 2009 20:53:43 -0000\r\nX-Received: from [69.147.65.149] by n37.bullet.mail.sp1.yahoo.com with NNFMP; 21 Sep 2009 20:53:17 -0000\r\nX-Received: from [98.137.34.184] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 21 Sep 2009 20:53:17 -0000\r\nDate: Mon, 21 Sep 2009 20:53:15 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;h98p3r+r1m0@...&gt;\r\nIn-Reply-To: &lt;4AB454BC.6090003@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;pbaclace&quot; &lt;pbaclace@...&gt;\r\nSubject: Re: ServerCache lookup stuck\r\nX-Yahoo-Group-Post: member; u=264783887; y=XkKEjfHifyfxJ8exH8Y0_AinR3dArwTjYEqXBMS6Zmud3w8\r\nX-Yahoo-Profile: pbaclace\r\n\r\nI wonder if the problem is around:\n\n  CachedBdbMap.isExpunged(final SoftEnt=\r\nry&lt;V&gt; entry)\n\nThe idea is that the caller will do the expunge if it can, ot=\r\nherwise... that&#39;s where it becomes interesting.\n\nIgor:   is this in your lo=\r\ngs (a warning):\n\n  could not start expunge, and expunge was never started a=\r\nnd val is null\n\nEven better, post any warnings generated by CachedBdbMap (i=\r\ngnoring any that are obviously not related to TOE threads).\n\n\nPaul\n\n\n--- In=\r\n archive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@...&gt; wrote:\n&gt;\n&gt; Also =\r\nfor reference and possible attempts at crafting a proper stress \n&gt; test: ho=\r\nw many CPUs/cores(or virtual-cores) are on your machine?\n&gt; \n&gt; - Gordon\n&gt; \n&gt;=\r\n igor@... wrote:\n&gt; &gt; Hi Gordon,\n&gt; &gt; \n&gt; &gt; 1) PoolThread-0 is a kill-thread-v=\r\nia-gui:\n&gt; &gt; \n&gt; &gt; &quot;PoolThread-0&quot; prio=3D10 tid=3D0x0a1e1400 nid=3D0xa1b wait=\r\ning for monitor entry\n&gt; &gt; [0x8d5fe000..0x8d5ff130]\n&gt; &gt;    java.lang.Thread.=\r\nState: BLOCKED (on object monitor)\n&gt; &gt;         at\n&gt; &gt; org.archive.util.Cach=\r\nedBdbMap$SoftEntry.getPhantom(CachedBdbMap.java:1625)\n&gt; &gt;         - waiting=\r\n to lock &lt;0x97f40ad8&gt; (a\n&gt; &gt; org.archive.util.CachedBdbMap$SoftEntry)\n&gt; &gt;  =\r\n       at\n&gt; &gt; org.archive.util.CachedBdbMap$SoftEntry.isCleared(CachedBdbMa=\r\np.java:1632)\n&gt; &gt;         at\n&gt; &gt; org.archive.util.CachedBdbMap$SoftEntry.awa=\r\nitExpunge(CachedBdbMap.java:1711)\n&gt; &gt;         at org.archive.util.CachedBdb=\r\nMap.isExpunged(CachedBdbMap.java:500)\n&gt; &gt;         at org.archive.util.Cache=\r\ndBdbMap._getMem(CachedBdbMap.java:698)\n&gt; &gt;         at org.archive.util.Cach=\r\nedBdbMap.get(CachedBdbMap.java:627)\n&gt; &gt;         at\n&gt; &gt; org.archive.crawler.=\r\ndatamodel.ServerCache.getServerFor(ServerCache.java:99)\n&gt; &gt;         at\n&gt; &gt; =\r\norg.archive.crawler.datamodel.ServerCache.getServerFor(ServerCache.java:124=\r\n)\n&gt; &gt;         at\n&gt; &gt; org.archive.crawler.frontier.AbstractFrontier.tally(Ab=\r\nstractFrontier.java:428)\n&gt; &gt;         at\n&gt; &gt; org.archive.crawler.frontier.Ab=\r\nstractFrontier.doJournalFinishedFailure(AbstractFrontier.java:465)\n&gt; &gt;     =\r\n    at\n&gt; &gt; org.archive.crawler.frontier.WorkQueueFrontier.finished(WorkQueu=\r\neFrontier.java:918)\n&gt; &gt;         at org.archive.crawler.framework.ToeThread.=\r\nkill(ToeThread.java:411)\n&gt; &gt;         - locked &lt;0x961941f8&gt; (a org.archive.c=\r\nrawler.framework.ToeThread)\n&gt; &gt;         at org.archive.crawler.framework.To=\r\nePool.killThread(ToePool.java:158)\n&gt; &gt;         at\n&gt; &gt; org.archive.crawler.f=\r\nramework.CrawlController.killThread(CrawlController.java:1691)\n&gt; &gt;         =\r\nat org.archive.crawler.admin.CrawlJob.killThread(CrawlJob.java:968)\n&gt; &gt;    =\r\n     at\n&gt; &gt; org.archive.crawler.jspc.admin.reports.threads_jsp._jspService(=\r\nUnknown\n&gt; &gt; Source)\n&gt; &gt;         at\n&gt; &gt; org.apache.jasper.runtime.HttpJspBas=\r\ne.service(HttpJspBase.java:137)\n&gt; &gt;         at javax.servlet.http.HttpServl=\r\net.service(HttpServlet.java:853)\n&gt; &gt;         at\n&gt; &gt; org.mortbay.jetty.servl=\r\net.ServletHolder.handle(ServletHolder.java:358)\n&gt; &gt;         at\n&gt; &gt; org.mort=\r\nbay.jetty.servlet.WebApplicationHandler$Chain.doFilter(WebApplicationHandle=\r\nr.java:342)\n&gt; &gt;         at\n&gt; &gt; org.archive.crawler.admin.ui.RootFilter.doFi=\r\nlter(RootFilter.java:67)\n&gt; &gt;         at\n&gt; &gt; org.mortbay.jetty.servlet.WebAp=\r\nplicationHandler$Chain.doFilter(WebApplicationHandler.java:334)\n&gt; &gt;        =\r\n at\n&gt; &gt; org.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplica=\r\ntionHandler.java:286)\n&gt; &gt;         at\n&gt; &gt; org.mortbay.jetty.servlet.ServletH=\r\nandler.handle(ServletHandler.java:567)\n&gt; &gt;         at org.mortbay.http.Http=\r\nContext.handle(HttpContext.java:1807)\n&gt; &gt;         at\n&gt; &gt; org.mortbay.jetty.=\r\nservlet.WebApplicationContext.handle(WebApplicationContext.java:525)\n&gt; &gt;   =\r\n      at org.mortbay.http.HttpContext.handle(HttpContext.java:1757)\n&gt; &gt;    =\r\n     at org.mortbay.http.HttpServer.service(HttpServer.java:879)\n&gt; &gt;       =\r\n  at org.mortbay.http.HttpConnection.service(HttpConnection.java:789)\n&gt; &gt;  =\r\n       at\n&gt; &gt; org.mortbay.http.HttpConnection.handleNext(HttpConnection.jav=\r\na:960)\n&gt; &gt;         at org.mortbay.http.HttpConnection.handle(HttpConnection=\r\n.java:806)\n&gt; &gt;         at\n&gt; &gt; org.mortbay.http.SocketListener.handleConnect=\r\nion(SocketListener.java:218)\n&gt; &gt;         at org.mortbay.util.ThreadedServer=\r\n.handle(ThreadedServer.java:300)\n&gt; &gt;         at org.mortbay.util.ThreadPool=\r\n$PoolThread.run(ThreadPool.java:511)\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; 2)\n&gt; &gt;&gt; So if I understa=\r\nnd properly: other threads are still proceeding OK, it&#39;s\n&gt; &gt;&gt; just this one=\r\n host that&#39;s not making any progress, because any thread\n&gt; &gt;&gt; that tries to=\r\n get an associated CrawlServer (for any reason)\n&gt; &gt; \n&gt; &gt; That is correct.\n&gt;=\r\n &gt; \n&gt; &gt; 3) dumpExtraStats().\n&gt; &gt; Here are three consecutive dumps.\n&gt; &gt; \n&gt; &gt;=\r\n 2009-09-17 18:33:21.822 INFO thread-97\n&gt; &gt; org.archive.util.CachedBdbMap.d=\r\numpExtraStats() DB name:servers,  Cache\n&gt; &gt; Hit: 99%, Not in map: 79937, To=\r\ntal number of gets: 14330000  1=3DNullPhantom\n&gt; &gt;  6=3DTransientCond  90187=\r\n0921=3DAwaitExpunge  0=3DNullValue  0=3DNotInMap \n&gt; &gt; 0=3DAwaitTimeout  422=\r\n830=3DSwapIn  85379=3DdiskHit  14164684=3DcacheHit \n&gt; &gt; 14330000=3DcountOfG=\r\nets  0=3DSwapInRetry  887040=3DDiskPut  0=3DRemove1Used \n&gt; &gt; 0=3DRemove2Use=\r\nd  0=3DReplaceUsed  0=3DPutUsed  75196=3DPutIfUsed  0=3DSyncUsed \n&gt; &gt; 79887=\r\n=3DdiskMapSize  452=3DmemMap.size\n&gt; &gt; \n&gt; &gt; 2009-09-17 18:34:24.189 INFO thr=\r\nead-23\n&gt; &gt; org.archive.util.CachedBdbMap.dumpExtraStats() DB name:hosts,  C=\r\nache Hit:\n&gt; &gt; 99%, Not in map: 79478, Total number of gets: 14200000  1=3DN=\r\nullPhantom \n&gt; &gt; 1=3DTransientCond  0=3DAwaitExpunge  0=3DNullValue  0=3DNot=\r\nInMap  0=3DAwaitTimeout \n&gt; &gt; 422840=3DSwapIn  88927=3DdiskHit  14031595=3Dc=\r\nacheHit  14200000=3DcountOfGets \n&gt; &gt; 0=3DSwapInRetry  888044=3DDiskPut  0=\r\n=3DRemove1Used  0=3DRemove2Used  0=3DReplaceUsed\n&gt; &gt;  0=3DPutUsed  74742=3D=\r\nPutIfUsed  0=3DSyncUsed  79417=3DdiskMapSize \n&gt; &gt; 274=3DmemMap.size\n&gt; &gt; \n&gt; =\r\n&gt; 2009-09-17 18:37:07.468 INFO thread-60\n&gt; &gt; org.archive.util.CachedBdbMap.=\r\ndumpExtraStats() DB name:servers,  Cache\n&gt; &gt; Hit: 99%, Not in map: 79986, T=\r\notal number of gets: 14340000  1=3DNullPhantom\n&gt; &gt;  6=3DTransientCond  1101=\r\n700501=3DAwaitExpunge  0=3DNullVal\n&gt; &gt; ue  0=3DNotInMap  0=3DAwaitTimeout  =\r\n423101=3DSwapIn  85433=3DdiskHit \n&gt; &gt; 14174581=3DcacheHit  14340000=3Dcount=\r\nOfGets  0=3DSwapInRetry  888044=3DDiskPut \n&gt; &gt; 0=3DRemove1Used  0=3DRemove2=\r\nUsed  0=3DReplaceUsed  0=3DPutUsed  75245=3DPutIfUsed \n&gt; &gt; 0=3DSyncUsed  79=\r\n936=3DdiskMapSize\n&gt; &gt;  377=3DmemMap.size\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; 4)\n&gt; &gt;&gt; TT#9 was sho=\r\nwing same symptom, but different URI/host-in-progress?\n&gt; &gt; \n&gt; &gt; No, that wa=\r\ns a typo. It is tt#19 not tt#9. Sorry for the confusion.\n&gt; &gt; \n&gt; &gt; 5)  I wil=\r\nl wait another day before trying to manually remove the stuck\n&gt; &gt; memMap en=\r\ntry.\n&gt; &gt; \n&gt; &gt; Thanks Gordon.\n&gt; &gt; i.\n&gt; &gt; \n&gt; &gt; \n&gt; &gt;&gt; igor@... wrote:\n&gt; &gt;&gt;&gt;&gt; S=\r\ntill investigating, but thoughts so far:\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; A notable thing abou=\r\nt the &quot;ToeThread #19&quot; dumps is that they are\n&gt; &gt;&gt;&gt;&gt; usually\n&gt; &gt;&gt;&gt;&gt; BLOCKED =\r\nwaiting for the monitor on a specific CachedBdbMap$SoftEntry\n&gt; &gt;&gt;&gt;&gt; instanc=\r\ne (&lt;0x97f40ad8&gt;, corresponding to the one server of interest to\n&gt; &gt;&gt;&gt;&gt; the =\r\nURI-in-progress). That means some other thread holds it. But\n&gt; &gt;&gt;&gt;&gt; occasio=\r\nnally, tt#19 holds that lock.\n&gt; &gt;&gt;&gt; I attached a file with more info.\n&gt; &gt;&gt;&gt;=\r\n\n&gt; &gt;&gt;&gt;&gt; This alternation suggests the other thread or threads are contribut=\r\nors\n&gt; &gt;&gt;&gt;&gt; to the problem state. You mentioned these might be in the middle=\r\n of a\n&gt; &gt;&gt;&gt;&gt; JMX URI import; can you share some of those stacks, too? (Inde=\r\ned, any\n&gt; &gt;&gt;&gt;&gt; stack with a reference to &lt;0x97f40ad8&gt; from the same all-thr=\r\neads-dump.)\n&gt; &gt;&gt;&gt; There are 4 additional threads that are stuck in the same=\r\n loop: 3 JMX\n&gt; &gt;&gt;&gt; import URIs and one *gui-kill-and-replace-thread* thread=\r\ns.\n&gt; &gt;&gt; Can you send one deeper sample of this stack (the &quot;PoolThread-0&quot; I\n=\r\n&gt; &gt;&gt; think) -- I&#39;m curious how it got entangled.\n&gt; &gt;&gt;\n&gt; &gt;&gt;&gt; Initially there=\r\n were only two stuck threads, tt#19 and one JMX import\n&gt; &gt;&gt;&gt; URI\n&gt; &gt;&gt;&gt; thre=\r\nad. The URI import process is sequential, one url at time, across\n&gt; &gt;&gt;&gt; all=\r\n\n&gt; &gt;&gt;&gt; TLDs. Heritrix instance does not discover URLs itself at all.\n&gt; &gt;&gt;&gt;\n=\r\n&gt; &gt;&gt;&gt; I end up with two more stuck JMX import URI threads because I restart=\r\ned\n&gt; &gt;&gt;&gt; the URI import process twice with incorrect filter that drops urls=\r\n from\n&gt; &gt;&gt;&gt; the *problematic* site/source-server.\n&gt; &gt;&gt; So if I understand p=\r\nroperly: other threads are still proceeding OK, it&#39;s\n&gt; &gt;&gt; just this one hos=\r\nt that&#39;s not making any progress, because any thread\n&gt; &gt;&gt; that tries to get=\r\n an associated CrawlServer (for any reason)\n&gt; &gt;&gt;\n&gt; &gt;&gt;&gt; I also tried to kill=\r\n tt#9 via GUI but that did not work. Thus, another\n&gt; &gt;&gt;&gt; stuck thread.\n&gt; &gt; =\r\n\n&gt; &gt; \n&gt; &gt;&gt; The info below is useful too.\n&gt; &gt;&gt;\n&gt; &gt;&gt; Current best guess: it a=\r\nppears that the &#39;expunge&#39; (clearing memMap\n&gt; &gt;&gt; entry) of a GC&#39;d item only =\r\noccurs if the keys identity-match on line\n&gt; &gt;&gt; 1474 of CachedBdbMap. I don&#39;=\r\nt know why they wouldn&#39;t match -- must be\n&gt; &gt;&gt; some other synchronization p=\r\nroblem -- but if they don&#39;t, there seems no\n&gt; &gt;&gt; way that key could ever be=\r\n removed from the map. The necessary exit\n&gt; &gt;&gt; condition for all the loops =\r\nis that the key is removed as expected --\n&gt; &gt;&gt; explaining the thread trap.\n=\r\n&gt; &gt;&gt;\n&gt; &gt;&gt; I think this theory of the loop (if not the original cause) could=\r\n be\n&gt; &gt;&gt; confirmed if you could connect to the JVM via JConsole and set the=\r\n\n&gt; &gt;&gt; logging level of org.archive.util.CachedBdbMap logger to INFO (at lea=\r\nst\n&gt; &gt;&gt; briefly). There should then be a flurry of output from\n&gt; &gt;&gt; CachedB=\r\ndbMap.dumpExtraStats(), and the &quot;NotInMap&quot; value reported as\n&gt; &gt;&gt; nonzero (=\r\nand probably increasing rapidly with each loop). Other numbers\n&gt; &gt;&gt; there m=\r\night be interesting too.\n&gt; &gt;&gt;\n&gt; &gt;&gt; Can you try that?\n&gt; &gt; \n&gt; &gt;&gt; I think manu=\r\nally removing the stuck memMap entry, for example via a\n&gt; &gt;&gt; one-time Beans=\r\nhellProcessor script, may release the threads -- though of\n&gt; &gt;&gt; course the =\r\nproblem could recur because we still don&#39;t know how the bad\n&gt; &gt;&gt; state was =\r\ninitially triggered.\n&gt; &gt;&gt;\n&gt; &gt;&gt; It&#39;d be a bit of delicate error-prone surger=\r\ny on the running process,\n&gt; &gt;&gt; but the rough approach might be:\n&gt; &gt;&gt;\n&gt; &gt;&gt; -=\r\n pause\n&gt; &gt;&gt; - add a new BeanshellProcessor\n&gt; &gt;&gt;    - give it a script somew=\r\nhat like (untested)...\n&gt; &gt;&gt;\n&gt; &gt;&gt; =3D=3D=3D\n&gt; &gt;&gt; run(curi) {\n&gt; &gt;&gt;    if(curi=\r\n.getCrawlURIString().equals(\n&gt; &gt;&gt;         &quot;http://example.com/ONE_TIME_FAKE=\r\n_TRIGGER_URI&quot;)) {\n&gt; &gt;&gt;      setAccessibility(true);\n&gt; &gt;&gt;      controller.se=\r\nrverCache.servers.memMap.remove(\n&gt; &gt;&gt;         &quot;newyork.craigslist.org&quot;);\n&gt; =\r\n&gt;&gt;    }\n&gt; &gt;&gt; }\n&gt; &gt;&gt; =3D=3D=3D\n&gt; &gt;&gt;\n&gt; &gt;&gt; - add the trigger URI that will pas=\r\ns scoping\n&gt; &gt;&gt; - unpause\n&gt; &gt;&gt; - hope for the best & check if it worked\n&gt; &gt;&gt;=\r\n - pause and remove BeanshellProcessor until next time problem repeats\n&gt; &gt;&gt;=\r\n\n&gt; &gt;&gt; I&#39;ve made an issue to track down the underlying trigger bug, see:\n&gt; &gt;=\r\n&gt;\n&gt; &gt;&gt;    https://webarchive.jira.com/browse/HER-1677\n&gt; &gt;&gt;\n&gt; &gt;&gt; - Gordon @ =\r\nIA\n&gt; &gt;&gt;\n&gt; &gt;&gt;&gt;&gt; Also, is the reported CPU usage negligible, pegged-near-100%=\r\n, or\n&gt; &gt;&gt;&gt;&gt; somewhere in between?\n&gt; &gt;&gt;&gt; The java process uses about 50% of =\r\nall cores and that is pretty much\n&gt; &gt;&gt;&gt; constant even when the crawler inst=\r\nance is paused. There is a constant\n&gt; &gt;&gt;&gt; JMX\n&gt; &gt;&gt;&gt; import URI activity, bu=\r\nt that is single threaded and I cannot image it\n&gt; &gt;&gt;&gt; being CPU intensive.\n=\r\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; Is there a chance the JMX threads are adding many URIs from th=\r\nis same\n&gt; &gt;&gt;&gt;&gt; source server, and are making very very slow contended progr=\r\ness? (A\n&gt; &gt;&gt;&gt;&gt; frontier report might show the count of URIs on the correspo=\r\nnding queue\n&gt; &gt;&gt;&gt;&gt; growing, and maybe even &#39;lsof -o&#39; would show any read-po=\r\nsition progress\n&gt; &gt;&gt;&gt;&gt; in the source files for the JMX operation, confirmin=\r\ng some progress.)\n&gt; &gt;&gt;&gt;&gt; It\n&gt; &gt;&gt;&gt;&gt; would be good to know if this is a true =\r\nendless-hysteresis/loop or just\n&gt; &gt;&gt;&gt;&gt; pathological slowness under a certai=\r\nn kind of contention.\n&gt; &gt;&gt;&gt; No, that is not the case.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; What doe=\r\ns the heap usage look like? (The behavior of CachedBdbMap is\n&gt; &gt;&gt;&gt;&gt; intenti=\r\nonally GC-sensitive; operation under low-memory conditions,\n&gt; &gt;&gt;&gt;&gt; where\n&gt; =\r\n&gt;&gt;&gt;&gt; something is GC&#39;d as soon as it&#39;s created, could be part of the proble=\r\nm\n&gt; &gt;&gt;&gt;&gt; cycle. But that&#39;s less likely a factor to consider if there&#39;s plen=\r\nty of\n&gt; &gt;&gt;&gt;&gt; heap free space.)\n&gt; &gt;&gt;&gt; It is using only a half of the max hea=\r\np value.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; Are you hoping to kick this crawl back into working s=\r\ntate (which might\n&gt; &gt;&gt;&gt;&gt; be possible with enough trickery once we understan=\r\nd the problem), or\n&gt; &gt;&gt;&gt;&gt; just keeping it around for debugging?\n&gt; &gt;&gt;&gt; I wil=\r\nl like to have it in a working state sooner or later either by\n&gt; &gt;&gt;&gt; restar=\r\nt or some other trickery. But for now it is still up and running.\n&gt; &gt;&gt;&gt;\n&gt; &gt;=\r\n&gt;&gt; Thanks Gordon.\n&gt; &gt;&gt;&gt; i.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; - Gordon @ IA\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; i=\r\ngor@... wrote:\n&gt; &gt;&gt;&gt;&gt;&gt; Hi Gordon,\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; Thanks for looking into i=\r\nt. See comments below.\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; The CachedBdbMap somewhat recently =\r\n(since last official release)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; underwent some major refactoring to =\r\nimprove concurrency. The test\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; coverage is reasonable and the code =\r\nhas been through some volume\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; tests\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; without showing proble=\r\nms, but this might be a new bug triggered by\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; that\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; code.\n&gt;=\r\n &gt;&gt;&gt;&gt;&gt;&gt; If you pause the crawl, I presume only that one thread remains\n&gt; &gt;&gt;=\r\n&gt;&gt;&gt;&gt; active.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; Is that right?\n&gt; &gt;&gt;&gt;&gt;&gt; Only one toe thread, that is r=\r\night.\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; Is the CPU busy with only that thread active? I&#39;m st=\r\nill considering\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; the\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; other stacks you forwarded in a subse=\r\nquent message; can you collect\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; even\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; more samples to get a=\r\n sense of which branches are always being taken\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; in\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; the re=\r\nlevant methods?\n&gt; &gt;&gt;&gt;&gt;&gt; There is more than one thread active given that the=\r\nre is JMX\n&gt; &gt;&gt;&gt;&gt;&gt; activities\n&gt; &gt;&gt;&gt;&gt;&gt; even when the crawl is paused.\n&gt; &gt;&gt;&gt;&gt;&gt;=\r\n\n&gt; &gt;&gt;&gt;&gt;&gt; There are at least two more JMX threads (trying to import an URI) =\r\nthat\n&gt; &gt;&gt;&gt;&gt;&gt; are\n&gt; &gt;&gt;&gt;&gt;&gt; stuck in the same loop as the toe thread.\n&gt; &gt;&gt;&gt;&gt;&gt;\n=\r\n&gt; &gt;&gt;&gt;&gt;&gt; I attached a file with 100 quick thread dumps related to toe thread=\r\n\n&gt; &gt;&gt;&gt;&gt;&gt; #19.\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; The CachedBdbMap depends on some some garbag=\r\ne-collection-related\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; trickery that might not be reliable in all JV=\r\nMs. Can you say what\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; JVM/host OS you&#39;re using?\n&gt; &gt;&gt;&gt;&gt;&gt; Sun&#39;s 1.6 (=\r\n1.6.0_10-b33) and CentOS (CentOS release 5.3 (Final)).\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; i.\n&gt;=\r\n &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; igor@... wrote:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; I got a stuck thread that is disr=\r\nupting the crawl.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Heritrix verion:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; 1.15.4 (ch=\r\necked out on 9/9/2009)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Java env:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Linux 2.6.18=\r\n-128.1.10.el5PAE #1 SMP Thu May 7 11:14:31 EDT 2009 i686\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; i686\n&gt; &gt;=\r\n&gt;&gt;&gt;&gt;&gt;&gt; i386 GNU/Linux\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; java version &quot;1.6.0_10&quot;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Java(TM) =\r\nSE Runtime Environment (build 1.6.0_10-b33)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Java HotSpot(TM) Serv=\r\ner VM (build 11.0-b15, mixed mode)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; JAVA_OPTS=3D-Xmx512m\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;=\r\n\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Sleepycat:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; je-3.3.82.jar\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Here is t=\r\nhe thread dump:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; ToeThread #19: http://newyork.craigslist.org/mnh/=\r\ntix/1371733715.html\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;  CrawlURI http://newyork.craigslist.org/mnh/t=\r\nix/1371733715.html\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; 1\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; attempts\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     in processo=\r\nr: Preprocessor\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     ACTIVE for 16h25m22s108ms\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     step:=\r\n ABOUT_TO_BEGIN_PROCESSOR for 16h25m22s108ms\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util=\r\n.CachedBdbMap$SoftEntry.getPhantom(CachedBdbMap.java:1625)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     or=\r\ng.archive.util.CachedBdbMap$SoftEntry.isCleared(CachedBdbMap.java:1632)\n&gt; &gt;=\r\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap$SoftEntry.startExpunge(CachedBdbMa=\r\np.java:1693)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap.isExpunged(CachedB=\r\ndbMap.java:490)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap._getMem(CachedB=\r\ndbMap.java:698)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap.get(CachedBdbMa=\r\np.java:627)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.datamodel.ServerCache.getServ=\r\nerFor(ServerCache.java:99)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.datamodel.Serv=\r\nerCache.getServerFor(ServerCache.java:124)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawle=\r\nr.prefetch.PreconditionEnforcer.considerDnsPreconditions(PreconditionEnforc=\r\ner.java:227)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.prefetch.PreconditionEnforce=\r\nr.innerProcess(PreconditionEnforcer.java:111)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.cra=\r\nwler.framework.Processor.process(Processor.java:112)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;     org.arch=\r\nive.crawler.framework.ToeThread.processCrawlUri(ToeThread.java:302)\n&gt; &gt;&gt;&gt;&gt;&gt;=\r\n&gt;&gt;     org.archive.crawler.framework.ToeThread.run(ToeThread.java:151)\n&gt; &gt;&gt;=\r\n&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; i.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; ------=\r\n------------------------------\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt; &gt;&gt;=\r\n&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; ------------------------------------\n&gt; &gt;=\r\n&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;=\r\n&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; ------------------------------------\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; Yahoo! Gro=\r\nups Links\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; ----------------------------------=\r\n--\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;=\r\n&gt; ------------------------------------\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; Yahoo! Groups Links\n&gt; &gt;&gt;=\r\n&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt; ------------------------------------\n&gt; &gt;&gt;\n&gt; &gt;&gt; Yaho=\r\no! Groups Links\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; ---------------=\r\n---------------------\n&gt; &gt; \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt; \n&gt; &gt;\n&gt;\n\n\n\n"}}