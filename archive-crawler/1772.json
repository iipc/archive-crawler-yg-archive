{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"stack","from":"stack &lt;stack@...&gt;","profile":"stackarchiveorg","replyTo":"LIST","senderId":"iCk7mzp9NJfrNPdJagI4yhUxZ9jQuad5o4L9qE51u2xlvotZm85jBb25M-thDTuqfK24npvMQZjaGZ8fp-PDhw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] GzippedInputStream usage confusion","postDate":"1114824840","msgId":1772,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQyNzJFMDg4LjkwODAyMDNAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGQ0cnZpbit0OXVuQGVHcm91cHMuY29tPg==","referencesHeader":"PGQ0cnZpbit0OXVuQGVHcm91cHMuY29tPg=="},"prevInTopic":1765,"nextInTopic":0,"prevInTime":1771,"nextInTime":1773,"topicId":1765,"numMessagesInTopic":2,"msgSnippet":"... The above seems to make it work for your usage pattern -- the usage pattern the API seems to hint at -- but I need to test to make sure the above will work","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 99944 invoked from network); 30 Apr 2005 01:33:59 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m21.grp.scd.yahoo.com with QMQP; 30 Apr 2005 01:33:59 -0000\r\nReceived: from unknown (HELO dns.duboce.net) (63.203.238.114)\n  by mta5.grp.scd.yahoo.com with SMTP; 30 Apr 2005 01:33:59 -0000\r\nReceived: from [207.241.238.204] (b116-dyn-204.archive.org [207.241.238.204])\n\t(authenticated)\n\tby dns-eth1.duboce.net (8.10.2/8.10.2) with ESMTP id j3U0ecm29221\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Fri, 29 Apr 2005 17:40:39 -0700\r\nMessage-ID: &lt;4272E088.9080203@...&gt;\r\nDate: Fri, 29 Apr 2005 18:34:00 -0700\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20050105 Debian/1.7.5-1\r\nX-Accept-Language: us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;d4rvin+t9un@...&gt;\r\nIn-Reply-To: &lt;d4rvin+t9un@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] GzippedInputStream usage confusion\r\nX-Yahoo-Group-Post: member; u=168599281\r\nX-Yahoo-Profile: stackarchiveorg\r\n\r\nrich_80205 wrote:\n\n&gt; I thought it&#39;d be useful to use GzippedInputStream separately for a\n&gt; project I&#39;m working on, which processes files created by &#39;gzip&#39; and\n&gt; have multi-part gzipped contents. However, I have had no luck\n&gt; in getting it to uncompress multiple parts.\n&gt;\n&gt; I&#39;ve looked at the code and the Javadoc for that class, but\n&gt; I always get some variation of the following error:\n&gt;\n&gt; Exception in thread &quot;main&quot; java.lang.RuntimeException: Failed i/o:\n&gt; Negative seek offset at\n&gt; org.archive.io.GzippedInputStream.hasNext(GzippedInputStream.java:125)\n&gt;       at GZTest.main(GZTest.java:39)\n&gt;\n&gt; See my test program below - if I change it to just call\n&gt; unzipper.read(b, 0, blockSize) without the outer (it.hasNext())\n&gt; loop, it works fine, but I only get the first gzipped file.\n\n\nTry patching your version of GIS w/ the below:\n\n&gt; @@ -201,7 +202,7 @@\n&gt;       * @return An InputStream.\n&gt;       */\n&gt;      public Object next() {\n&gt; -        // Assume inflater has been reset.  Read in header.\n&gt; +        resetInflater();\n&gt;          try {\n&gt;              readHeader();\n&gt;          } catch (IOException e) {\n&gt;\nThe above seems to make it work for your usage pattern -- the usage \npattern the API seems to hint at -- but I need to test to make sure the \nabove will work for Heritrix before committing (If it doesn&#39;t, I need to \nfix Heritrix).\n\n&gt; I&#39;m not clear on the usage of hasNext() and next() for this\n&gt; (I&#39;ve used Iterator instances in many other classes successfully).\n&gt; Do I get a new GzippedInputStream from each call to next() and\n&gt; use that to get that gzipped-member, or something else?\n&gt;\nThis class needs fixing.  Sorry for the messy API.  The #next method \nshould probably give back a &quot;GzipMember&quot; or some such object/interface \nrather than the GIS itself.  GIS should not have #next and #hasNext \nmethods.  They should be part an Iterator, not methods of GIS.\n\nYours,\nSt.Ack\n\n\n&gt; Any help would be very appreciated. Thanks.\n&gt;\n&gt; Rich Scott\n&gt;\n&gt; ---------------\n&gt; import java.io.BufferedInputStream;\n&gt; import java.io.BufferedReader;\n&gt; import java.io.ByteArrayInputStream;\n&gt; import java.io.ByteArrayOutputStream;\n&gt; import java.io.File;\n&gt; import java.io.FileInputStream;\n&gt; import java.io.FileNotFoundException;\n&gt; import java.io.FileOutputStream;\n&gt; import java.io.IOException;\n&gt; import java.io.InputStream;\n&gt; import java.util.Iterator;\n&gt;\n&gt; import org.archive.io.GzippedInputStream;\n&gt; import org.archive.io.RandomAccessInputStream;\n&gt;\n&gt; public class GZTest {\n&gt;\n&gt;   public static void main(String[] args) {\n&gt;     int blockSize = 4096;\n&gt;     String fileName = &quot;/tmp/multi.gz&quot;;\n&gt;     ByteArrayOutputStream plainBytes =\n&gt;         new ByteArrayOutputStream(1000000);\n&gt;     String plainText = null;\n&gt;\n&gt;     GzippedInputStream unzipper = null;\n&gt;\n&gt;     try {\n&gt;       unzipper = new GzippedInputStream(                            \n&gt;                     new RandomAccessInputStream(new File(fileName)),\n&gt; blockSize);\n&gt;     } catch (IOException e) {\n&gt;       System.err.println(&quot;I/O exception creating unzipper stream: &quot; +\n&gt;                  e.getMessage());\n&gt;     }  \n&gt;     byte[] b = new byte[blockSize];\n&gt;\n&gt;\n&gt;     Iterator it = unzipper.iterator();\n&gt;\n&gt;     while (it.hasNext()) {\n&gt;       GzippedInputStream gzin = (GzippedInputStream) it.next();\n&gt;       int i = 0;\n&gt;       try {\n&gt;         while ((i = gzin.read(b, 0, blockSize)) &gt; 0)\n&gt;           plainBytes.write(b, 0, i);\n&gt;       } catch (IOException e) {\n&gt;         System.err.println(&quot;I/O exception while copying stream: &quot; +\n&gt;                    e.getMessage());\n&gt;       }    \n&gt;     }  \n&gt;\n&gt;     try {\n&gt;       unzipper.close();\n&gt;     } catch (IOException e) {\n&gt;         System.err.println(&quot;I/O exception while closing stream: &quot; +\n&gt;                    e.getMessage());\n&gt;       }    \n&gt;\n&gt;     plainText  = plainBytes.toString();\n&gt;     plainBytes = null;\n&gt;\n&gt;     System.out.println(plainText);\n&gt;   }\n&gt; }\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------------------------------------------\n&gt; *Yahoo! Groups Links*\n&gt;\n&gt;     * To visit your group on the web, go to:\n&gt;       http://groups.yahoo.com/group/archive-crawler/\n&gt;        \n&gt;     * To unsubscribe from this group, send an email to:\n&gt;       archive-crawler-unsubscribe@yahoogroups.com\n&gt;       &lt;mailto:archive-crawler-unsubscribe@yahoogroups.com?subject=Unsubscribe&gt;\n&gt;        \n&gt;     * Your use of Yahoo! Groups is subject to the Yahoo! Terms of\n&gt;       Service &lt;http://docs.yahoo.com/info/terms/&gt;.\n&gt;\n&gt;\n\n\n"}}