{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"stack","from":"stack &lt;stack@...&gt;","replyTo":"LIST","senderId":"_QAlFDhrmSwz_RCu-IcP8meXG87uIJHjjyZBv0-P0f2FM9bkOR7qctt7ghUhsov9i4xpYXwXOy7tDylOM4xZ0Q","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Path to FetchHTTP.java to allow default charsets","postDate":"1090273507","msgId":680,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwRkM0MEUzLjcwMTA1MDdAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDE2NjM2LjEyNDE0LjQ1NjQ2My42MTAxMjRAdGlwaGFyZXMuYmFzaXN0ZWNoLm5ldD4=","referencesHeader":"PDE2NjM2LjEyNDE0LjQ1NjQ2My42MTAxMjRAdGlwaGFyZXMuYmFzaXN0ZWNoLm5ldD4="},"prevInTopic":679,"nextInTopic":0,"prevInTime":679,"nextInTime":681,"topicId":679,"numMessagesInTopic":2,"msgSnippet":"Thanks for the patch Tom.  Applied to HEAD. Good stuff. St.Ack","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 2701 invoked from network); 19 Jul 2004 21:51:32 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m3.grp.scd.yahoo.com with QMQP; 19 Jul 2004 21:51:32 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (209.237.232.202)\n  by mta1.grp.scd.yahoo.com with SMTP; 19 Jul 2004 21:51:32 -0000\r\nReceived: (qmail 9519 invoked by uid 100); 19 Jul 2004 21:42:20 -0000\r\nReceived: from unknown (HELO ?209.237.240.13?) (stack@...@209.237.240.13)\n  by mail-dev.archive.org with SMTP; 19 Jul 2004 21:42:20 -0000\r\nMessage-ID: &lt;40FC40E3.7010507@...&gt;\r\nDate: Mon, 19 Jul 2004 14:45:07 -0700\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7) Gecko/20040704 Debian/1.7-4\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;16636.12414.456463.610124@...&gt;\r\nIn-Reply-To: &lt;16636.12414.456463.610124@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=0.4 required=6.0 tests=AWL autolearn=ham version=2.63\r\nX-eGroups-Remote-IP: 209.237.232.202\r\nFrom: stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] Path to FetchHTTP.java to allow default charsets\r\nX-Yahoo-Group-Post: member; u=168599281\r\n\r\nThanks for the patch Tom.  Applied to HEAD.\nGood stuff.\nSt.Ack\n\n\nTom Emerson wrote:\n\n&gt;Attached is a patch against the HEAD version of FetchHTTP.java that\n&gt;adds support for specifying the &quot;default&quot; charset used when crawling\n&gt;pages that do not specify on in the HTTP Content-Type response header.\n&gt;\n&gt;This references tracker item 989816:\n&gt;\n&gt;http://sourceforge.net/tracker/index.php?func=detail&aid=989816&group_id=73833&atid=539102\n&gt;\n&gt;NOTE: the default value for the setting is the default charset used by\n&gt;the Commons HTTP client, which is ISO-8859-1. Previous discussion\n&gt;centered on using the file.encoding system property, but I don&#39;t think\n&gt;this is a good idea. The code is structured such that changing this\n&gt;discussion will be easily done.\n&gt;\n&gt;Also, I noticed that option settings for the proxy hosts were slightly\n&gt;off: the code looked like they were supposed to be marked as expert\n&gt;settings, but the calls to addElementToDefinitions() did not store the\n&gt;returned element. I fixed this.\n&gt;\n&gt;I plan to add support for sniffing out Content-Type metatags next.\n&gt;\n&gt;Share and enjoy.\n&gt;\n&gt;    -tree\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;  \n&gt;\n&gt;------------------------------------------------------------------------\n&gt;\n&gt;Index: FetchHTTP.java\n&gt;===================================================================\n&gt;RCS file: /cvsroot/archive-crawler/ArchiveOpenCrawler/src/java/org/archive/crawler/fetcher/FetchHTTP.java,v\n&gt;retrieving revision 1.53\n&gt;diff -c -r1.53 FetchHTTP.java\n&gt;*** FetchHTTP.java\t7 Jul 2004 20:10:12 -0000\t1.53\n&gt;--- FetchHTTP.java\t19 Jul 2004 20:25:53 -0000\n&gt;***************\n&gt;*** 49,54 ****\n&gt;--- 49,55 ----\n&gt;  import org.apache.commons.httpclient.HttpMethodBase;\n&gt;  import org.apache.commons.httpclient.HttpRecoverableException;\n&gt;  import org.apache.commons.httpclient.HttpStatus;\n&gt;+ import org.apache.commons.httpclient.HttpConstants;\n&gt;  import org.apache.commons.httpclient.auth.AuthScheme;\n&gt;  import org.apache.commons.httpclient.auth.HttpAuthenticator;\n&gt;  import org.apache.commons.httpclient.auth.MalformedChallengeException;\n&gt;***************\n&gt;*** 106,111 ****\n&gt;--- 107,113 ----\n&gt;      public static final String ATTR_LOAD_COOKIES = &quot;load-cookies-from-file&quot;;\n&gt;      public static final String ATTR_SAVE_COOKIES = &quot;save-cookies-to-file&quot;;\n&gt;      public static final String ATTR_ACCEPT_HEADERS = &quot;accept-headers&quot;;\n&gt;+     public static final String ATTR_DEFAULT_ENCODING = &quot;default-encoding&quot;;\n&gt;     \n&gt;      /**\n&gt;       * SSL trust level setting attribute name.\n&gt;***************\n&gt;*** 116,121 ****\n&gt;--- 118,130 ----\n&gt;      private static Integer DEFAULT_SOTIMEOUT_MS = new Integer(20000);\n&gt;      private static Long DEFAULT_MAX_LENGTH_BYTES = new Long(Long.MAX_VALUE);\n&gt;  \n&gt;+     /**\n&gt;+      * Default character encoding to use for pages that do not specify.\n&gt;+      * Instead of using HttpConstants.DEFAULT_CONTENT_CHARSET directly, define\n&gt;+      * this here so the definition can be trivially changed later.\n&gt;+      */\n&gt;+     private static String DEFAULT_DEFAULT_ENCODING = HttpConstants.DEFAULT_CONTENT_CHARSET;\n&gt;+ \n&gt;     /**\n&gt;       * Default setting for HttpClient&#39;s &quot;strict mode&quot;.\n&gt;       * In strict mode, Cookies are served on a single header.\n&gt;***************\n&gt;*** 175,187 ****\n&gt;              &quot;Accept Headers to include in each request. Each must be the&quot;\n&gt;              + &quot; complete header, e.g., &#39;Accept-Language: en&#39;&quot;));\n&gt;          e.setExpertSetting(true);\n&gt;!         addElementToDefinition(new SimpleType(ATTR_HTTP_PROXY_HOST,\n&gt;              &quot;Proxy hostname (set only if needed)&quot;, &quot;&quot;));\n&gt;          e.setExpertSetting(true);\n&gt;!         addElementToDefinition(new SimpleType(ATTR_HTTP_PROXY_PORT,\n&gt;              &quot;Proxy port (set only if needed)&quot;, &quot;&quot;));\n&gt;          e.setExpertSetting(true);\n&gt;! \n&gt;      }\n&gt;  \n&gt;      protected void innerProcess(CrawlURI curi) throws InterruptedException {\n&gt;--- 184,200 ----\n&gt;              &quot;Accept Headers to include in each request. Each must be the&quot;\n&gt;              + &quot; complete header, e.g., &#39;Accept-Language: en&#39;&quot;));\n&gt;          e.setExpertSetting(true);\n&gt;!         e = addElementToDefinition(new SimpleType(ATTR_HTTP_PROXY_HOST,\n&gt;              &quot;Proxy hostname (set only if needed)&quot;, &quot;&quot;));\n&gt;          e.setExpertSetting(true);\n&gt;!         e = addElementToDefinition(new SimpleType(ATTR_HTTP_PROXY_PORT,\n&gt;              &quot;Proxy port (set only if needed)&quot;, &quot;&quot;));\n&gt;          e.setExpertSetting(true);\n&gt;!         e = addElementToDefinition(new SimpleType(ATTR_DEFAULT_ENCODING,\n&gt;!             &quot;The character encoding to use for files that do not have one&quot;\n&gt;!             + &quot;specified in the HTTP response headers.&quot;,\n&gt;!             DEFAULT_DEFAULT_ENCODING));\n&gt;!         e.setExpertSetting(true);\n&gt;      }\n&gt;  \n&gt;      protected void innerProcess(CrawlURI curi) throws InterruptedException {\n&gt;***************\n&gt;*** 269,275 ****\n&gt;              System.currentTimeMillis());\n&gt;  \n&gt;          // Set the response charset into the HttpRecord if available.\n&gt;!         rec.setCharacterEncoding(((HttpMethodBase)method).getResponseCharSet());\n&gt;  \n&gt;          // Set httpRecorder into curi for convenience of subsequent processors.\n&gt;          curi.setHttpRecorder(rec);\n&gt;--- 282,288 ----\n&gt;              System.currentTimeMillis());\n&gt;  \n&gt;          // Set the response charset into the HttpRecord if available.\n&gt;!         setCharacterEncoding(rec, method);\n&gt;  \n&gt;          // Set httpRecorder into curi for convenience of subsequent processors.\n&gt;          curi.setHttpRecorder(rec);\n&gt;***************\n&gt;*** 308,313 ****\n&gt;--- 321,358 ----\n&gt;      }\n&gt;  \n&gt;      /**\n&gt;+      * Set the character encoding based on the result headers or default.\n&gt;+      *\n&gt;+      * The HttpClient returns its own default encoding (&quot;ISO-8859-1&quot;) if one\n&gt;+      * isn&#39;t specified in the Content-Type response header. We give the user\n&gt;+      * the option of overriding this, so we need to detect the case where the\n&gt;+      * default is returned.\n&gt;+      *\n&gt;+      * Now, it may well be the case that the default returned by HttpClient\n&gt;+      * and the default defined by the user are the same.\n&gt;+      * \n&gt;+      * @param rec Recorder for this request.\n&gt;+      * @param method Method used for the request.\n&gt;+      */\n&gt;+     private void setCharacterEncoding(final HttpRecorder rec,\n&gt;+                                       final HttpMethod method)\n&gt;+     {\n&gt;+         String encoding = null;\n&gt;+ \n&gt;+         try {\n&gt;+             encoding = ((HttpMethodBase) method).getResponseCharSet();\n&gt;+             if (encoding == null || encoding.equals(HttpConstants.DEFAULT_CONTENT_CHARSET)) {\n&gt;+                 encoding = (String) getAttribute(ATTR_DEFAULT_ENCODING);\n&gt;+             }\n&gt;+         }\n&gt;+         catch (Exception e) {\n&gt;+             logger.warning(&quot;Failed get default encoding: &quot; +\n&gt;+                            e.getLocalizedMessage());\n&gt;+         }\n&gt;+         rec.setCharacterEncoding(encoding);\n&gt;+     }\n&gt;+ \n&gt;+     /**\n&gt;       * Cleanup after a failed method execute.\n&gt;       * @param curi CrawlURI we failed on.\n&gt;       * @param method Method we failed on.\n&gt;  \n&gt;\n&gt;------------------------------------------------------------------------\n&gt;\n&gt;\n&gt;  \n&gt;\n\n\n"}}