{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":555496909,"authorName":"Niels","from":"&quot;Niels&quot; &lt;niels.van.hecke@...&gt;","profile":"nielswvh","replyTo":"LIST","senderId":"NRP_Cv3GKwXDoQ4Vm1Be1op-oxr1M_xDkMDFeqb4CzBlL7Gs-u1wkZKYl1S0qlFmqHcT_Uf9N28GAoHmk_aX4uSCyOeiYsL075o","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: Effect of killing a thread on queue","postDate":"1375987657","msgId":8292,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGt1MHA0OStiZTg5QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDUyMDJERjg1LjIwNDAxMDJAYXJjaGl2ZS5vcmc+"},"prevInTopic":8290,"nextInTopic":8296,"prevInTime":8291,"nextInTime":8293,"topicId":8289,"numMessagesInTopic":4,"msgSnippet":"I killed the threads in question and nothing seems to have been lost forever. One such thread was stuck doing some seemingly infinite regex: [ToeThread #159:","rawEmail":"Return-Path: &lt;niels.van.hecke@...&gt;\r\nX-Sender: niels.van.hecke@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 90207 invoked by uid 102); 8 Aug 2013 18:47:38 -0000\r\nX-Received: from unknown (HELO mtaq2.grp.bf1.yahoo.com) (10.193.84.33)\n  by m11.grp.bf1.yahoo.com with SMTP; 8 Aug 2013 18:47:38 -0000\r\nX-Received: (qmail 30351 invoked from network); 8 Aug 2013 18:47:38 -0000\r\nX-Received: from unknown (HELO ng5-ip9.bullet.mail.bf1.yahoo.com) (98.139.165.35)\n  by mtaq2.grp.bf1.yahoo.com with SMTP; 8 Aug 2013 18:47:38 -0000\r\nX-Received: from [98.139.164.121] by ng5.bullet.mail.bf1.yahoo.com with NNFMP; 08 Aug 2013 18:47:38 -0000\r\nX-Received: from [10.193.94.108] by tg2.bullet.mail.bf1.yahoo.com with NNFMP; 08 Aug 2013 18:47:38 -0000\r\nDate: Thu, 08 Aug 2013 18:47:37 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;ku0p49+be89@...&gt;\r\nIn-Reply-To: &lt;5202DF85.2040102@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: &quot;Niels&quot; &lt;niels.van.hecke@...&gt;\r\nSubject: Re: Effect of killing a thread on queue\r\nX-Yahoo-Group-Post: member; u=555496909; y=aKjrv9OV6Opwtf7OkZJr3EaIba1_b-BHUqjoKiX4V0JXK-Qw7-6JDx012FMrqIhcI4jiP07aDTpuoYM\r\nX-Yahoo-Profile: nielswvh\r\n\r\nI killed the threads in question and nothing seems to have been lost foreve=\r\nr. One such thread was stuck doing some seemingly infinite regex:\n[ToeThrea=\r\nd #159: http://www.moleculardevices.com/Company/What-We-Do/Events.html\n Cra=\r\nwlURI http://www.moleculardevices.com/Company/What-We-Do/Events.html L http=\r\n://www.moleculardevices.com/    1 attempts\n    in processor: toConvertMirro=\r\nrWriter\n    ACTIVE for 5d14h10s687ms\n    step: ABOUT_TO_BEGIN_PROCESSOR for=\r\n 5d14h10s203ms\nJava Thread State: RUNNABLE\nBlocked/Waiting On: NONE\n    jav=\r\na.util.regex.Pattern$GroupTail.match(Unknown Source)\n    java.util.regex.Pa=\r\nttern$CharProperty.match(Unknown Source)\n    java.util.regex.Pattern$Curly.=\r\nmatch0(Unknown Source)\n    java.util.regex.Pattern$Curly.match(Unknown Sour=\r\nce)\n    java.util.regex.Pattern$GroupHead.match(Unknown Source)\n    java.ut=\r\nil.regex.Pattern$Loop.match(Unknown Source)\n    java.util.regex.Pattern$Gro=\r\nupTail.match(Unknown Source)\n    java.util.regex.Pattern$CharProperty.match=\r\n(Unknown Source)\n    java.util.regex.Pattern$Curly.match0(Unknown Source)\n =\r\n   java.util.regex.Pattern$Curly.match(Unknown Source)\n    java.util.regex.=\r\nPattern$GroupHead.match(Unknown Source)\n    java.util.regex.Pattern$Loop.ma=\r\ntch(Unknown Source)\n    java.util.regex.Pattern$GroupTail.match(Unknown Sou=\r\nrce)\n    java.util.regex.Pattern$CharProperty.match(Unknown Source)\n    jav=\r\na.util.regex.Pattern$Curly.match0(Unknown Source)\n    java.util.regex.Patte=\r\nrn$Curly.match(Unknown Source)\n    java.util.regex.Pattern$GroupHead.match(=\r\nUnknown Source)\n    java.util.regex.Pattern$Loop.match(Unknown Source)\n    =\r\njava.util.regex.Pattern$GroupTail.match(Unknown Source)\n    java.util.regex=\r\n.Pattern$CharProperty.match(Unknown Source)\n    java.util.regex.Pattern$Cur=\r\nly.match0(Unknown Source)\n    java.util.regex.Pattern$Curly.match(Unknown S=\r\nource)\n    java.util.regex.Pattern$GroupHead.match(Unknown Source)\n    java=\r\n.util.regex.Pattern$Loop.match(Unknown Source)\n    java.util.regex.Pattern$=\r\nGroupTail.match(Unknown Source)\n    java.util.regex.Pattern$CharProperty.ma=\r\ntch(Unknown Source)\n    java.util.regex.Pattern$Curly.match0(Unknown Source=\r\n)\n    java.util.regex.Pattern$Curly.match(Unknown Source)\n    java.util.reg=\r\nex.Pattern$GroupHead.match(Unknown Source)\n    java.util.regex.Pattern$Loop=\r\n.match(Unknown Source)\n    java.util.regex.Pattern$GroupTail.match(Unknown =\r\nSource)\n    java.util.regex.Pattern$CharProperty.match(Unknown Source)\n    =\r\njava.util.regex.Pattern$Curly.match0(Unknown Source)\n    java.util.regex.Pa=\r\nttern$Curly.match(Unknown Source)\n    java.util.regex.Pattern$GroupHead.mat=\r\nch(Unknown Source)\n    java.util.regex.Pattern$Loop.match(Unknown Source)\n =\r\n   java.util.regex.Pattern$GroupTail.match(Unknown Source)\n    java.util.re=\r\ngex.Pattern$CharProperty.match(Unknown Source)\n    java.util.regex.Pattern$=\r\nCurly.match0(Unknown Source)\n    java.util.regex.Pattern$Curly.match(Unknow=\r\nn Source)\n    java.util.regex.Pattern$GroupHead.match(Unknown Source)\n    j=\r\nava.util.regex.Pattern$Loop.match(Unknown Source)\n    java.util.regex.Patte=\r\nrn$GroupTail.match(Unknown Source)\n    java.util.regex.Pattern$CharProperty=\r\n.match(Unknown Source)\n    java.util.regex.Pattern$Curly.match0(Unknown Sou=\r\nrce)\n    java.util.regex.Pattern$Curly.match(Unknown Source)\n    java.util.=\r\nregex.Pattern$GroupHead.match(Unknown Source)\n    java.util.regex.Pattern$L=\r\noop.match(Unknown Source)\n    java.util.regex.Pattern$GroupTail.match(Unkno=\r\nwn Source)\n    java.util.regex.Pattern$CharProperty.match(Unknown Source)\n =\r\n   java.util.regex.Pattern$Curly.match0(Unknown Source)\n    java.util.regex=\r\n.Pattern$Curly.match(Unknown Source)\n    java.util.regex.Pattern$GroupHead.=\r\nmatch(Unknown Source)\n    java.util.regex.Pattern$Loop.match(Unknown Source=\r\n)\n    java.util.regex.Pattern$GroupTail.match(Unknown Source)\n    java.util=\r\n.regex.Pattern$CharProperty.match(Unknown Source)\n    java.util.regex.Patte=\r\nrn$Curly.match0(Unknown Source)\n    java.util.regex.Pattern$Curly.match(Unk=\r\nnown Source)\n    java.util.regex.Pattern$GroupHead.match(Unknown Source)\n  =\r\n  java.util.regex.Pattern$Loop.match(Unknown Source)\n    java.util.regex.Pa=\r\nttern$GroupTail.match(Unknown Source)\n    java.util.regex.Pattern$CharPrope=\r\nrty.match(Unknown Source)\n    java.util.regex.Pattern$Curly.match0(Unknown =\r\nSource)\n    java.util.regex.Pattern$Curly.match(Unknown Source)\n    java.ut=\r\nil.regex.Pattern$GroupHead.match(Unknown Source)\n    java.util.regex.Patter=\r\nn$Loop.match(Unknown Source)\n    java.util.regex.Pattern$GroupTail.match(Un=\r\nknown Source)\n    java.util.regex.Pattern$CharProperty.match(Unknown Source=\r\n)\n    java.util.regex.Pattern$Curly.match0(Unknown Source)\n    java.util.re=\r\ngex.Pattern$Curly.match(Unknown Source)\n    java.util.regex.Pattern$GroupHe=\r\nad.match(Unknown Source)\n    java.util.regex.Pattern$Loop.match(Unknown Sou=\r\nrce)\n    java.util.regex.Pattern$GroupTail.match(Unknown Source)\n    java.u=\r\ntil.regex.Pattern$CharProperty.match(Unknown Source)\n    java.util.regex.Pa=\r\nttern$Curly.match0(Unknown Source)\n    java.util.regex.Pattern$Curly.match(=\r\nUnknown Source)\n    java.util.regex.Pattern$GroupHead.match(Unknown Source)=\r\n\n    java.util.regex.Pattern$Loop.match(Unknown Source)\n    java.util.regex=\r\n.Pattern$GroupTail.match(Unknown Source)\n    java.util.regex.Pattern$CharPr=\r\noperty.match(Unknown Source)\n    java.util.regex.Pattern$Curly.match0(Unkno=\r\nwn Source)\n    java.util.regex.Pattern$Curly.match(Unknown Source)\n    java=\r\n.util.regex.Pattern$GroupHead.match(Unknown Source)\n    java.util.regex.Pat=\r\ntern$Loop.match(Unknown Source)\n    java.util.regex.Pattern$GroupTail.match=\r\n(Unknown Source)\n    java.util.regex.Pattern$CharProperty.match(Unknown Sou=\r\nrce)\n    java.util.regex.Pattern$Curly.match0(Unknown Source)\n    java.util=\r\n.regex.Pattern$Curly.match(Unknown Source)\n    java.util.regex.Pattern$Grou=\r\npHead.match(Unknown Source)\n    java.util.regex.Pattern$Loop.match(Unknown =\r\nSource)\n    java.util.regex.Pattern$GroupTail.match(Unknown Source)\n    jav=\r\na.util.regex.Pattern$CharProperty.match(Unknown Source)\n    java.util.regex=\r\n.Pattern$Curly.match0(Unknown Source)\n    java.util.regex.Pattern$Curly.mat=\r\nch(Unknown Source)\n    java.util.regex.Pattern$GroupHead.match(Unknown Sour=\r\nce)\n    java.util.regex.Pattern$Loop.match(Unknown Source)\n    java.util.re=\r\ngex.Pattern$GroupTail.match(Unknown Source)\n    java.util.regex.Pattern$Cha=\r\nrProperty.match(Unknown Source)\n    java.util.regex.Pattern$Curly.match0(Un=\r\nknown Source)\n    java.util.regex.Pattern$Curly.match(Unknown Source)\n    j=\r\nava.util.regex.Pattern$GroupHead.match(Unknown Source)\n    java.util.regex.=\r\nPattern$Loop.match(Unknown Source)\n    java.util.regex.Pattern$GroupTail.ma=\r\ntch(Unknown Source)\n    java.util.regex.Pattern$CharProperty.match(Unknown =\r\nSource)\n    java.util.regex.Pattern$Curly.match0(Unknown Source)\n    java.u=\r\ntil.regex.Pattern$Curly.match(Unknown Source)\n    java.util.regex.Pattern$G=\r\nroupHead.match(Unknown Source)\n    java.util.regex.Pattern$Loop.match(Unkno=\r\nwn Source)\n    java.util.regex.Pattern$GroupTail.match(Unknown Source)\n    =\r\njava.util.regex.Pattern$CharProperty.match(Unknown Source)\n    java.util.re=\r\ngex.Pattern$Curly.match0(Unknown Source)\n    java.util.regex.Pattern$Curly.=\r\nmatch(Unknown Source)\n    java.util.regex.Pattern$GroupHead.match(Unknown S=\r\nource)\n    java.util.regex.Pattern$Loop.match(Unknown Source)\n    java.util=\r\n.regex.Pattern$GroupTail.match(Unknown Source)\n    java.util.regex.Pattern$=\r\nCharProperty.match(Unknown Source)\n    java.util.regex.Pattern$Curly.match0=\r\n(Unknown Source)\n    java.util.regex.Pattern$Curly.match(Unknown Source)\n  =\r\n  java.util.regex.Pattern$GroupHead.match(Unknown Source)\n    java.util.reg=\r\nex.Pattern$Loop.match(Unknown Source)\n    java.util.regex.Pattern$GroupTail=\r\n.match(Unknown Source)\n    java.util.regex.Pattern$CharProperty.match(Unkno=\r\nwn Source)\n    java.util.regex.Pattern$Curly.match0(Unknown Source)\n    jav=\r\na.util.regex.Pattern$Curly.match(Unknown Source)\n    java.util.regex.Patter=\r\nn$GroupHead.match(Unknown Source)\n    java.util.regex.Pattern$Loop.match(Un=\r\nknown Source)\n    java.util.regex.Pattern$GroupTail.match(Unknown Source)\n =\r\n   java.util.regex.Pattern$CharProperty.match(Unknown Source)\n    java.util=\r\n.regex.Pattern$Curly.match0(Unknown Source)\n    java.util.regex.Pattern$Cur=\r\nly.match(Unknown Source)\n    java.util.regex.Pattern$GroupHead.match(Unknow=\r\nn Source)\n    java.util.regex.Pattern$Loop.match(Unknown Source)\n    java.u=\r\ntil.regex.Pattern$GroupTail.match(Unknown Source)\n    java.util.regex.Patte=\r\nrn$CharProperty.match(Unknown Source)\n    java.util.regex.Pattern$Curly.mat=\r\nch0(Unknown Source)\n    java.util.regex.Pattern$Curly.match(Unknown Source)=\r\n\n    java.util.regex.Pattern$GroupHead.match(Unknown Source)\n    java.util.=\r\nregex.Pattern$Loop.match(Unknown Source)\n    java.util.regex.Pattern$GroupT=\r\nail.match(Unknown Source)\n    java.util.regex.Pattern$CharProperty.match(Un=\r\nknown Source)\n    java.util.regex.Pattern$Curly.match0(Unknown Source)\n    =\r\njava.util.regex.Pattern$Curly.match(Unknown Source)\n    java.util.regex.Pat=\r\ntern$GroupHead.match(Unknown Source)\n    java.util.regex.Pattern$Loop.match=\r\n(Unknown Source)\n    java.util.regex.Pattern$GroupTail.match(Unknown Source=\r\n)\n    java.util.regex.Pattern$CharProperty.match(Unknown Source)\n    java.u=\r\ntil.regex.Pattern$Curly.match0(Unknown Source)\n    java.util.regex.Pattern$=\r\nCurly.match(Unknown Source)\n    java.util.regex.Pattern$GroupHead.match(Unk=\r\nnown Source)\n    java.util.regex.Pattern$Loop.match(Unknown Source)\n    jav=\r\na.util.regex.Pattern$GroupTail.match(Unknown Source)\n    java.util.regex.Pa=\r\nttern$CharProperty.match(Unknown Source)\n    java.util.regex.Pattern$Curly.=\r\nmatch0(Unknown Source)\n    java.util.regex.Pattern$Curly.match(Unknown Sour=\r\nce)\n    java.util.regex.Pattern$GroupHead.match(Unknown Source)\n    java.ut=\r\nil.regex.Pattern$Loop.match(Unknown Source)\n    java.util.regex.Pattern$Gro=\r\nupTail.match(Unknown Source)\n    java.util.regex.Pattern$CharProperty.match=\r\n(Unknown Source)\n    java.util.regex.Pattern$Curly.match0(Unknown Source)\n =\r\n   java.util.regex.Pattern$Curly.match(Unknown Source)\n    java.util.regex.=\r\nPattern$GroupHead.match(Unknown Source)\n    java.util.regex.Pattern$Loop.ma=\r\ntchInit(Unknown Source)\n    java.util.regex.Pattern$Prolog.match(Unknown So=\r\nurce)\n    java.util.regex.Pattern$CharProperty.match(Unknown Source)\n    ja=\r\nva.util.regex.Pattern$BranchConn.match(Unknown Source)\n    java.util.regex.=\r\nPattern$GroupTail.match(Unknown Source)\n    java.util.regex.Pattern$Slice.m=\r\natch(Unknown Source)\n    java.util.regex.Pattern$Curly.match0(Unknown Sourc=\r\ne)\n    java.util.regex.Pattern$Curly.match(Unknown Source)\n    java.util.re=\r\ngex.Pattern$GroupHead.match(Unknown Source)\n    java.util.regex.Pattern$Bra=\r\nnch.match(Unknown Source)\n    java.util.regex.Pattern$Begin.match(Unknown S=\r\nource)\n    java.util.regex.Matcher.match(Unknown Source)\n    java.util.rege=\r\nx.Matcher.matches(Unknown Source)\n    org.archive.modules.writer.LocalMirro=\r\nrWriterProcessor.rewriteLink(LocalMirrorWriterProcessor.java:260)\n    org.a=\r\nrchive.modules.writer.LocalMirrorWriterProcessor.rewriteLinksFromElements(L=\r\nocalMirrorWriterProcessor.java:359)\n    org.archive.modules.writer.LocalMir=\r\nrorWriterProcessor.innerProcess(LocalMirrorWriterProcessor.java:207)\n    or=\r\ng.archive.modules.Processor.innerProcessResult(Processor.java:175)\n    org.=\r\narchive.modules.Processor.process(Processor.java:142)\n    org.archive.modul=\r\nes.ProcessorChain.process(ProcessorChain.java:131)\n    org.archive.crawler.=\r\nframework.ToeThread.run(ToeThread.java:151)\n]\n\nAnother seemed to be stuck t=\r\nrying to figure out if a file existed:\n[ToeThread #273: http://honeywell.co=\r\nm/Pages/h%00t%00t%00p%00:%00/%00/%00t%00w%00i%00t%00t%00e%00r%00.%00c%00o%0=\r\n0m%00/%00h%00o%00m%00e%00?%00s%00t%00a%00t%00u%00s%00=3D\n CrawlURI http://h=\r\noneywell.com/Pages/h%00t%00t%00p%00:%00/%00/%00t%00w%00i%00t%00t%00e%00r%00=\r\n.%00c%00o%00m%00/%00h%00o%00m%00e%00?%00s%00t%00a%00t%00u%00s%00=3D EX http=\r\n://honeywell.com/_layouts/InternetFramework/Scripts/Honeywell_HeaderFooter.=\r\njs    2 attempts\n    in processor: toConvertMirrorWriter\n    ACTIVE for 5d1=\r\n8h2m16s780ms\n    step: ABOUT_TO_BEGIN_PROCESSOR for 5d18h2m12s911ms\nJava Th=\r\nread State: RUNNABLE\nBlocked/Waiting On: NONE\n    java.io.WinNTFileSystem.g=\r\netBooleanAttributes(Native Method)\n    java.io.File.exists(Unknown Source)\n=\r\n    org.archive.modules.writer.MirrorWriterProcessor$PathSegment.existsMayb=\r\neCaseSensitive(MirrorWriterProcessor.java:859)\n    org.archive.modules.writ=\r\ner.MirrorWriterProcessor$EndSegment.addToPath(MirrorWriterProcessor.java:11=\r\n86)\n    org.archive.modules.writer.MirrorWriterProcessor.uriToFile(MirrorWr=\r\niterProcessor.java:720)\n    org.archive.modules.writer.MirrorWriterProcesso=\r\nr.uriToFile(MirrorWriterProcessor.java:591)\n    org.archive.modules.writer.=\r\nMirrorWriterProcessor.innerProcess(MirrorWriterProcessor.java:416)\n    org.=\r\narchive.modules.writer.LocalMirrorWriterProcessor.innerProcess(LocalMirrorW=\r\nriterProcessor.java:121)\n    org.archive.modules.Processor.innerProcessResu=\r\nlt(Processor.java:175)\n    org.archive.modules.Processor.process(Processor.=\r\njava:142)\n    org.archive.modules.ProcessorChain.process(ProcessorChain.jav=\r\na:131)\n    org.archive.crawler.framework.ToeThread.run(ToeThread.java:151)\n=\r\n]\n\nThose are the two instances of blockage from the thread report. I can&#39;t =\r\nimagine why the regex pattern matcher is having such a hard time.\n\nNiels\n\n-=\r\n-- In archive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@...&gt; wrote:\n&gt;\n&gt; =\r\nOn 8/7/13 3:12 PM, Niels wrote:\n&gt; &gt; Hello, Is there any documentation about=\r\n what happens to the queue\n&gt; &gt; when a toe thread is killed? I have been wai=\r\nting for 21 threads to\n&gt; &gt; finish for 2 days now and am thinking of just ki=\r\nlling them off. Is\n&gt; &gt; the queue at all affected if threads are killed half=\r\n-way through?\n&gt; &gt; Mainly, I care if the thread hold large amounts of inform=\r\nation about\n&gt; &gt; the current crawl state and thus would heavily affect the c=\r\nrawl\n&gt; &gt; integrity. Niels\n&gt; \n&gt; Killing a thread via the ToeThread.kill() me=\r\nthod tries to be safe, \n&gt; aborting the URI in progress as a failure and tel=\r\nling the ToeThread not \n&gt; to proceed any further.\n&gt; \n&gt; But, depending on th=\r\ne exact cause/position of the stall, and whether the \n&gt; ToeThread is doing =\r\nanything else (especially anything involving custom \n&gt; components/state), i=\r\nt might not be completely clean.\n&gt; \n&gt; Can you say more about the relevant T=\r\noeThreads&#39; current state?\n&gt; \n&gt; What Heritrix version, and what does a threa=\r\nd stack dump show?\n&gt; \n&gt; Standard config and behavior should make network fe=\r\ntches time-out much \n&gt; earlier, so there&#39;s something unique (perhaps an und=\r\niagnosed/unnoticed \n&gt; error?) if you have threads that seem to stuck doing =\r\nthe exact same \n&gt; thing for many hours.\n&gt; \n&gt; - Gordon\n&gt;\n\n\n"}}