{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":422010605,"authorName":"anas elghafari","from":"anas elghafari &lt;anas.elghafari@...&gt;","replyTo":"LIST","senderId":"vyqxOE17PRUucLY1d2sauHkWxh3iCxA7MmgxsFDPrhwjwmIYVMPt-AN1QDoK7lOk4WaiH_XoJdK1m2D7XvuaIAjIU-Lo4ZO_PpsyFxBOy4c","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [archive-crawler] Decide rules","postDate":"1262029549","msgId":6250,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDZhMDI5ZTJkMDkxMjI4MTE0NXY2YjhkZjAxNGcxNDkwNjliYjdkYTJiZDIyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzI3NkIzMDlAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1Pg==","referencesHeader":"PDJEMTI3RjExREM3OTcxNEU5QjZBNDNBQzk0NTgxNDdGMzI3NkIyRkJAc3VleDA3LW1ieC0wMy5hZC5zeXIuZWR1PgkgPDZhMDI5ZTJkMDkxMjI2MTAyOG03MGJkNTE5YW0zNGNhMzRmNDEwNmZkMjFAbWFpbC5nbWFpbC5jb20+CSA8MkQxMjdGMTFEQzc5NzE0RTlCNkE0M0FDOTQ1ODE0N0YzMjc2QjMwM0BzdWV4MDctbWJ4LTAzLmFkLnN5ci5lZHU+CSA8NmEwMjllMmQwOTEyMjgwODM1czUwMTM2ZmYweDc4MDZmZWUzMjJlY2Y0ZThAbWFpbC5nbWFpbC5jb20+CSA8MkQxMjdGMTFEQzc5NzE0RTlCNkE0M0FDOTQ1ODE0N0YzMjc2QjMwOUBzdWV4MDctbWJ4LTAzLmFkLnN5ci5lZHU+"},"prevInTopic":6249,"nextInTopic":6252,"prevInTime":6249,"nextInTime":6251,"topicId":6240,"numMessagesInTopic":14,"msgSnippet":"I am relatively new to Heritrix, but as far as I understand things, there are only two ways to input rules into the system: you either use the shipped in rules","rawEmail":"Return-Path: &lt;anas.elghafari@...&gt;\r\nX-Sender: anas.elghafari@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 59192 invoked from network); 28 Dec 2009 19:45:51 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m2.grp.sp2.yahoo.com with QMQP; 28 Dec 2009 19:45:51 -0000\r\nX-Received: from unknown (HELO mail-bw0-f209.google.com) (209.85.218.209)\n  by mta2.grp.sp2.yahoo.com with SMTP; 28 Dec 2009 19:45:51 -0000\r\nX-Received: by bwz1 with SMTP id 1so7805257bwz.13\n        for &lt;archive-crawler@yahoogroups.com&gt;; Mon, 28 Dec 2009 11:45:50 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.204.154.150 with SMTP id o22mr1788583bkw.154.1262029550052; \n\tMon, 28 Dec 2009 11:45:50 -0800 (PST)\r\nIn-Reply-To: &lt;2D127F11DC79714E9B6A43AC9458147F3276B309@...&gt;\r\nReferences: &lt;2D127F11DC79714E9B6A43AC9458147F3276B2FB@...&gt;\n\t &lt;6a029e2d0912261028m70bd519am34ca34f4106fd21@...&gt;\n\t &lt;2D127F11DC79714E9B6A43AC9458147F3276B303@...&gt;\n\t &lt;6a029e2d0912280835s50136ff0x7806fee322ecf4e8@...&gt;\n\t &lt;2D127F11DC79714E9B6A43AC9458147F3276B309@...&gt;\r\nDate: Mon, 28 Dec 2009 20:45:49 +0100\r\nMessage-ID: &lt;6a029e2d0912281145v6b8df014g149069bb7da2bd22@...&gt;\r\nTo: archive-crawler@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0015175cf77206e8d3047bcf2727\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: anas elghafari &lt;anas.elghafari@...&gt;\r\nSubject: Re: [archive-crawler] Decide rules\r\nX-Yahoo-Group-Post: member; u=422010605\r\n\r\n\r\n--0015175cf77206e8d3047bcf2727\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI am relatively new to Heritrix, but as far as I understand things, there\na=\r\nre only two ways to input rules into the system: you either use the shipped=\r\n\nin rules and modify the settings, or you write your own. Writing your own\n=\r\nDecideRules means writing code. I don&#39;t know if there is a way around that.=\r\n\n(There might be some rule shipped in with heritrix that does what you want=\r\n.\nBut I am not familiar enough with the shipped-in DecideRules to be able t=\r\no\ntell you).\n\nIn any case, writing a DecideRule is fairly simple. Here is a=\r\nn example of a\nDecideRule I wrote to reject candidateURIs that end with cer=\r\ntain suffixes. I\nmodelled it after the DecideRules that are shipped with He=\r\nritrix. Note that\nyou will be doing this for CrawlURI instead of a Candidat=\r\neURI:\n\npublic class SuffixBasedRejectionRule extends DecideRule {\n\n private=\r\n static final long serialVersionUID =3D\nArchiveUtils.classnameBasedUID(Suff=\r\nixBasedRejectionRule.class,1);\n\nprivate static final Logger logger =3D\n\n   =\r\n     Logger.getLogger(SuffixBasedRejectionRule.class.getName());\n\nprivate s=\r\ntatic StringList disallowedSuffixes;\n\n public SuffixBasedRejectionRule(Stri=\r\nng name) {\n\nsuper(name);\n\nsetDescription(&quot;Reject URIs based on their suffix=\r\nes&quot;);\n\ndisallowedSuffixes =3D new StringList(&quot;Disallowed Suffixes&quot;,\n\n &quot;A li=\r\nst of suffixes where, if a URI ends with one of those suffixes the URI\nwill=\r\n be rejected.&quot;);\n\naddElementToDefinition(disallowedSuffixes);\n\n            =\r\n    //making disallowedSuffixes a field that can be set through\nthe WUI\n\n}\n=\r\n\n public Object decisionFor(Object o) {\n\nif (o instanceof CandidateURI =3D=\r\n=3D false){\n\n            // Only handles CandidtaeURIs\n\n            if (log=\r\nger.isLoggable(Level.INFO)) {\n\n                logger.info(&quot;Error: Object p=\r\nassed for evaluation was not a &quot;+\n\n                    &quot;CandidateURI. &quot; + o=\r\n.toString());\n\n            }\n\n            return REJECT;\n\n        }\n\n Candi=\r\ndateURI curi =3D (CandidateURI) o;\n\nString suffix =3D curi.toString().subst=\r\nring(curi.toString().lastIndexOf(&#39;.&#39;\n)+1);\n\nif (disallowedSuffixes.contains=\r\n(suffix)) {\n\nreturn REJECT;\n\n}\n\nelse {\n\nreturn PASS;\n\n}\n\n  }\n\n}\n\n\n\nThe cons=\r\ntructor makes disallowedSuffixes a field that can be set through the\nWUI. t=\r\nhe User enters the unwanted suffixes in the WUI and the method\ndecisionFor =\r\nchecks each URI to see if it ends with one of the unwanted\nsuffixes and rej=\r\nects it if it does.\n\n\nIf you write your own DecideRule, you must write its =\r\nname thus\n&quot;PackagenameHere.youDecideRuleNameHere&quot; into a file called\nDecide=\r\nRule.options\n\n\nyou jar the file and the your decide rule compilation and pu=\r\nt the resulting\njar file in Heritrix/lib. That is it! Your rule will then b=\r\ne available\nthrough the WUI and you can use it.\n\n\n\n\n\nOn Mon, Dec 28, 2009 a=\r\nt 7:31 PM, Steven A Rowe &lt;sarowe@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Hi Anas,\n&gt;\n&gt; You&#39;re=\r\n right, the sequence effect is not OR. I don&#39;t know enough about the\n&gt; lang=\r\nuage of process flows to put the right label on what Heritrix is doing\n&gt; :)=\r\n.\n&gt;\n&gt; I would like to be able to write rules (not code) that allow me to st=\r\namp\n&gt; REJECT on URIs that have content type text/html AND are larger than 1=\r\n0MB,\n&gt; and PASS for everything else. How can I do that?\n&gt;\n&gt; Steve\n&gt;\n&gt;\n&gt; On =\r\n12/28/2009 at 11:35 AM, anas elghafari wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; I don&#39;t think the=\r\n effect of the sequence is OR. Every rule stamps the\n&gt; &gt; URI with ACCEPT, R=\r\nEJECT or PASS. And the last non-pass is the operative\n&gt; &gt; judgment. So I do=\r\nn&#39;t quite understand the problem. Just have your rules\n&gt; &gt; stamp REJECT on =\r\nwhat you don&#39;t like, and PASS on everything else... and\n&gt; &gt; this gives the =\r\neffect of combining the reject rules with &quot;AND&quot;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On Sat, Dec 26,=\r\n 2009 at 9:05 PM, Steven A Rowe &lt;sarowe@...&lt;sarowe%40syr.edu&gt;&gt;\n&gt; wrote:=\r\n\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Hi Anas,\n&gt; &gt;\n&gt; &gt; I was hoping that you (or someone els=\r\ne on this list) would say\n&gt; &gt; that I was missing something that would allow=\r\n me to only write rules,\n&gt; &gt; and not have to write code.\n&gt; &gt;\n&gt; &gt; Combining =\r\nmultiple conditions together seems like such a basic\n&gt; &gt; requirement I&#39;m su=\r\nrprised it doesn&#39;t already exist - something like the\n&gt; &gt; ability to overri=\r\nde the logical operator on DecideRuleSequence\n&gt; &gt; (currently hardwired to O=\r\nR) to other possibilities like AND. Then I\n&gt; &gt; could write something like (=\r\npardon the pseudocode):\n&gt; &gt;\n&gt; &gt; OrDecideRuleSequence : decision=3DLASTMATCH=\r\n RejectDecideRule\n&gt; &gt; SurtPrefixedDecideRule : seedsAsSurtPrefixes=3Dtrue ;=\r\n decision=3DACCEPT\n&gt; &gt; AndDecideRuleSequence : decision=3DREJECT\n&gt; &gt; Conten=\r\ntTypeMatchesRegexDecideRule : regex=3Dtext/html\n&gt; &gt; ExceedsDocumentLengthTh=\r\nresholdDecideRule :\n&gt; &gt; contentLengthThreshold=3D10000000 AndDecideRuleSequ=\r\nence : decision=3DREJECT\n&gt; &gt; ContentTypeMatchesRegexDecideRule : regex=3Dte=\r\nxt/plain\n&gt; &gt; ExceedsDocumentLengthThresholdDecideRule :\n&gt; &gt; contentLengthTh=\r\nreshold=3D100000\n&gt; &gt;\n&gt; &gt; Is this a bad idea?\n&gt; &gt;\n&gt; &gt; Steve\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; =\r\nOn 12/26/2009 at 1:28 PM, anas elghafari wrote: &gt; &gt; &gt; You can write\n&gt; &gt; you=\r\nr own decideRules that subclass the DecideRule, and you &gt; overwrite\n&gt; &gt; the=\r\n decisionFor(Object o) method. In the decisionFor(Object o) &gt; you\n&gt; &gt; check=\r\n if the Object is a CrawlURI, if so you typecast into CrawlURI &gt;\n&gt; &gt; and th=\r\nen you will be able to check the contenttype and content size &gt;\n&gt; &gt; (look a=\r\nt CrawlURI API). And you can issue decesion REJECT for the uris\n&gt; &gt; &gt; that =\r\ndon&#39;t fulfill you criteria. &gt; &gt; You can also do this by adding\n&gt; &gt; a proces=\r\nsor, where -in your overwriting &gt; of innerProcess(CrawlURI\n&gt; &gt; curi)- you c=\r\nheck the type and size and then you &gt; reject those URIs you\n&gt; &gt; don&#39;t want =\r\nto process by calling &gt;\n&gt; &gt; curi.skipToProcessorChain(getCrawlController().=\r\ngetPostProcessorChain())\n&gt; &gt; &gt; &gt; beware that DecideRules/Filter inserted be=\r\nfore the extraction will\n&gt; &gt; &gt; prevent the CrawlJob from ever getting to Ur=\r\nis that are acceptable,\n&gt; &gt; &gt; because the path to them goes through URIs th=\r\nat are not. &gt; &gt; Anas\n&gt; &gt; &gt; &gt; On Wed, Dec 23, 2009 at 1:48 AM, Steven A Rowe=\r\n &lt;sarowe@...&lt;sarowe%40syr.edu&gt;\n&gt; &gt; &lt;mailto:sarowe%40syr.edu &lt;sarowe%254=\r\n0syr.edu&gt;&gt; &gt; wrote: &gt; &gt; Hi, &gt; &gt; I\n&gt; want to write\n&gt;\n&gt; &gt; decide-rules that r=\r\neject resources based on two &gt; conditions:\n&gt; &gt; content-length and content-t=\r\nype (e.g., text/html resources &gt; larger\n&gt; &gt; than 10MB, and text/plain resou=\r\nrces larger than 100KB), but I &gt; can&#39;t\n&gt; &gt; find any way to logically AND ru=\r\nle subsets together. &gt; &gt; Is there a\n&gt; &gt; way to write decide-rules that woul=\r\nd achieve what I &gt; want? Should I be\n&gt; &gt; using ScriptedDecideRules? &gt; &gt; Tha=\r\nnks (for your patience with a\n&gt; &gt; newbie), &gt; Steve\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n=\r\n&gt;\n&gt;  \n&gt;\n\r\n--0015175cf77206e8d3047bcf2727\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI am relatively new to Heritrix, but as far as I understand things, there a=\r\nre only two ways to input rules into the system: you either use the shipped=\r\n in rules and modify the settings, or you write your own. Writing your own =\r\nDecideRules means writing code. I don&#39;t know if there is a way around t=\r\nhat. (There might be some rule shipped in with heritrix that does what you =\r\nwant. But I am not familiar enough with the shipped-in DecideRules to be ab=\r\nle to tell you).&lt;div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In any case, writing a DecideRule=\r\n is fairly simple. Here is an example of a DecideRule I wrote to reject can=\r\ndidateURIs that end with certain suffixes. I modelled it after the DecideRu=\r\nles that are shipped with Heritrix. Note that you will be doing this for Cr=\r\nawlURI instead of a CandidateURI:&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=3D&quot;mar=\r\ngin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;&lt;span style=3D&quot;color: #7=\r\nf0055&quot;&gt;public&lt;/span&gt; &lt;span style=3D&quot;color: #7f0055&quot;&gt;class&lt;/span&gt; SuffixBase=\r\ndRejectionRule &lt;span style=3D&quot;color: #7f0055&quot;&gt;extends&lt;/span&gt; DecideRule {&lt;/=\r\np&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-h=\r\neight: 15.0px&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/=\r\nspan&gt;&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;=\r\n&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;&lt;span sty=\r\nle=3D&quot;color: #7f0055&quot;&gt;private&lt;/span&gt; &lt;span style=3D&quot;color: #7f0055&quot;&gt;static&lt;=\r\n/span&gt; &lt;span style=3D&quot;color: #7f0055&quot;&gt;final&lt;/span&gt; &lt;span style=3D&quot;color: #7=\r\nf0055&quot;&gt;long&lt;/span&gt; &lt;span style=3D&quot;color: #0000c0&quot;&gt;serialVersionUID&lt;/span&gt; =\r\n=3D ArchiveUtils.classnameBasedUID(SuffixBasedRejectionRule.&lt;span style=3D&quot;=\r\ncolor: #7f0055&quot;&gt;class&lt;/span&gt;,1);&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px=\r\n 0.0px; font: 11.0px Monaco; color: #7f0055&quot;&gt;&lt;span style=3D&quot;color: #000000&quot;=\r\n&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;&lt;/span&gt;pr=\r\nivate&lt;span style=3D&quot;color: #000000&quot;&gt; &lt;/span&gt;static&lt;span style=3D&quot;color: #00=\r\n0000&quot;&gt; &lt;/span&gt;final&lt;span style=3D&quot;color: #000000&quot;&gt; Logger &lt;/span&gt;&lt;span styl=\r\ne=3D&quot;color: #0000c0&quot;&gt;logger&lt;/span&gt;&lt;span style=3D&quot;color: #000000&quot;&gt; =3D&lt;/span=\r\n&gt;&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;=\r\n=A0 =A0 =A0 =A0 Logger.getLogger(SuffixBasedRejectionRule.&lt;span style=3D&quot;co=\r\nlor: #7f0055&quot;&gt;class&lt;/span&gt;.getName());&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px =\r\n0.0px 0.0px; font: 11.0px Monaco; color: #0000c0&quot;&gt;&lt;span style=3D&quot;color: #00=\r\n0000&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;&lt;/sp=\r\nan&gt;&lt;span style=3D&quot;color: #7f0055&quot;&gt;private&lt;/span&gt;&lt;span style=3D&quot;color: #0000=\r\n00&quot;&gt; &lt;/span&gt;&lt;span style=3D&quot;color: #7f0055&quot;&gt;static&lt;/span&gt;&lt;span style=3D&quot;colo=\r\nr: #000000&quot;&gt; StringList &lt;/span&gt;disallowedSuffixes&lt;span style=3D&quot;color: #000=\r\n000&quot;&gt;;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0p=\r\nx Monaco; min-height: 15.0px&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white=\r\n-space:pre&quot;&gt;\t&lt;/span&gt;&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font:=\r\n 11.0px Monaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;=\r\n/span&gt;&lt;span style=3D&quot;color: #7f0055&quot;&gt;public&lt;/span&gt; SuffixBasedRejectionRule=\r\n(String name) {&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0=\r\npx Monaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/spa=\r\nn&gt;&lt;span style=3D&quot;color: #7f0055&quot;&gt;super&lt;/span&gt;(name);&lt;/p&gt;\n&lt;p style=3D&quot;margin=\r\n: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #2a00ff&quot;&gt;&lt;span style=\r\n=3D&quot;color: #000000&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre=\r\n&quot;&gt;\t\t&lt;/span&gt;setDescription(&lt;/span&gt;&quot;Reject URIs based on their suffixes&=\r\nquot;&lt;span style=3D&quot;color: #000000&quot;&gt;);&lt;/span&gt;&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0p=\r\nx 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #2a00ff&quot;&gt;&lt;span style=3D&quot;co=\r\nlor: #000000&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/=\r\nspan&gt;&lt;/span&gt;&lt;span style=3D&quot;color: #0000c0&quot;&gt;disallowedSuffixes&lt;/span&gt;&lt;span s=\r\ntyle=3D&quot;color: #000000&quot;&gt; =3D &lt;/span&gt;&lt;span style=3D&quot;color: #7f0055&quot;&gt;new&lt;/spa=\r\nn&gt;&lt;span style=3D&quot;color: #000000&quot;&gt; StringList(&lt;/span&gt;&quot;Disallowed Suffix=\r\nes&quot;&lt;span style=3D&quot;color: #000000&quot;&gt;,&lt;/span&gt;&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.=\r\n0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #2a00ff&quot;&gt;&lt;span style=3D&quot;=\r\ncolor: #000000&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t=\r\n&lt;/span&gt; &lt;/span&gt;&quot;A list of suffixes where, if a URI ends with one of th=\r\nose suffixes the URI will be rejected.&quot;&lt;span style=3D&quot;color: #000000&quot;&gt;=\r\n);&lt;/span&gt;&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Mo=\r\nnaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;add=\r\nElementToDefinition(&lt;span style=3D&quot;color: #0000c0&quot;&gt;disallowedSuffixes&lt;/span=\r\n&gt;);&lt;/p&gt;&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;\n=\r\n=A0=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0//making disallowedSuffixes a field that =\r\ncan be set through the WUI&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px;=\r\n font: 11.0px Monaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:p=\r\nre&quot;&gt;\t&lt;/span&gt;}&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px=\r\n Monaco; min-height: 15.0px&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-=\r\nspace:pre&quot;&gt;\t&lt;/span&gt;&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: =\r\n11.0px Monaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/=\r\nspan&gt;&lt;span style=3D&quot;color: #7f0055&quot;&gt;public&lt;/span&gt; Object decisionFor(Object=\r\n o) {&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;=\r\n&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;&lt;span st=\r\nyle=3D&quot;color: #7f0055&quot;&gt;if&lt;/span&gt; (o &lt;span style=3D&quot;color: #7f0055&quot;&gt;instance=\r\nof&lt;/span&gt; CandidateURI =3D=3D &lt;span style=3D&quot;color: #7f0055&quot;&gt;false&lt;/span&gt;){=\r\n&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; col=\r\nor: #3f7f5f&quot;&gt;&lt;span style=3D&quot;color: #000000&quot;&gt;=A0 =A0 =A0 =A0 =A0 =A0 &lt;/span&gt;=\r\n// Only handles CandidtaeURIs&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0=\r\npx; font: 11.0px Monaco&quot;&gt;=A0 =A0 =A0 =A0 =A0 =A0 &lt;span style=3D&quot;color: #7f0=\r\n055&quot;&gt;if&lt;/span&gt; (&lt;span style=3D&quot;color: #0000c0&quot;&gt;logger&lt;/span&gt;.isLoggable(Lev=\r\nel.&lt;span style=3D&quot;color: #0000c0&quot;&gt;INFO&lt;/span&gt;)) {&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: =\r\n0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #2a00ff&quot;&gt;&lt;span style=\r\n=3D&quot;color: #000000&quot;&gt;=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 &lt;/span&gt;&lt;span style=3D&quot;c=\r\nolor: #0000c0&quot;&gt;logger&lt;/span&gt;&lt;span style=3D&quot;color: #000000&quot;&gt;.info(&lt;/span&gt;&qu=\r\not;Error: Object passed for evaluation was not a &quot;&lt;span style=3D&quot;color=\r\n: #000000&quot;&gt; +&lt;/span&gt;&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font=\r\n: 11.0px Monaco&quot;&gt;=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 &lt;span style=3D&quot;col=\r\nor: #2a00ff&quot;&gt;&quot;CandidateURI. &quot;&lt;/span&gt; + o.toString());&lt;/p&gt;\n&lt;p styl=\r\ne=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;=A0 =A0 =A0 =A0 =\r\n=A0 =A0 }&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Mon=\r\naco&quot;&gt;=A0 =A0 =A0 =A0 =A0 =A0 &lt;span style=3D&quot;color: #7f0055&quot;&gt;return&lt;/span&gt; &lt;=\r\nspan style=3D&quot;color: #0000c0&quot;&gt;REJECT&lt;/span&gt;;&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px =\r\n0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;=A0 =A0 =A0 =A0 }&lt;/p&gt;\n&lt;p style=3D&quot;m=\r\nargin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-height: 15.0px&quot;&gt;&lt;s=\r\npan class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;&lt;/p&gt;\n&lt;p sty=\r\nle=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;&lt;span class=3D&quot;=\r\nApple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;CandidateURI curi =3D (C=\r\nandidateURI) o;&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0=\r\npx Monaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/spa=\r\nn&gt;String suffix =3D curi.toString().substring(curi.toString().lastIndexOf(&lt;=\r\nspan style=3D&quot;color: #2a00ff&quot;&gt;&#39;.&#39;&lt;/span&gt;)+1);&lt;/p&gt;\n\n&lt;p style=3D&quot;marg=\r\nin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-=\r\nspan&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;&lt;span style=3D&quot;color: #7f0055&quot;&gt;if&lt;=\r\n/span&gt; (&lt;span style=3D&quot;color: #0000c0&quot;&gt;disallowedSuffixes&lt;/span&gt;.contains(s=\r\nuffix)) {&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Mo=\r\nnaco; color: #7f0055&quot;&gt;&lt;span style=3D&quot;color: #000000&quot;&gt;&lt;span class=3D&quot;Apple-t=\r\nab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t\t&lt;/span&gt;&lt;/span&gt;return&lt;span style=3D&quot;co=\r\nlor: #000000&quot;&gt; &lt;/span&gt;&lt;span style=3D&quot;color: #0000c0&quot;&gt;REJECT&lt;/span&gt;&lt;span sty=\r\nle=3D&quot;color: #000000&quot;&gt;;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0=\r\n.0px; font: 11.0px Monaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-sp=\r\nace:pre&quot;&gt;\t\t&lt;/span&gt;}&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: =\r\n11.0px Monaco&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;=\r\n/span&gt;&lt;span style=3D&quot;color: #7f0055&quot;&gt;else&lt;/span&gt; {&lt;/p&gt;\n&lt;p style=3D&quot;margin: =\r\n0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #7f0055&quot;&gt;&lt;span style=\r\n=3D&quot;color: #000000&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre=\r\n&quot;&gt;\t\t\t&lt;/span&gt;&lt;/span&gt;return&lt;span style=3D&quot;color: #000000&quot;&gt; &lt;/span&gt;&lt;span style=\r\n=3D&quot;color: #0000c0&quot;&gt;PASS&lt;/span&gt;&lt;span style=3D&quot;color: #000000&quot;&gt;;&lt;/span&gt;&lt;/p&gt;\n=\r\n\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;&lt;span cl=\r\nass=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;}&lt;/p&gt;\n&lt;p style=3D=\r\n&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-height: 15.0px&quot;&gt;=\r\n&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;&lt;/p&gt;\n&lt;p s=\r\ntyle=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-height: 1=\r\n5.0px&quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;&lt;/=\r\np&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco&quot;&gt;&lt;span =\r\nclass=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;}&lt;/p&gt;\n&lt;p style=\r\n=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-height: 15.0p=\r\nx&quot;&gt;}&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monac=\r\no; min-height: 15.0px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px;=\r\n font: 11.0px Monaco; min-height: 15.0px&quot;&gt;\n&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;margin: 0.0p=\r\nx 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-height: 15.0px&quot;&gt;The construct=\r\nor makes disallowedSuffixes a field that can be set through the WUI. the Us=\r\ner enters the unwanted suffixes in the WUI and the method decisionFor check=\r\ns each URI to see if it ends with one of the unwanted suffixes and rejects =\r\nit if it does.&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0p=\r\nx Monaco; min-height: 15.0px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px=\r\n 0.0px; font: 11.0px Monaco; min-height: 15.0px&quot;&gt;If you write your own Deci=\r\ndeRule, you must write its name thus &quot;PackagenameHere.youDecideRuleNam=\r\neHere&quot; into a file called DecideRule.options&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0=\r\n.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-height: 15.0px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p=\r\n style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-height:=\r\n 15.0px&quot;&gt;you jar the file and the your decide rule compilation and put the =\r\nresulting jar file in Heritrix/lib. That is it! Your rule will then be avai=\r\nlable through the WUI and you can use it.&lt;/p&gt;\n&lt;p style=3D&quot;margin: 0.0px 0.0=\r\npx 0.0px 0.0px; font: 11.0px Monaco; min-height: 15.0px&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=\r\n=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; min-height: 15.0p=\r\nx&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco=\r\n; min-height: 15.0px&quot;&gt;\n&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Mon, Dec 2=\r\n8, 2009 at 7:31 PM, Steven A Rowe &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:s=\r\narowe@...&quot;&gt;sarowe@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D=\r\n&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding=\r\n-left:1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span&gt;=A0&lt;=\r\n/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Hi Anas,&lt;br&gt;\n&lt;br&gt;=\r\n\nYou&#39;re right, the sequence effect is not OR.  I don&#39;t know enough =\r\nabout the language of process flows to put the right label on what Heritrix=\r\n is doing :).&lt;br&gt;\n&lt;br&gt;\nI would like to be able to write rules (not code) th=\r\nat allow me to stamp REJECT on URIs that have content type text/html AND ar=\r\ne larger than 10MB, and PASS for everything else.  How can I do that?&lt;br&gt;\n&lt;=\r\nbr&gt;\nSteve&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;\n&lt;br&gt;\nOn 12/28/2009 at 1=\r\n1:35 AM, anas elghafari wrote:&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; I don&#39;t thi=\r\nnk the effect of the sequence is OR. Every rule stamps the&lt;br&gt;\n&gt; URI wit=\r\nh ACCEPT, REJECT or PASS. And the last non-pass is the operative&lt;br&gt;\n&gt; j=\r\nudgment. So I don&#39;t quite understand the problem. Just have your rules&lt;=\r\nbr&gt;\n&gt; stamp REJECT on what you don&#39;t like, and PASS on everything el=\r\nse... and&lt;br&gt;\n&gt; this gives the effect of combining the reject rules with=\r\n &quot;AND&quot;&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; On Sat, Dec 26, 2009 at 9:05 =\r\nPM, Steven A Rowe &lt;&lt;a href=3D&quot;mailto:sarowe%40syr.edu&quot; target=3D&quot;_blank&quot;=\r\n&gt;sarowe@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n=\r\n&gt; \tHi Anas,&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; \tI was hoping that you (or someone else o=\r\nn this list) would say&lt;br&gt;\n&gt; that I was missing something that would all=\r\now me to only write rules,&lt;br&gt;\n&gt; and not have to write code.&lt;br&gt;\n&gt; &lt;b=\r\nr&gt;\n&gt; \tCombining multiple conditions together seems like such a basic&lt;br&gt;=\r\n\n&gt; requirement I&#39;m surprised it doesn&#39;t already exist - somethin=\r\ng like the&lt;br&gt;\n&gt; ability to override the logical operator on DecideRuleS=\r\nequence&lt;br&gt;\n&gt; (currently hardwired to OR) to other possibilities like AN=\r\nD. Then I&lt;br&gt;\n&gt; could write something like (pardon the pseudocode):&lt;br&gt;\n=\r\n&gt; &lt;br&gt;\n&gt; \tOrDecideRuleSequence : decision=3DLASTMATCH \tRejectDecideRu=\r\nle&lt;br&gt;\n&gt; \tSurtPrefixedDecideRule : seedsAsSurtPrefixes=3Dtrue ; decision=\r\n=3DACCEPT&lt;br&gt;\n&gt; \tAndDecideRuleSequence : decision=3DREJECT&lt;br&gt;\n&gt; \tCon=\r\ntentTypeMatchesRegexDecideRule : regex=3Dtext/html&lt;br&gt;\n&gt; \tExceedsDocumen=\r\ntLengthThresholdDecideRule \t:&lt;br&gt;\n&gt; contentLengthThreshold=3D10000000 \tA=\r\nndDecideRuleSequence : decision=3DREJECT&lt;br&gt;\n&gt; \tContentTypeMatchesRegexD=\r\necideRule : regex=3Dtext/plain&lt;br&gt;\n&gt; \tExceedsDocumentLengthThresholdDeci=\r\ndeRule \t:&lt;br&gt;\n&gt; contentLengthThreshold=3D100000&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; \tIs t=\r\nhis a bad idea?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; \tSteve&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;=\r\n\n&gt; \tOn 12/26/2009 at 1:28 PM, anas elghafari wrote: \t&gt; \t&gt; \t&gt; Yo=\r\nu can write&lt;br&gt;\n&gt; your own decideRules that subclass the DecideRule, and=\r\n you \t&gt; overwrite&lt;br&gt;\n&gt; the decisionFor(Object o) method. In the deci=\r\nsionFor(Object o) \t&gt; you&lt;br&gt;\n&gt; check if the Object is a CrawlURI, if =\r\nso you typecast into CrawlURI \t&gt;&lt;br&gt;\n&gt; and then you will be able to c=\r\nheck the contenttype and content size \t&gt;&lt;br&gt;\n&gt; (look at CrawlURI API)=\r\n. And you can issue decesion REJECT for the uris&lt;br&gt;\n&gt; \t&gt; that don&#3=\r\n9;t fulfill you criteria. \t&gt; \t&gt; You can also do this by adding&lt;br&gt;\n&g=\r\nt; a processor, where -in your overwriting \t&gt; of innerProcess(CrawlURI&lt;b=\r\nr&gt;\n&gt; curi)- you check the type and size and then you \t&gt; reject those =\r\nURIs you&lt;br&gt;\n&gt; don&#39;t want to process by calling \t&gt;&lt;br&gt;\n&gt; curi.=\r\nskipToProcessorChain(getCrawlController().getPostProcessorChain())&lt;br&gt;\n&gt;=\r\n \t&gt; \t&gt; beware that DecideRules/Filter inserted before the extraction =\r\nwill&lt;br&gt;\n&gt; \t&gt; prevent the CrawlJob from ever getting to Uris that are=\r\n acceptable,&lt;br&gt;\n&gt; \t&gt; because the path to them goes through URIs that=\r\n are not. \t&gt; \t&gt; Anas&lt;br&gt;\n&gt; \t&gt; \t&gt; On Wed, Dec 23, 2009 at 1:4=\r\n8 AM, Steven A Rowe &lt;&lt;a href=3D&quot;mailto:sarowe%40syr.edu&quot; target=3D&quot;_blan=\r\nk&quot;&gt;sarowe@...&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n&gt; &lt;mailto:&lt;a href=3D&quot;mailto:sar=\r\nowe%2540syr.edu&quot; target=3D&quot;_blank&quot;&gt;sarowe%40syr.edu&lt;/a&gt;&gt; &gt; wrote: \t&g=\r\nt; \t&gt; Hi, \t&gt; \t&gt; I want to write&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt; decide-=\r\nrules that reject resources based on two \t&gt; conditions:&lt;br&gt;\n&gt; content=\r\n-length and content-type (e.g., text/html resources \t&gt; larger&lt;br&gt;\n&gt; t=\r\nhan 10MB, and text/plain resources larger than 100KB), but I \t&gt; can&#39;=\r\nt&lt;br&gt;\n&gt; find any way to logically AND rule subsets together. \t&gt; \t&gt;=\r\n Is there a&lt;br&gt;\n&gt; way to write decide-rules that would achieve what I \t&=\r\ngt; want? Should I be&lt;br&gt;\n&gt; using ScriptedDecideRules? \t&gt; \t&gt; Thank=\r\ns (for your patience with a&lt;br&gt;\n&gt; newbie), \t&gt; Steve&lt;br&gt;\n&gt; &lt;br&gt;\n&gt=\r\n; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;p&gt;&lt;/p&gt;\n\n    &lt;/di=\r\nv&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n=\r\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--0015175cf77206e8d3047bcf2727--\r\n\n"}}