{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":446408637,"authorName":"dechouxb","from":"&quot;dechouxb&quot; &lt;dechouxb@...&gt;","profile":"dechouxb","replyTo":"LIST","senderId":"PLJbO8YzuVsffUTET4GKE3iJmgSPtw56esRvyZ5t5nv5GPnnc_1z2b76lJQPvZGutVSHzMDttCptGVvQQg_M3TjHjfWlrQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: General questions and questions about DecideRule","postDate":"1292924192","msgId":6928,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGllcHNmMCtjNjRuQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDREMEMxMjEyLjcwNjAzMDdAYXJjaGl2ZS5vcmc+"},"prevInTopic":6921,"nextInTopic":6934,"prevInTime":6927,"nextInTime":6929,"topicId":6918,"numMessagesInTopic":4,"msgSnippet":"Thanks for the reply. I was not arguing about the DecideRuleSequence or the three-state logic itself. Of course, this does allow an expressivity that would","rawEmail":"Return-Path: &lt;dechouxb@...&gt;\r\nX-Sender: dechouxb@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 6481 invoked from network); 21 Dec 2010 09:36:33 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m11.grp.re1.yahoo.com with QMQP; 21 Dec 2010 09:36:33 -0000\r\nX-Received: from unknown (HELO n40b.bullet.mail.sp1.yahoo.com) (66.163.168.154)\n  by mta1.grp.re1.yahoo.com with SMTP; 21 Dec 2010 09:36:33 -0000\r\nX-Received: from [69.147.65.171] by n40.bullet.mail.sp1.yahoo.com with NNFMP; 21 Dec 2010 09:36:32 -0000\r\nX-Received: from [98.137.34.184] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 21 Dec 2010 09:36:32 -0000\r\nDate: Tue, 21 Dec 2010 09:36:32 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;iepsf0+c64n@...&gt;\r\nIn-Reply-To: &lt;4D0C1212.7060307@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;dechouxb&quot; &lt;dechouxb@...&gt;\r\nSubject: Re: General questions and questions about DecideRule\r\nX-Yahoo-Group-Post: member; u=446408637; y=Tc1NZ7X2oiHwTrt1A_JYafGJNxIOWlx_xQnmBuZZJ9K-KMM\r\nX-Yahoo-Profile: dechouxb\r\n\r\nThanks for the reply. I was not arguing about the DecideRuleSequence or the=\r\n three-state logic itself. Of course, this does allow an &#39;expressivity&#39; tha=\r\nt would be hard to equal with boolean operators. We agree that we could man=\r\nage to express the same thing but that would not be more readable.\n\nMy conc=\r\nern was more about the consumer of such rules. Depending on the consumer, t=\r\nhe meaning of NONE/PASS means either ACCEPT or REJECT.\n\nI am going to do my=\r\n experiment and I will keep you/the group informed.\n\nRegards\n\nBertrand Dech=\r\noux\n\n\n--- In archive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@...&gt; wrot=\r\ne:\n&gt;\n&gt; On 12/17/10 12:51 AM, dechouxb wrote:\n&gt; &gt; Hi,\n&gt; &gt;\n&gt; &gt; I basically wo=\r\nuld like to contribute back to H3. But first I have a few\n&gt; &gt; questions :\n&gt;=\r\n \n&gt; Great! We&#39;ve put some notes about contributing code on the project wiki=\r\n at:\n&gt; \n&gt; https://webarchive.jira.com/wiki/display/Heritrix/Contributing+to=\r\n+Heritrix\n&gt; \n&gt; &gt;     * How does serialization work within H3?\n&gt; \n&gt; Objects =\r\nare primarily serialized to be saved in persistent caches \n&gt; (summary info =\r\nfor each known host, server, queue) or on-disk queues.\n&gt; \n&gt; Up through 3.0.=\r\n0, Java&#39;s native serialization was used, with a few \n&gt; classes implementing=\r\n custom serialization for efficiency. However, in \n&gt; SVN TRUNK, we&#39;ve moved=\r\n to the &#39;Kryo&#39; serialization library for speed and \n&gt; compactness benefits.=\r\n\n&gt; \n&gt; Starting in H3, we avoid use of serialization for saving checkpoint \n=\r\n&gt; state, preferring JSON, to make state easier to view and edit before \n&gt; r=\r\nesumption.\n&gt; \n&gt; &gt;     * I believe I saw that job configuration might be ser=\r\nialized, not\n&gt; &gt;       using the standard java serialization, but a JSON va=\r\nriant. Is\n&gt; &gt;       there a relation with the HasKeyedProperties interface =\r\nor is this\n&gt; &gt;       interface uniquely for sheet-based contextual overridi=\r\nng of\n&gt; &gt;       properties?\n&gt; \n&gt; The configuration is only really stored in=\r\n the &#39;CXML&#39; files, which are \n&gt; the same XML format as specified by the Spr=\r\ning Inversion-of-Control \n&gt; container. Such CXML is only consulted when a c=\r\nrawl job is first &#39;built&#39; \n&gt; -- it&#39;s never updated by a running job.\n&gt; \n&gt; T=\r\nhe HasKeyedProperties interface is only used for the sheet-based \n&gt; overlay=\r\ning of some settings based on URI context -- for example flipping \n&gt; a flag=\r\n, or changing a threshold, for some sites or URI patterns. It&#39;s \n&gt; not rela=\r\nted to any serialization.\n&gt; \n&gt; &gt;     * What is the development relationship=\r\ns between version 1, 2 and 3\n&gt; &gt;       of archive-crawler/Heritrix? I guess=\r\n bug fixes are spread as much\n&gt; &gt;       as possible but what about if a min=\r\nor architectural change was\n&gt; &gt;       made within H3?\n&gt; \n&gt; H1 and H3 are ge=\r\ntting active development, though for H1 mostly bug \n&gt; fixes. H3 is still a =\r\nbit more suited for expert operators and those more \n&gt; comfortable seeing t=\r\nhe raw Java class names, and occasionally looking \n&gt; through the Java sourc=\r\ne code to understand all the options.  H3 is \n&gt; recommended over H2; no mro=\r\ne fixes or features are expected for H2.\n&gt; \n&gt; H3 has many big changes that =\r\nwon&#39;t be backported to H1; moving to H3 is \n&gt; the right way to use them.\n&gt; =\r\n\n&gt; &gt;     * Could the design of DecideRule be simplified?\n&gt; &gt;\n&gt; &gt; Basically,=\r\n for code reading/understanding/maintenance, high inheritance\n&gt; &gt; trees are=\r\n not that great. The current DecideRule mother class has many\n&gt; &gt; children =\r\nand could abstracted with :\n&gt; &gt;\n&gt; &gt;     package org.archive.modules.decisio=\r\nns;\n&gt; &gt;\n&gt; &gt;     public interface DecideRule implements Serializable {\n&gt; &gt;\n&gt;=\r\n &gt;     boolean accepts(CrawlURI uri);\n&gt; &gt;\n&gt; &gt;     }\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; The other r=\r\neal public method (a method which is used outside any\n&gt; &gt; DecideRule classe=\r\ns) is decisionFor(CrawlURI). But really, I believe the\n&gt; &gt; tree-state logic=\r\n does not have to leak out from the DecideRule various\n&gt; &gt; implementations.=\r\n The NONE DecideResult has no reason to be used\n&gt; &gt; consistently because th=\r\ne callers want a boolean decision. That is\n&gt; &gt; something which slows down t=\r\nhe setting up and updating of rules ie &#39;How\n&gt; &gt; NONE was handled for that p=\r\narticular implementation?&#39; &#39;Does it only keep\n&gt; &gt; CrawlURI with ACCEPT or d=\r\noes it only ignore CrawlURI with REJECT?&#39; ...*\n&gt; &gt; All current implementati=\r\nons could use the accepts(CrawlURI uri) method.\n&gt; &gt; Those which are current=\r\nly using decisionFor(CrawlURI) could be\n&gt; &gt; refactored with full backward c=\r\nompatibility using a DecideRuleSequence\n&gt; &gt; and the right default constant =\r\nDecideResult without changing their API\n&gt; &gt; and their behaviour.\n&gt; \n&gt; \n&gt; Ac=\r\ntually, the fact that a DecideRule can offer three different decisions \n&gt; -=\r\n- ACCEPT, REJECT, or PASS -- is important to its style of \n&gt; specification,=\r\n allowing a flat list of rules to cover most common \n&gt; scoping needs, witho=\r\nut multilevel boolean-clause nesting.\n&gt; \n&gt; A mere boolean true/false would =\r\nbe insufficient to allow a later (and \n&gt; thus superceding) rule to simply s=\r\nay, &#39;no opinion&#39;.\n&gt; \n&gt; (Additionally, the onlyDecision() optimization allow=\r\ns rules that would \n&gt; only repeat the already-standing decision to be skipp=\r\ned.)\n&gt; \n&gt; As an exercise, you might try to replicate the behavior of the cu=\r\nrrent \n&gt; default rule set with rules that only answer true/false. I think y=\r\nou&#39;d \n&gt; find nesting with ANDs/ORs/NOTs to 3+ levels would be necessary. Ou=\r\nr \n&gt; scoping used to work like that, and it became quite confusing to \n&gt; re=\r\nmember that a filter in one place returning &#39;true&#39; meant &#39;reject&#39; and \n&gt; in=\r\n another place &#39;true&#39; means &#39;accept&#39;.\n&gt; \n&gt; Thus, it would take a strong dem=\r\nonstration that such a change made \n&gt; typical configurations easier and mor=\r\ne understandable to refactor in \n&gt; that direction now.\n&gt; \n&gt; - Gordon @ IA\n&gt;=\r\n \n&gt; &gt; I am of course volunteering for the task. I only wanted to have your\n=\r\n&gt; &gt; thoughts before starting any coding work. I might not understand/know\n&gt;=\r\n &gt; all the reasons for the current design. And at the end of the day, I\n&gt; &gt;=\r\n will need your agreement for the work to be integrated into the current\n&gt; =\r\n&gt; version of H3.\n&gt; &gt;\n&gt; &gt; Regards\n&gt; &gt;\n&gt; &gt; Bertrand Dechoux\n&gt; &gt;\n&gt; &gt; *\n&gt; &gt; **\n=\r\n&gt;\n\n\n\n"}}