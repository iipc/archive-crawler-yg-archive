{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"-CEXF9h1vH0zy1_G3UIxRa36Wb0wQF48c7Gr0DolitHmMq2hKgXesGDWiV7B32lIJmrX2qvfOJ0rInmIGfe1QAMpyttbfro","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Extending ARC Re: [archive-crawler] Re: Crawler-guided form/authentication entry","postDate":"1074638621","msgId":245,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwMERBRjFELjcwMTA2MDNAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGJ1Z3VoaSttMXY1QGVHcm91cHMuY29tPg==","referencesHeader":"PGJ1Z3VoaSttMXY1QGVHcm91cHMuY29tPg=="},"prevInTopic":242,"nextInTopic":262,"prevInTime":244,"nextInTime":246,"topicId":235,"numMessagesInTopic":8,"msgSnippet":"... I ve been thinking of something very similar; some comments below. ... I would include these headers, both in the captured request and in any checksum","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 71134 invoked from network); 20 Jan 2004 22:43:53 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m17.grp.scd.yahoo.com with QMQP; 20 Jan 2004 22:43:53 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (209.237.232.202)\n  by mta2.grp.scd.yahoo.com with SMTP; 20 Jan 2004 22:43:45 -0000\r\nReceived: (qmail 13598 invoked by uid 100); 20 Jan 2004 22:41:35 -0000\r\nReceived: from b116-dyn-43.archive.org (HELO archive.org) (gojomo@...@209.237.240.43)\n  by mail-dev.archive.org with SMTP; 20 Jan 2004 22:41:35 -0000\r\nMessage-ID: &lt;400DAF1D.7010603@...&gt;\r\nDate: Tue, 20 Jan 2004 14:43:41 -0800\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6b) Gecko/20031205 Thunderbird/0.4\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;buguhi+m1v5@...&gt;\r\nIn-Reply-To: &lt;buguhi+m1v5@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-Spam-Status: No, hits=-2.8 required=6.0\n\ttests=AWL,BAYES_01,EMAIL_ATTRIBUTION,IN_REP_TO,QUOTED_EMAIL_TEXT,\n\t      REFERENCES,REPLY_WITH_QUOTES,USER_AGENT_MOZILLA_UA\n\tautolearn=ham version=2.55\r\nX-Spam-Level: \r\nX-Spam-Checker-Version: SpamAssassin 2.55 (1.174.2.19-2003-05-19-exp)\r\nX-eGroups-Remote-IP: 209.237.232.202\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Extending ARC Re: [archive-crawler] Re: Crawler-guided form/authentication\n entry\r\nX-Yahoo-Group-Post: member; u=137285340\r\nX-Yahoo-Profile: gojomo\r\n\r\nsteensc42 wrote:\n&gt; Here is a proposal for an extension of the arc format in order to \n&gt; accommodate more detailed metadata. \n\nI&#39;ve been thinking of something very similar; some comments below.\n\n&gt; An entry for a http response currently looks like this in the ARC \n&gt; format using the url-record-v1 format:\n&gt; \n&gt; http://&lt;url1&gt; &lt;ip1&gt; &lt;timestamp1&gt; &lt;mime-type1&gt; &lt;data-size1&gt;\n&gt; &lt;DATA1 � http header, response data&gt;\n&gt; \n&gt; When data are collected using the HTTP post method ambiguities may \n&gt; arise as multiple requests for different web pages may be represented \n&gt; by the same url. An additional header field is proposed added to the \n&gt; ARC header to resolve these ambiguities. \n&gt; \n&gt; http://&lt;url1&gt; &lt;ip1&gt; &lt;timestamp1&gt; &lt;mime-type1&gt; \n&gt; &lt;data-size1&gt; &lt;request-encoding1&gt;\n&gt; &lt;DATA1 � http header, response data&gt;\n&gt; \n&gt; The new field request-encoding is an MD5 checksum created from the \n&gt; http request. This encoding can be used to distinguish between \n&gt; different post requests. Notice that only a relevant subset of the \n&gt; complete http request should be used to create the checksum. This \n&gt; subset must include the url, the message body, and possibly the \n&gt; authentication information and cookie values. We do not want to \n&gt; include fields such as Accept, Referrer, Host and User-Agent as they \n&gt; do not define the content of the requested page.\n\nI would include these headers, both in the captured request and in\nany checksum which maps response-to-request.\n\nServers can vary what they return based on those request headers,\nand any decision other than recording/checksumming them all requires\na volatile judgemental analysis.\n\n&gt; This format still lacks detailed information about the http request \n&gt; header and does not provide means to add additional meta-data \n&gt; information. It is proposed that additional meta-data information is \n&gt; stored using the format:\n&gt; \n&gt; metadata:http://&lt;url2&gt; &lt;ip2&gt; &lt;timestamp2&gt; text/xml \n&gt; &lt;data size2&gt; &lt;request-encoding2&gt;\n&gt; &lt;DATA2 � metadata for url&gt;\n&gt; \n&gt; Where \n&gt; &lt;url1&gt;=&lt;url2&gt;\n&gt; &lt;ip1&gt; = &lt;ip2&gt;\n&gt; &lt;timestamp1&gt; = &lt;timestamp2&gt;\n&gt; &lt;request-encoding1&gt;=&lt;request-encoding2&gt;\n&gt; \n&gt; The DATA2 section is an xml representation of various metadata \n&gt; available during collection of the url object. This information must \n&gt; as a minimum contain the complete http request. \n\nSomewhat inspired by the Swedish archive format -- which has three\nsegments for each capture (the request, the response, and the metadata) --\nI would offer the option of including the entire, byte-for-byte\nrequest as another ARC record.\n\nThus the complete set of entries for a single capture could be:\n\nrequest:http://&lt;url&gt; &lt;source-ip&gt; &lt;timestamp&gt; &lt;mime&gt; &lt;request-size&gt; &lt;capture-identifier&gt;\n&lt;DATA - exact copy of request sent&gt;\nhttp://&lt;url&gt; &lt;dest-ip&gt; &lt;timestamp&gt; &lt;mime&gt; &lt;response-size&gt; &lt;capture-identifier&gt;\n&lt;DATA - exact copy of response received, as in current ARC&gt;\nmetadata:http://&lt;url&gt; &lt;dest-ip&gt; &lt;timestamp&gt; &lt;mime&gt; &lt;metadata-size&gt; &lt;capture-identifier&gt;\n&lt;DATA - XML with other crawl-time info&gt;\n\nSome notes:\n  (1) The &lt;capture-identifier&gt; is roughly the same as the &lt;request-encoding&gt;\n      you suggest: some identifier uniquely tying together the three records,\n      perhaps based on some function of the request. If in fact the format\n      requires related records to be contiguous, it might be omittable.\n  (1) The &quot;request&quot; and &quot;metadata&quot; records, can be left out, ignored, or\n      stripped (say by a preprocessing filter) -- and then you essentially\n      have a classic, limited ARC.\n  (2) The actual recommended ordering of the three parts is to-be-determined.\n      The above matches the chronological order in which the data is\n      available. Putting the metadata first might help postprocessing/access.\n      Putting the response first might aid backward-compatibility.\n\n--\n\nThe one big wishlist item for ARC format revision that these ideas don&#39;t\ndirectly address is some efficient way to indicate when one capture is an\nexact (or nearly exact) duplicate of another.\n\nThis could be a matter of having a way to leave out the content-body on\nresponse-records, and instead point back to the earlier encounter of\nthe exact same data.\n\nThis back-pointer could be limited to only within the same ARC. (Thus,\nencouraging a system where ARCs are kept open longer, and duplicates\nappended to the end of ARCs where they were first encountered.) Or, it\ncould point to any ARC from the same crawl-run. Or, it could point\nback to any historical capture, provided there&#39;s some confidence in\nsuch cross-crawl dependencies.\n\nThe pointer should probably be based on both a symbolic capture name\n(URI+timestamp, etc.) and a content-hash.\n\nResponses that include such references could be recorded as:\n\nduplicate-content:http://&lt;uri&gt; &lt;dest-ip&gt; &lt;timestamp&gt; &lt;mime&gt; &lt;response-record-size&gt; &lt;capture-identifier&gt;\n&lt;DATA - only response headers, as in current ARC&gt;\n&lt;backpointer to alternate/original location of content-body&gt;\n\nComments?\n\n- Gordon\n\n"}}