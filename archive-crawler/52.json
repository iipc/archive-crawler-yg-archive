{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":95697582,"authorName":"G.B.Reddy","from":"&quot;G.B.Reddy&quot; &lt;reddy@...&gt;","profile":"gbreddysoft","replyTo":"LIST","senderId":"lV_79UaQj1FdSxVGnfo0xMABOfTnlba2vp4ppsMy2Jj-aNBtu4NYvuksnHhE0t3cZG3VHGI-6d15NKTOx35PxqFDgmiOFhWhmmG7n0o","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Re: Memory Pool manager attached !!","postDate":"1051204068","msgId":52,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI0ZjcwMWMzMGE4NCQwODcyZmJlMCRkNTAwYThjMEB0aWRlbHBhcmsuaXNvZnR0ZWNoaW5kaWEuY29tPg==","referencesHeader":"PDIyYWYwMWMzMDk1NCRkNzE4Yjc5MCRkNTAwYThjMEB0aWRlbHBhcmsuaXNvZnR0ZWNoaW5kaWEuY29tPiA8MDBmOTAxYzMwOWUwJDMyZmFiMDAwJDQ4ZjBlZGQxQFdPUktTVEFUSU9OMjE+"},"prevInTopic":51,"nextInTopic":0,"prevInTime":51,"nextInTime":53,"topicId":51,"numMessagesInTopic":2,"msgSnippet":"Raymie, On the first day we discussed about the memory pool manager, we decided that the 8MB big chunk of memory will be broken into pieces of 4K each. And the","rawEmail":"Return-Path: &lt;reddy@...&gt;\r\nX-Sender: reddy@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (EGP: mail-8_2_6_6); 24 Apr 2003 17:11:04 -0000\r\nReceived: (qmail 209 invoked from network); 24 Apr 2003 17:10:54 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m8.grp.scd.yahoo.com with QMQP; 24 Apr 2003 17:10:54 -0000\r\nReceived: from unknown (HELO pub.isofttechindia.com) (203.199.202.17)\n  by mta2.grp.scd.yahoo.com with SMTP; 24 Apr 2003 17:10:52 -0000\r\nReceived: from ReddyGB (ReddyGB.isofttechindia.com [192.168.0.213])\n\tby pub.isofttechindia.com (8.11.0/8.11.0) with SMTP id h3OGj5Y28463\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 24 Apr 2003 22:15:05 +0530\r\nMessage-ID: &lt;24f701c30a84$0872fbe0$d500a8c0@...&gt;\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nReferences: &lt;22af01c30954$d718b790$d500a8c0@...&gt; &lt;00f901c309e0$32fab000$48f0edd1@WORKSTATION21&gt;\r\nSubject: Re: [archive-crawler] Re: Memory Pool manager attached !!\r\nDate: Thu, 24 Apr 2003 22:37:48 +0530\r\nOrganization: ISoftTech\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_24F4_01C30AB2.22145480&quot;\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4920.2300\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4920.2300\r\nX-MailScanner: Found to be clean\r\nX-eGroups-From: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nFrom: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nReply-To: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nX-Yahoo-Group-Post: member; u=95697582\r\nX-Yahoo-Profile: gbreddysoft\r\n\r\n\r\n------=_NextPart_000_24F4_01C30AB2.22145480\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nRaymie,\n\nOn the first day we discussed about the memory pool manager, we de=\r\ncided that the 8MB big chunk of memory will be broken into pieces of 4K eac=\r\nh. And the writer would incrementally get 4K blocks one after the other unt=\r\nil he reaches the max 32K. These 4K blocks need not be contiguous. After th=\r\ne 32K max is reached, the whole of it would be written into a tmp file and =\r\nwe would procure a contiguous 8K block from the pool. This 8K block as we d=\r\niscussed will hold the first 8KB data of the fetched page. Knowing that Lin=\r\nux uses only a 4KB default page size, we are not very clear why you suggest=\r\ned that we use a contiguous 8K in this case. Can&#39;t it be a non contiguous 4=\r\nK + 4K, so that we can hold the first 4K data in it and use the other 4K fo=\r\nr buffered i/o on the tmp file. If there is any reason behind it being a co=\r\nntiguous 8K, we will additionally need another 4K to use as a buffer for th=\r\ne i/o. If there isn&#39;t any reason, then should the pool manager necessarily =\r\nsupport contiguous 8K allocations ?\n\nThanks,\nReddy\n\n  ----- Original Messag=\r\ne ----- \n  From: Gordon Mohr \n  To: G.B.Reddy ; archive-crawler@yahoogroups=\r\n.com \n  Sent: Thursday, April 24, 2003 3:05 AM\n  Subject: [archive-crawler]=\r\n Re: Memory Pool manager attached !!\n\n\n  Thanks! \n\n  Some thoughts:\n\n  I&#39;d =\r\nlike to approach this part of the system -- buffers/streams for \n  multi-Kb=\r\n entities across one processing cycle -- at three separate \n  levels, in or=\r\nder:\n\n  (1) The basic interface offered to other crawler components,\n      =\r\nhiding implementation details.\n\n  (2) The trick of using disk space for lar=\r\nge files, because\n      it is impractical to keep so many large files in RA=\r\nM\n      through all processing stages.\n\n  (3) The optimization of using rec=\r\nycled internal objects, to \n      minimize garbage collection overhead.\n\n  =\r\nPart (1) needs to be right and relatively constant early; parts (2) \n  and =\r\n(3) can be tweaked down the road -- and I&#39;m reluctant to evaluate\n  approac=\r\nhes to (3) just yet, because it is only after seeing the latest \n  Java all=\r\nocators/garbage-collectors do poorly on a naive implementation\n  that we&#39;ll=\r\n be able to make sensible pool-management choices.\n\n  For part (1), please =\r\ntake a look at the abstract classes I&#39;ve placed\n  in the ArchiveOpenCrawler=\r\n module, src/org/archive/crawler/io [*]:\n\n     VirtualBuffer\n     SeekableI=\r\nnputStream\n     SeekableInputSubstream\n\n  I think the &#39;VirtualBuffer&#39; objec=\r\nt is useful to tie together the \n  construction of the data stream and its =\r\nlater use, rather than \n  using a [Something]OutputStream first and then on=\r\nly at the end asking\n  it for one [Something]InputStream on the results. Al=\r\nso, it better\n  supports the idea there could be multiple independent Input=\r\nStreams\n  (or CharSequences) on the same read-only buffer. \n\n  Fleshing out=\r\n the potential connections between the abstract classes\n  above and the con=\r\ncrete classes you&#39;ve proposed:\n\n    class RewindableSpreadInputStream exten=\r\nds SeekableInputStream\n\n    class DiskedVirtualBuffer extends VirtualBuffer=\r\n {\n      // naive implementation of VirtualBuffer with associated Streams/C=\r\nharSequence classes\n      // that is, &quot;level (2)&quot; above\n      // likely use=\r\ns a RandomAccessFile to augment any in-memory buffer(s)\n      // ... //\n   =\r\n }\n    \n    class EconomizingDiskedVirtualBuffer extends DiskedVirtualBuffe=\r\nr {\n      // recycling/optimizable implementation of VirtualBuffer\n      //=\r\n that is, &quot;level (3)&quot; above\n      // somehow utilizes one or more managed M=\r\nemoryArea instances\n\n      public SpreadOutputStream getOutputStream() { /*=\r\n ... */ }\n      public RewindableSpreadInputStream getInputStream() { /* ..=\r\n. */ }\n    }\n\n  Does this make sense to everyone? \n\n  - Gordon\n\n  [*] http:=\r\n//cvs.sourceforge.net/cgi-bin/viewcvs.cgi/archive-crawler/ArchiveOpenCrawle=\r\nr/src/org/archive/crawler/io/\n\n  ----- Original Message ----- \n  From: G.B.=\r\nReddy \n  To: Gordon Mohr \n  Sent: Tuesday, April 22, 2003 9:57 PM\n  Subject=\r\n: Memory Pool manager attached !!\n\n\n  Gordon,\n\n  As requested, I am attachi=\r\nng the javadoc/code which we did when Raymie was here in India. Some change=\r\ns which are to be done are\n\n  - Support for Multiple MemPoolManager instanc=\r\nes. (don&#39;t make it static)\n  - Use a free list instead of a bitmap to track=\r\n the allocated/free areas.\n\n  Thanks,\n  Reddy\n\n        Yahoo! Groups Sponso=\r\nr \n       \n       \n\n  To unsubscribe from this group, send an email to:\n  a=\r\nrchive-crawler-unsubscribe@yahoogroups.com\n\n\n\n  Your use of Yahoo! Groups i=\r\ns subject to the Yahoo! Terms of Service. \n\n\r\n------=_NextPart_000_24F4_01C30AB2.22145480\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 5.50.4134.600&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;&lt;/STYLE&gt;=\r\n\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Raymie,&lt;=\r\n/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FON=\r\nT face=3DArial size=3D2&gt;On the first day we discussed about the memory pool=\r\n \nmanager, we decided that the 8MB big chunk of memory will be broken into =\r\npieces \nof 4K each. And the writer would incrementally get 4K blocks one af=\r\nter the other \nuntil he reaches the max 32K. These 4K blocks need not be co=\r\nntiguous. \n&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;After the 32K max is reached,=\r\n&nbsp;the whole of \nit would be written into a tmp file and we would procur=\r\ne a contiguous 8K block \nfrom the pool. This 8K block as we discussed will =\r\nhold the first 8KB data of the \nfetched page. &lt;/FONT&gt;&lt;FONT face=3DArial siz=\r\ne=3D2&gt;Knowing that Linux uses only a 4KB \ndefault page size, we are not ver=\r\ny clear why you suggested&nbsp;that we use a \ncontiguous 8K&nbsp;in this ca=\r\nse. Can&#39;t it be a non contiguous 4K + 4K,&nbsp;so \nthat we can hold the fir=\r\nst 4K data in it and use the other 4K for buffered i/o \non the tmp file. If=\r\n there is any reason behind it being a contiguous 8K, we will \nadditionally=\r\n need another 4K to use as a buffer for the i/o. If there isn&#39;t any \nreason=\r\n, then should the pool manager necessarily support contiguous 8K \nallocatio=\r\nns ?&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV=\r\n&gt;&lt;FONT face=3DArial size=3D2&gt;Thanks,&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial s=\r\nize=3D2&gt;Reddy&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/=\r\nDIV&gt;\n&lt;BLOCKQUOTE \nstyle=3D&quot;PADDING-RIGHT: 0px; PADDING-LEFT: 5px; MARGIN-LE=\r\nFT: 5px; BORDER-LEFT: #000000 2px solid; MARGIN-RIGHT: 0px&quot;&gt;\n  &lt;DIV style=\r\n=3D&quot;FONT: 10pt arial&quot;&gt;----- Original Message ----- &lt;/DIV&gt;\n  &lt;DIV \n  style=\r\n=3D&quot;BACKGROUND: #e4e4e4; FONT: 10pt arial; font-color: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; =\r\n\n  &lt;A title=3Dgojomo@... href=3D&quot;mailto:gojomo@...&quot;&gt;Gordon =\r\nMohr&lt;/A&gt; \n  &lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A title=3D=\r\nreddy@... \n  href=3D&quot;mailto:reddy@...&quot;&gt;G.B.Reddy&lt;/A&gt; ; =\r\n&lt;A \n  title=3Darchive-crawler@yahoogroups.com \n  href=3D&quot;mailto:archive-cra=\r\nwler@yahoogroups.com&quot;&gt;archive-crawler@yahoogroups.com&lt;/A&gt; \n  &lt;/DIV&gt;\n  &lt;DIV =\r\nstyle=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Sent:&lt;/B&gt; Thursday, April 24, 2003 3:05 \n  AM=\r\n&lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Subject:&lt;/B&gt; [archive-crawler] =\r\nRe: Memory \n  Pool manager attached !!&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;TT&gt;Thanks! &lt;=\r\nBR&gt;&lt;BR&gt;Some thoughts:&lt;BR&gt;&lt;BR&gt;I&#39;d like to approach \n  this part of the syste=\r\nm -- buffers/streams for &lt;BR&gt;multi-Kb entities across \n  one processing cyc=\r\nle -- at three separate &lt;BR&gt;levels, in order:&lt;BR&gt;&lt;BR&gt;(1) The \n  basic inter=\r\nface offered to other crawler components,&lt;BR&gt;&nbsp;&nbsp;&nbsp; \n  hiding i=\r\nmplementation details.&lt;BR&gt;&lt;BR&gt;(2) The trick of using disk space for \n  larg=\r\ne files, because&lt;BR&gt;&nbsp;&nbsp;&nbsp; it is impractical to keep so many \n =\r\n large files in RAM&lt;BR&gt;&nbsp;&nbsp;&nbsp; through all processing \n  stages.=\r\n&lt;BR&gt;&lt;BR&gt;(3) The optimization of using recycled internal objects, to \n  &lt;BR&gt;=\r\n&nbsp;&nbsp;&nbsp; minimize garbage collection overhead.&lt;BR&gt;&lt;BR&gt;Part (1) \n =\r\n needs to be right and relatively constant early; parts (2) &lt;BR&gt;and (3) can=\r\n be \n  tweaked down the road -- and I&#39;m reluctant to evaluate&lt;BR&gt;approaches=\r\n to (3) \n  just yet, because it is only after seeing the latest &lt;BR&gt;Java \n =\r\n allocators/garbage-collectors do poorly on a naive implementation&lt;BR&gt;that =\r\n\n  we&#39;ll be able to make sensible pool-management choices.&lt;BR&gt;&lt;BR&gt;For part =\r\n(1), \n  please take a look at the abstract classes I&#39;ve placed&lt;BR&gt;in the \n =\r\n ArchiveOpenCrawler module, src/org/archive/crawler/io [*]:&lt;BR&gt;&lt;BR&gt;&nbsp;&n=\r\nbsp; \n  VirtualBuffer&lt;BR&gt;&nbsp;&nbsp; SeekableInputStream&lt;BR&gt;&nbsp;&nbsp; \n=\r\n  SeekableInputSubstream&lt;BR&gt;&lt;BR&gt;I think the &#39;VirtualBuffer&#39; object is usefu=\r\nl to \n  tie together the &lt;BR&gt;construction of the data stream and its later =\r\nuse, rather \n  than &lt;BR&gt;using a [Something]OutputStream first and then only=\r\n at the end \n  asking&lt;BR&gt;it for one [Something]InputStream on the results. =\r\nAlso, it \n  better&lt;BR&gt;supports the idea there could be multiple independent=\r\n \n  InputStreams&lt;BR&gt;(or CharSequences) on the same read-only buffer. \n  &lt;BR=\r\n&gt;&lt;BR&gt;Fleshing out the potential connections between the abstract \n  classes=\r\n&lt;BR&gt;above and the concrete classes you&#39;ve proposed:&lt;BR&gt;&lt;BR&gt;&nbsp; class \n  =\r\nRewindableSpreadInputStream extends SeekableInputStream&lt;BR&gt;&lt;BR&gt;&nbsp; class=\r\n \n  DiskedVirtualBuffer extends VirtualBuffer {&lt;BR&gt;&nbsp;&nbsp;&nbsp; // na=\r\nive \n  implementation of VirtualBuffer with associated Streams/CharSequence=\r\n \n  classes&lt;BR&gt;&nbsp;&nbsp;&nbsp; // that is, &quot;level (2)&quot; \n  above&lt;BR&gt;&nbsp=\r\n;&nbsp;&nbsp; // likely uses a RandomAccessFile to augment any \n  in-memory=\r\n buffer(s)&lt;BR&gt;&nbsp;&nbsp;&nbsp; // ... //&lt;BR&gt;&nbsp; }&lt;BR&gt;&nbsp; \n  &lt;BR&gt;&nb=\r\nsp; class EconomizingDiskedVirtualBuffer extends DiskedVirtualBuffer \n  {&lt;B=\r\nR&gt;&nbsp;&nbsp;&nbsp; // recycling/optimizable implementation of \n  VirtualB=\r\nuffer&lt;BR&gt;&nbsp;&nbsp;&nbsp; // that is, &quot;level (3)&quot; \n  above&lt;BR&gt;&nbsp;&nbsp=\r\n;&nbsp; // somehow utilizes one or more managed MemoryArea \n  instances&lt;BR&gt;=\r\n&lt;BR&gt;&nbsp;&nbsp;&nbsp; public SpreadOutputStream \n  getOutputStream() { /* =\r\n... */ }&lt;BR&gt;&nbsp;&nbsp;&nbsp; public \n  RewindableSpreadInputStream getInp=\r\nutStream() { /* ... */ }&lt;BR&gt;&nbsp; \n  }&lt;BR&gt;&lt;BR&gt;Does this make sense to ever=\r\nyone? &lt;BR&gt;&lt;BR&gt;- Gordon&lt;BR&gt;&lt;BR&gt;[*] &lt;A \n  href=3D&quot;http://cvs.sourceforge.net/=\r\ncgi-bin/viewcvs.cgi/archive-crawler/ArchiveOpenCrawler/src/org/archive/craw=\r\nler/io/&quot;&gt;http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/archive-crawler/Arc=\r\nhiveOpenCrawler/src/org/archive/crawler/io/&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;----- \n  Original Me=\r\nssage ----- &lt;BR&gt;From: G.B.Reddy &lt;BR&gt;To: Gordon Mohr &lt;BR&gt;Sent: \n  Tuesday, A=\r\npril 22, 2003 9:57 PM&lt;BR&gt;Subject: Memory Pool manager attached \n  !!&lt;BR&gt;&lt;BR=\r\n&gt;&lt;BR&gt;Gordon,&lt;BR&gt;&lt;BR&gt;As requested, I am attaching the javadoc/code \n  which =\r\nwe did when Raymie was here in India. Some changes which are to be done \n  =\r\nare&lt;BR&gt;&lt;BR&gt;- Support for Multiple MemPoolManager instances. (don&#39;t make it =\r\n\n  static)&lt;BR&gt;- Use a free list instead of a bitmap to track the allocated/=\r\nfree \n  areas.&lt;BR&gt;&lt;BR&gt;Thanks,&lt;BR&gt;Reddy&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;To \n  unsubscrib=\r\ne from this group, send an email \n  to:&lt;BR&gt;archive-crawler-unsubscribe@yaho=\r\nogroups.com&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;Your \n  use of Yahoo! Groups is subject=\r\n to the &lt;A \n  href=3D&quot;http://docs.yahoo.com/info/terms/&quot;&gt;Yahoo! Terms of Se=\r\nrvice&lt;/A&gt;.&lt;/TT&gt; \n&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_24F4_01C30AB2.22145480--\r\n\n"}}