{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137477665,"authorName":"igor@archive.org","from":"igor@...","profile":"iranitovic","replyTo":"LIST","senderId":"l_rIX-BcIXlF7KdjD5PssLRklMi7_KL_-LYpAjEDhUro4ivCWxgK3bAFmOYU9eHsXA8xDK3vXw","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [archive-crawler] ServerCache lookup stuck","postDate":"1253214101","msgId":6043,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU4NjkyLjM4Ljk5LjQyLjI0NC4xMjUzMjE0MTAxLnNxdWlycmVsQG1haWwuYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDRBQjFBNjAxLjkwMzAyMDRAYXJjaGl2ZS5vcmc+","referencesHeader":"PGg4aXBmcytsaHBwQGVHcm91cHMuY29tPiAgICA8NjE3MDYuOTguMjM0Ljg2LjE2Ny4xMjUyODY4NTU2LnNxdWlycmVsQG1haWwuYXJjaGl2ZS5vcmc+ICAgIDw0QUFFMDg5Qi41MDMwODA0QGFyY2hpdmUub3JnPiAgICA8NjQxMzMuMzguOTkuNDIuMjQ0LjEyNTI5NTE4NjAuc3F1aXJyZWxAbWFpbC5hcmNoaXZlLm9yZz4gICAgPDRBQUY0MkJCLjcwMUBhcmNoaXZlLm9yZz4gICAgPDUzOTUyLjM4Ljk5LjQyLjI0NC4xMjUzMDYyOTc1LnNxdWlycmVsQG1haWwuYXJjaGl2ZS5vcmc+ICAgIDw0QUIxQTYwMS45MDMwMjA0QGFyY2hpdmUub3JnPg=="},"prevInTopic":6042,"nextInTopic":6045,"prevInTime":6042,"nextInTime":6044,"topicId":6026,"numMessagesInTopic":15,"msgSnippet":"Hi Gordon, 1) PoolThread-0 is a kill-thread-via-gui: PoolThread-0 prio=10 tid=0x0a1e1400 nid=0xa1b waiting for monitor entry [0x8d5fe000..0x8d5ff130] ","rawEmail":"Return-Path: &lt;igor@...&gt;\r\nX-Sender: igor@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 3199 invoked from network); 17 Sep 2009 19:01:41 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m5.grp.sp2.yahoo.com with QMQP; 17 Sep 2009 19:01:41 -0000\r\nX-Received: from unknown (HELO mail.archive.org) (207.241.231.239)\n  by mta3.grp.re1.yahoo.com with SMTP; 17 Sep 2009 19:01:40 -0000\r\nX-Received: from localhost (localhost [127.0.0.1])\n\tby mail.archive.org (Postfix) with ESMTP id 50D2F2BA9DF\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 17 Sep 2009 12:01:43 -0700 (PDT)\r\nX-Received: from mail.archive.org ([127.0.0.1])\n\tby localhost (mail.archive.org [127.0.0.1]) (amavisd-new, port 10024)\n\twith LMTP id onZw0wvhJ9Ad for &lt;archive-crawler@yahoogroups.com&gt;;\n\tThu, 17 Sep 2009 12:01:41 -0700 (PDT)\r\nX-Received: from mail.archive.org (localhost [127.0.0.1])\n\tby mail.archive.org (Postfix) with ESMTP id 9E51A2B8B4F\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 17 Sep 2009 12:01:41 -0700 (PDT)\r\nX-Received: from 38.99.42.244\n        (SquirrelMail authenticated user igor@...)\n        by mail.archive.org with HTTP;\n        Thu, 17 Sep 2009 12:01:41 -0700 (PDT)\r\nMessage-ID: &lt;58692.38.99.42.244.1253214101.squirrel@...&gt;\r\nIn-Reply-To: &lt;4AB1A601.9030204@...&gt;\r\nReferences: &lt;h8ipfs+lhpp@...&gt;\n    &lt;61706.98.234.86.167.1252868556.squirrel@...&gt;\n    &lt;4AAE089B.5030804@...&gt;\n    &lt;64133.38.99.42.244.1252951860.squirrel@...&gt;\n    &lt;4AAF42BB.701@...&gt;\n    &lt;53952.38.99.42.244.1253062975.squirrel@...&gt;\n    &lt;4AB1A601.9030204@...&gt;\r\nDate: Thu, 17 Sep 2009 12:01:41 -0700 (PDT)\r\nTo: archive-crawler@yahoogroups.com\r\nUser-Agent: SquirrelMail/1.4.10a\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;charset=iso-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3 (Normal)\r\nImportance: Normal\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: igor@...\r\nSubject: Re: [archive-crawler] ServerCache lookup stuck\r\nX-Yahoo-Group-Post: member; u=137477665; y=ay0NAAXBIW0FIg-yWhhEn3dPIewUgGn0F3-2MM86Je4HM1Wp9A\r\nX-Yahoo-Profile: iranitovic\r\n\r\nHi Gordon,\n\n1) PoolThread-0 is a kill-thread-via-gui:\n\n&quot;PoolThread-0&quot; prio=10 tid=0x0a1e1400 nid=0xa1b waiting for monitor entry\n[0x8d5fe000..0x8d5ff130]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n        at\norg.archive.util.CachedBdbMap$SoftEntry.getPhantom(CachedBdbMap.java:1625)\n        - waiting to lock &lt;0x97f40ad8&gt; (a\norg.archive.util.CachedBdbMap$SoftEntry)\n        at\norg.archive.util.CachedBdbMap$SoftEntry.isCleared(CachedBdbMap.java:1632)\n        at\norg.archive.util.CachedBdbMap$SoftEntry.awaitExpunge(CachedBdbMap.java:1711)\n        at org.archive.util.CachedBdbMap.isExpunged(CachedBdbMap.java:500)\n        at org.archive.util.CachedBdbMap._getMem(CachedBdbMap.java:698)\n        at org.archive.util.CachedBdbMap.get(CachedBdbMap.java:627)\n        at\norg.archive.crawler.datamodel.ServerCache.getServerFor(ServerCache.java:99)\n        at\norg.archive.crawler.datamodel.ServerCache.getServerFor(ServerCache.java:124)\n        at\norg.archive.crawler.frontier.AbstractFrontier.tally(AbstractFrontier.java:428)\n        at\norg.archive.crawler.frontier.AbstractFrontier.doJournalFinishedFailure(AbstractFrontier.java:465)\n        at\norg.archive.crawler.frontier.WorkQueueFrontier.finished(WorkQueueFrontier.java:918)\n        at org.archive.crawler.framework.ToeThread.kill(ToeThread.java:411)\n        - locked &lt;0x961941f8&gt; (a org.archive.crawler.framework.ToeThread)\n        at org.archive.crawler.framework.ToePool.killThread(ToePool.java:158)\n        at\norg.archive.crawler.framework.CrawlController.killThread(CrawlController.java:1691)\n        at org.archive.crawler.admin.CrawlJob.killThread(CrawlJob.java:968)\n        at\norg.archive.crawler.jspc.admin.reports.threads_jsp._jspService(Unknown\nSource)\n        at\norg.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:137)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at\norg.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:358)\n        at\norg.mortbay.jetty.servlet.WebApplicationHandler$Chain.doFilter(WebApplicationHandler.java:342)\n        at\norg.archive.crawler.admin.ui.RootFilter.doFilter(RootFilter.java:67)\n        at\norg.mortbay.jetty.servlet.WebApplicationHandler$Chain.doFilter(WebApplicationHandler.java:334)\n        at\norg.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplicationHandler.java:286)\n        at\norg.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:567)\n        at org.mortbay.http.HttpContext.handle(HttpContext.java:1807)\n        at\norg.mortbay.jetty.servlet.WebApplicationContext.handle(WebApplicationContext.java:525)\n        at org.mortbay.http.HttpContext.handle(HttpContext.java:1757)\n        at org.mortbay.http.HttpServer.service(HttpServer.java:879)\n        at org.mortbay.http.HttpConnection.service(HttpConnection.java:789)\n        at\norg.mortbay.http.HttpConnection.handleNext(HttpConnection.java:960)\n        at org.mortbay.http.HttpConnection.handle(HttpConnection.java:806)\n        at\norg.mortbay.http.SocketListener.handleConnection(SocketListener.java:218)\n        at org.mortbay.util.ThreadedServer.handle(ThreadedServer.java:300)\n        at org.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:511)\n\n\n2)\n&gt; So if I understand properly: other threads are still proceeding OK, it&#39;s\n&gt; just this one host that&#39;s not making any progress, because any thread\n&gt; that tries to get an associated CrawlServer (for any reason)\n\nThat is correct.\n\n3) dumpExtraStats().\nHere are three consecutive dumps.\n\n2009-09-17 18:33:21.822 INFO thread-97\norg.archive.util.CachedBdbMap.dumpExtraStats() DB name:servers,  Cache\nHit: 99%, Not in map: 79937, Total number of gets: 14330000  1=NullPhantom\n 6=TransientCond  901870921=AwaitExpunge  0=NullValue  0=NotInMap \n0=AwaitTimeout  422830=SwapIn  85379=diskHit  14164684=cacheHit \n14330000=countOfGets  0=SwapInRetry  887040=DiskPut  0=Remove1Used \n0=Remove2Used  0=ReplaceUsed  0=PutUsed  75196=PutIfUsed  0=SyncUsed \n79887=diskMapSize  452=memMap.size\n\n2009-09-17 18:34:24.189 INFO thread-23\norg.archive.util.CachedBdbMap.dumpExtraStats() DB name:hosts,  Cache Hit:\n99%, Not in map: 79478, Total number of gets: 14200000  1=NullPhantom \n1=TransientCond  0=AwaitExpunge  0=NullValue  0=NotInMap  0=AwaitTimeout \n422840=SwapIn  88927=diskHit  14031595=cacheHit  14200000=countOfGets \n0=SwapInRetry  888044=DiskPut  0=Remove1Used  0=Remove2Used  0=ReplaceUsed\n 0=PutUsed  74742=PutIfUsed  0=SyncUsed  79417=diskMapSize \n274=memMap.size\n\n2009-09-17 18:37:07.468 INFO thread-60\norg.archive.util.CachedBdbMap.dumpExtraStats() DB name:servers,  Cache\nHit: 99%, Not in map: 79986, Total number of gets: 14340000  1=NullPhantom\n 6=TransientCond  1101700501=AwaitExpunge  0=NullVal\nue  0=NotInMap  0=AwaitTimeout  423101=SwapIn  85433=diskHit \n14174581=cacheHit  14340000=countOfGets  0=SwapInRetry  888044=DiskPut \n0=Remove1Used  0=Remove2Used  0=ReplaceUsed  0=PutUsed  75245=PutIfUsed \n0=SyncUsed  79936=diskMapSize\n 377=memMap.size\n\n\n4)\n&gt; TT#9 was showing same symptom, but different URI/host-in-progress?\n\nNo, that was a typo. It is tt#19 not tt#9. Sorry for the confusion.\n\n5)  I will wait another day before trying to manually remove the stuck\nmemMap entry.\n\nThanks Gordon.\ni.\n\n\n&gt; igor@... wrote:\n&gt;&gt;&gt; Still investigating, but thoughts so far:\n&gt;&gt;&gt;\n&gt;&gt;&gt; A notable thing about the &quot;ToeThread #19&quot; dumps is that they are\n&gt;&gt;&gt; usually\n&gt;&gt;&gt; BLOCKED waiting for the monitor on a specific CachedBdbMap$SoftEntry\n&gt;&gt;&gt; instance (&lt;0x97f40ad8&gt;, corresponding to the one server of interest to\n&gt;&gt;&gt; the URI-in-progress). That means some other thread holds it. But\n&gt;&gt;&gt; occasionally, tt#19 holds that lock.\n&gt;&gt;\n&gt;&gt; I attached a file with more info.\n&gt;&gt;\n&gt;&gt;&gt; This alternation suggests the other thread or threads are contributors\n&gt;&gt;&gt; to the problem state. You mentioned these might be in the middle of a\n&gt;&gt;&gt; JMX URI import; can you share some of those stacks, too? (Indeed, any\n&gt;&gt;&gt; stack with a reference to &lt;0x97f40ad8&gt; from the same all-threads-dump.)\n&gt;&gt;\n&gt;&gt; There are 4 additional threads that are stuck in the same loop: 3 JMX\n&gt;&gt; import URIs and one *gui-kill-and-replace-thread* threads.\n&gt;\n&gt; Can you send one deeper sample of this stack (the &quot;PoolThread-0&quot; I\n&gt; think) -- I&#39;m curious how it got entangled.\n&gt;\n&gt;&gt; Initially there were only two stuck threads, tt#19 and one JMX import\n&gt;&gt; URI\n&gt;&gt; thread. The URI import process is sequential, one url at time, across\n&gt;&gt; all\n&gt;&gt; TLDs. Heritrix instance does not discover URLs itself at all.\n&gt;&gt;\n&gt;&gt; I end up with two more stuck JMX import URI threads because I restarted\n&gt;&gt; the URI import process twice with incorrect filter that drops urls from\n&gt;&gt; the *problematic* site/source-server.\n&gt;\n&gt; So if I understand properly: other threads are still proceeding OK, it&#39;s\n&gt; just this one host that&#39;s not making any progress, because any thread\n&gt; that tries to get an associated CrawlServer (for any reason)\n&gt;\n&gt;&gt; I also tried to kill tt#9 via GUI but that did not work. Thus, another\n&gt;&gt; stuck thread.\n&gt;\n\n\n&gt; The info below is useful too.\n&gt;\n&gt; Current best guess: it appears that the &#39;expunge&#39; (clearing memMap\n&gt; entry) of a GC&#39;d item only occurs if the keys identity-match on line\n&gt; 1474 of CachedBdbMap. I don&#39;t know why they wouldn&#39;t match -- must be\n&gt; some other synchronization problem -- but if they don&#39;t, there seems no\n&gt; way that key could ever be removed from the map. The necessary exit\n&gt; condition for all the loops is that the key is removed as expected --\n&gt; explaining the thread trap.\n&gt;\n&gt; I think this theory of the loop (if not the original cause) could be\n&gt; confirmed if you could connect to the JVM via JConsole and set the\n&gt; logging level of org.archive.util.CachedBdbMap logger to INFO (at least\n&gt; briefly). There should then be a flurry of output from\n&gt; CachedBdbMap.dumpExtraStats(), and the &quot;NotInMap&quot; value reported as\n&gt; nonzero (and probably increasing rapidly with each loop). Other numbers\n&gt; there might be interesting too.\n&gt;\n&gt; Can you try that?\n\n&gt; I think manually removing the stuck memMap entry, for example via a\n&gt; one-time BeanshellProcessor script, may release the threads -- though of\n&gt; course the problem could recur because we still don&#39;t know how the bad\n&gt; state was initially triggered.\n&gt;\n&gt; It&#39;d be a bit of delicate error-prone surgery on the running process,\n&gt; but the rough approach might be:\n&gt;\n&gt; - pause\n&gt; - add a new BeanshellProcessor\n&gt;    - give it a script somewhat like (untested)...\n&gt;\n&gt; ===\n&gt; run(curi) {\n&gt;    if(curi.getCrawlURIString().equals(\n&gt;         &quot;http://example.com/ONE_TIME_FAKE_TRIGGER_URI&quot;)) {\n&gt;      setAccessibility(true);\n&gt;      controller.serverCache.servers.memMap.remove(\n&gt;         &quot;newyork.craigslist.org&quot;);\n&gt;    }\n&gt; }\n&gt; ===\n&gt;\n&gt; - add the trigger URI that will pass scoping\n&gt; - unpause\n&gt; - hope for the best & check if it worked\n&gt; - pause and remove BeanshellProcessor until next time problem repeats\n&gt;\n&gt; I&#39;ve made an issue to track down the underlying trigger bug, see:\n&gt;\n&gt;    https://webarchive.jira.com/browse/HER-1677\n&gt;\n&gt; - Gordon @ IA\n&gt;\n&gt;&gt;&gt; Also, is the reported CPU usage negligible, pegged-near-100%, or\n&gt;&gt;&gt; somewhere in between?\n&gt;&gt;\n&gt;&gt; The java process uses about 50% of all cores and that is pretty much\n&gt;&gt; constant even when the crawler instance is paused. There is a constant\n&gt;&gt; JMX\n&gt;&gt; import URI activity, but that is single threaded and I cannot image it\n&gt;&gt; being CPU intensive.\n&gt;&gt;\n&gt;&gt;&gt; Is there a chance the JMX threads are adding many URIs from this same\n&gt;&gt;&gt; source server, and are making very very slow contended progress? (A\n&gt;&gt;&gt; frontier report might show the count of URIs on the corresponding queue\n&gt;&gt;&gt; growing, and maybe even &#39;lsof -o&#39; would show any read-position progress\n&gt;&gt;&gt; in the source files for the JMX operation, confirming some progress.)\n&gt;&gt;&gt; It\n&gt;&gt;&gt; would be good to know if this is a true endless-hysteresis/loop or just\n&gt;&gt;&gt; pathological slowness under a certain kind of contention.\n&gt;&gt;\n&gt;&gt; No, that is not the case.\n&gt;&gt;\n&gt;&gt;&gt; What does the heap usage look like? (The behavior of CachedBdbMap is\n&gt;&gt;&gt; intentionally GC-sensitive; operation under low-memory conditions,\n&gt;&gt;&gt; where\n&gt;&gt;&gt; something is GC&#39;d as soon as it&#39;s created, could be part of the problem\n&gt;&gt;&gt; cycle. But that&#39;s less likely a factor to consider if there&#39;s plenty of\n&gt;&gt;&gt; heap free space.)\n&gt;&gt;\n&gt;&gt; It is using only a half of the max heap value.\n&gt;&gt;\n&gt;&gt;&gt; Are you hoping to kick this crawl back into working state (which might\n&gt;&gt;&gt; be possible with enough trickery once we understand the problem), or\n&gt;&gt;&gt; just keeping it around for debugging?\n&gt;&gt;\n&gt;&gt; I will like to have it in a working state sooner or later either by\n&gt;&gt; restart or some other trickery. But for now it is still up and running.\n&gt;&gt;\n&gt;&gt; Thanks Gordon.\n&gt;&gt; i.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;&gt; - Gordon @ IA\n&gt;&gt;&gt;\n&gt;&gt;&gt; igor@... wrote:\n&gt;&gt;&gt;&gt; Hi Gordon,\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Thanks for looking into it. See comments below.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; The CachedBdbMap somewhat recently (since last official release)\n&gt;&gt;&gt;&gt;&gt; underwent some major refactoring to improve concurrency. The test\n&gt;&gt;&gt;&gt;&gt; coverage is reasonable and the code has been through some volume\n&gt;&gt;&gt;&gt;&gt; tests\n&gt;&gt;&gt;&gt;&gt; without showing problems, but this might be a new bug triggered by\n&gt;&gt;&gt;&gt;&gt; that\n&gt;&gt;&gt;&gt;&gt; code.\n&gt;&gt;&gt;&gt;&gt; If you pause the crawl, I presume only that one thread remains\n&gt;&gt;&gt;&gt;&gt; active.\n&gt;&gt;&gt;&gt;&gt; Is that right?\n&gt;&gt;&gt;&gt; Only one toe thread, that is right.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Is the CPU busy with only that thread active? I&#39;m still considering\n&gt;&gt;&gt;&gt;&gt; the\n&gt;&gt;&gt;&gt;&gt; other stacks you forwarded in a subsequent message; can you collect\n&gt;&gt;&gt;&gt;&gt; even\n&gt;&gt;&gt;&gt;&gt; more samples to get a sense of which branches are always being taken\n&gt;&gt;&gt;&gt;&gt; in\n&gt;&gt;&gt;&gt;&gt; the relevant methods?\n&gt;&gt;&gt;&gt; There is more than one thread active given that there is JMX\n&gt;&gt;&gt;&gt; activities\n&gt;&gt;&gt;&gt; even when the crawl is paused.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; There are at least two more JMX threads (trying to import an URI) that\n&gt;&gt;&gt;&gt; are\n&gt;&gt;&gt;&gt; stuck in the same loop as the toe thread.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; I attached a file with 100 quick thread dumps related to toe thread\n&gt;&gt;&gt;&gt; #19.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; The CachedBdbMap depends on some some garbage-collection-related\n&gt;&gt;&gt;&gt;&gt; trickery that might not be reliable in all JVMs. Can you say what\n&gt;&gt;&gt;&gt;&gt; JVM/host OS you&#39;re using?\n&gt;&gt;&gt;&gt; Sun&#39;s 1.6 (1.6.0_10-b33) and CentOS (CentOS release 5.3 (Final)).\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; i.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; igor@... wrote:\n&gt;&gt;&gt;&gt;&gt;&gt; I got a stuck thread that is disrupting the crawl.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Heritrix verion:\n&gt;&gt;&gt;&gt;&gt;&gt; 1.15.4 (checked out on 9/9/2009)\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Java env:\n&gt;&gt;&gt;&gt;&gt;&gt; Linux 2.6.18-128.1.10.el5PAE #1 SMP Thu May 7 11:14:31 EDT 2009 i686\n&gt;&gt;&gt;&gt;&gt;&gt; i686\n&gt;&gt;&gt;&gt;&gt;&gt; i386 GNU/Linux\n&gt;&gt;&gt;&gt;&gt;&gt; java version &quot;1.6.0_10&quot;\n&gt;&gt;&gt;&gt;&gt;&gt; Java(TM) SE Runtime Environment (build 1.6.0_10-b33)\n&gt;&gt;&gt;&gt;&gt;&gt; Java HotSpot(TM) Server VM (build 11.0-b15, mixed mode)\n&gt;&gt;&gt;&gt;&gt;&gt; JAVA_OPTS=-Xmx512m\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Sleepycat:\n&gt;&gt;&gt;&gt;&gt;&gt; je-3.3.82.jar\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Here is the thread dump:\n&gt;&gt;&gt;&gt;&gt;&gt; ToeThread #19: http://newyork.craigslist.org/mnh/tix/1371733715.html\n&gt;&gt;&gt;&gt;&gt;&gt;  CrawlURI http://newyork.craigslist.org/mnh/tix/1371733715.html\n&gt;&gt;&gt;&gt;&gt;&gt; 1\n&gt;&gt;&gt;&gt;&gt;&gt; attempts\n&gt;&gt;&gt;&gt;&gt;&gt;     in processor: Preprocessor\n&gt;&gt;&gt;&gt;&gt;&gt;     ACTIVE for 16h25m22s108ms\n&gt;&gt;&gt;&gt;&gt;&gt;     step: ABOUT_TO_BEGIN_PROCESSOR for 16h25m22s108ms\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap$SoftEntry.getPhantom(CachedBdbMap.java:1625)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap$SoftEntry.isCleared(CachedBdbMap.java:1632)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap$SoftEntry.startExpunge(CachedBdbMap.java:1693)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap.isExpunged(CachedBdbMap.java:490)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap._getMem(CachedBdbMap.java:698)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.util.CachedBdbMap.get(CachedBdbMap.java:627)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.datamodel.ServerCache.getServerFor(ServerCache.java:99)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.datamodel.ServerCache.getServerFor(ServerCache.java:124)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.prefetch.PreconditionEnforcer.considerDnsPreconditions(PreconditionEnforcer.java:227)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.prefetch.PreconditionEnforcer.innerProcess(PreconditionEnforcer.java:111)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.framework.Processor.process(Processor.java:112)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.framework.ToeThread.processCrawlUri(ToeThread.java:302)\n&gt;&gt;&gt;&gt;&gt;&gt;     org.archive.crawler.framework.ToeThread.run(ToeThread.java:151)\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; i.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; ------------------------------------\n&gt;&gt;\n&gt;&gt; Yahoo! Groups Links\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\n"}}