{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"Kjo4RTI2MOZ_FBsXqzy_2KhEzZ-1RgpoDgIcM27PVDvD7E08arUP0Tlc_GlC6TuFq_YlNrE_tNPz1v1jSrYHpiFQAPwvHVE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] RE: HER-2070 or: Any news on the Cookie Monster bug","postDate":"1412896198","msgId":8630,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU0MzcxNUM2LjYwMTA3MDJAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PENBQS16NzBMX0FkWkJYdDJHRUc0aU0zakNpa0VTbStxN2VHenhDOTFURmRNWjc5MFVpUUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEU0ODZEOTNFMzcyRDhDNDI4MkU4REYwNzgzOTJGMTJERTBFQzNEQGJsaWtpLmJva2hsYWRhLmxvY2FsPgk8Q0FBLXo3MEpjVz02bS1XdzZhOHdLPUQ2bkhRc0c0WEFyRG9Qb2VZQzJMUHFjK0M5TjhBQG1haWwuZ21haWwuY29tPgk8OTFEMTI1MUQ5QzY4OEI0RDg0NDhENEZGNTAwMDMzMUQyQUQzNTJEMEBWOEItRVhDSEFOR0UwMS5hZC5ibC51az4JPDkxRDEyNTFEOUM2ODhCNEQ4NDQ4RDRGRjUwMDAzMzFEMkFEMzU1NDZAVjhCLUVYQ0hBTkdFMDEuYWQuYmwudWs+CTxDQUEtejcwS3llK0NLaFlyNjlqZWJDaWRTeW10Y2M3UTBVX2JfdFZPcnVGdDRBRjR3dWdAbWFpbC5nbWFpbC5jb20+CTxtMTJ2bjYrMWViMWk0aUBZYWhvb0dyb3Vwcy5jb20+IDxDQUEtejcwTF9BZFpCWHQyR0VHNGlNM2pDaWtFU20rcTdlR3p4QzkxVEZkTVo3OTBVaVFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":8629,"nextInTopic":0,"prevInTime":8629,"nextInTime":8631,"topicId":8620,"numMessagesInTopic":9,"msgSnippet":"Both the Tree___ and LinkedHash__ classes are slightly more space/time intensive than plain HashMaps/HashSets. Since these classes haven t yet needed that","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 393 invoked by uid 102); 9 Oct 2014 23:10:00 -0000\r\nX-Received: from unknown (HELO mtaq4.grp.bf1.yahoo.com) (10.193.84.143)\n  by m10.grp.bf1.yahoo.com with SMTP; 9 Oct 2014 23:10:00 -0000\r\nX-Received: (qmail 24915 invoked from network); 9 Oct 2014 23:10:00 -0000\r\nX-Received: from unknown (HELO relay01.pair.com) (98.139.170.167)\n  by mtaq4.grp.bf1.yahoo.com with SMTP; 9 Oct 2014 23:10:00 -0000\r\nX-Received: (qmail 90793 invoked by uid 0); 9 Oct 2014 23:10:00 -0000\r\nX-Received: from 142.254.51.214 (HELO probook.local) (142.254.51.214)\n  by relay01.pair.com with SMTP; 9 Oct 2014 23:10:00 -0000\r\nX-pair-Authenticated: 142.254.51.214\r\nMessage-ID: &lt;543715C6.6010702@...&gt;\r\nDate: Thu, 09 Oct 2014 16:09:58 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:31.0) Gecko/20100101 Thunderbird/31.1.2\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;E486D93E372D8C4282E8DF078392F12DE0EC3D@...&gt;\t&lt;CAA-z70JcW=6m-Ww6a8wK=D6nHQsG4XArDoPoeYC2LPqc+C9N8A@...&gt;\t&lt;91D1251D9C688B4D8448D4FF5000331D2AD352D0@...&gt;\t&lt;91D1251D9C688B4D8448D4FF5000331D2AD35546@...&gt;\t&lt;CAA-z70Kye+CKhYr69jebCidSymtcc7Q0U_b_tVOruFt4AF4wug@...&gt;\t&lt;m12vn6+1eb1i4i@...&gt; &lt;CAA-z70L_AdZBXt2GEG4iM3jCikESm+q7eGzxC91TFdMZ790UiQ@...&gt;\r\nIn-Reply-To: &lt;CAA-z70L_AdZBXt2GEG4iM3jCikESm+q7eGzxC91TFdMZ790UiQ@...&gt;\r\nContent-Type: text/plain; charset=utf-8; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nSubject: Re: [archive-crawler] RE: HER-2070 or: Any news on the Cookie Monster\n bug\r\nX-Yahoo-Group-Post: member; u=137285340; y=jnEwVfqH1omjpOriTdCQLcrQ8owP1W79RjBtqWtWTAhZ\r\nX-Yahoo-Profile: gojomo\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\n\r\nBoth the Tree___ and LinkedHash__ classes are slightly more space/time \nintensive than plain HashMaps/HashSets. Since these classes haven&#39;t yet \nneeded that extra ordering behavior, for their main roles, adding \noverhead just to fit a crude generic test seems misguided to me. Better \nto fix (or even conditionally suppress) the test.\n\nPersonally, I&#39;d prefer if serialized bytes across re-serialization \ncycles were strongly encouraged (if not guaranteed) to be identical. \nSuch determinism in representation and reconstitution could be useful.\n\nI was hoping the JDK8 behavior Andy reported might&#39;ve been a move toward \nthat, but looking at the HashMap.writeObject/HashMap.readObject \nimplementations, it seems that (among other things) the number of \nbuckets in the reconstituted HashMap may shrink... and the tests are \npassing because the maps haven&#39;t been too stressed.\n\nTo allow freedom for the modules to continue using the most appropriate \nclass, but maintain most of the spirit/utility of the re-serialization \ntesting, I&#39;d suggest the following roundabout approach. It may seem a \nbit baroque but is probably just a dozen or so lines around \nModuleTestBase.verifySerialization().\n\n(1) create a custom RepeatableObjectOutputStream (ROOS) subclass that \nuses the ObjectOutputStream (OOS) replaceObject functionality to replace \nHashMaps/HashSets with new minimal instances, created by inserting all \nentries in key-sorted order. (Interestingly, I don&#39;t think these \nactually have to be key-ordered variant Map/Set classes: they just have \nto be created in a deterministic way.)\n\n(2) In ModuleTestBase.verifySerialization:\n     (a) starting with object A, standard-OOS-serialize, then \nstandard-deserialize into object B\n     (b) to compare A and B, serialize them both with the new \nRepeatableObjectOutputStream, and compare those bytes\n\nIn this way the standard serialization is still tested, both ways. But \nthe resulting object is verified as being \nsufficiently-similar-in-all-observable-aspects only via the ROOS-output \nbinary compare. The ROOS serialization isn&#39;t adopted elsewhere.\n\n- Gordon\n\nOn 10/9/14 12:53 PM, Noah Levitt nlevitt@... [archive-crawler] \nwrote:\n&gt;\n&gt;\n&gt; Thanks for investigating, Andy. If this were a pull request, I would\n&gt; merge it. Another option that might be slightly lighter weight would be\n&gt; to use LinkedHashMap/LinkedHashSet. If I remember I right, I&#39;ve seen\n&gt; this kind of thing before and switched certain other data structures to\n&gt; use those types.\n&gt;\n&gt; Noah\n&gt;\n&gt;\n&gt;\n&gt; On Wed, Oct 8, 2014 at 2:21 AM, anjackson@...\n&gt; &lt;mailto:anjackson@...&gt; [archive-crawler]\n&gt; &lt;archive-crawler@yahoogroups.com\n&gt; &lt;mailto:archive-crawler@yahoogroups.com&gt;&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt;     FWIW, I couldn&#39;t reproduce the SslTrustLevel one. I did manage to\n&gt;     reproduce the others, which I&#39;ll document here in case it helps\n&gt;     anyone in the future.\n&gt;\n&gt;     The HtmlFormCredentialTest and CredentialStoreTest tests both fail\n&gt;     because they rely on classes that use a HashMap and a HashSet. The\n&gt;     test itself is one that checks that serialisation and\n&gt;     de-serialisation of instances of these classes is safe, but it just\n&gt;     uses binary equivalence of the serialised forms in order to check\n&gt;     that the serialisation process works.\n&gt;\n&gt;     Unfortunately, something happened to Java 7 which means that\n&gt;     hashsets/maps do not maintain order when re-de-serialised (which is\n&gt;     not really to be expected anyway, necessarily). Consequently, these\n&gt;     tests pass for Java 6 and Java 8 (both of which must presumably\n&gt;     deliberately fix the order the keys/members are serialised in), but\n&gt;     fail for Java 7 (or at least for all the Java 7 versions I could\n&gt;     find lying around.)\n&gt;\n&gt;     Switching to use a TreeSet and a Tr eeMap stops these tests from\n&gt;     failing (see patch below), but I&#39;m not sure if that the right\n&gt;     semantics so I&#39;ve not turned this into a pull request.\n&gt;\n&gt;     Cheers,\n&gt;     Andy\n&gt;\n&gt;     diff --git\n&gt;     a/commons/src/main/java/org/archive/spring/KeyedProperties.java\n&gt;     b/commons/src/main/java/org/archive/spring/KeyedProperties.java\n&gt;     index 4651e83..5481dfe 100644\n&gt;     --- a/commons/src/main/java/org/archive/spring/KeyedProperties.java\n&gt;     +++ b/commons/src/main/java/org/archive/spring/KeyedProperties.java\n&gt;     @@ -20,9 +20,10 @@\n&gt;        package org.archive.spring;\n&gt;\n&gt;       import java.util.ArrayList;\n&gt;     -import java.util.HashSet;\n&gt;       import java.util.List;\n&gt;       import java.util.Map;\n&gt;     +import java.util.Set;^M\n&gt;     +import java.util.TreeSet;^M\n&gt;       import java.util.concurrent.ConcurrentHashMap;\n&gt;       import java.util.logging.Logger;\n&gt;\n&gt;     @@ -42,7 +43,7 @@ public class KeyedProperties extends\n&gt;     ConcurrentHashMap&lt;String,Object&gt; {\n&gt;\n&gt;       &nbsp ;   /** the alternate global property-paths leading to this map\n&gt;            * TODO: consider if deterministic ordered list is important */\n&gt;     -    protected HashSet&lt;String&gt; externalPaths = new HashSet&lt;String&gt;();\n&gt;     +    protected Set&lt;String&gt; externalPaths = new TreeSet&lt;String&gt;();^M\n&gt;\n&gt;           /**\n&gt;            * Add a path by which the outside world can reach this map\n&gt;     diff --git\n&gt;     a/modules/src/main/java/org/archive/modules/credential/HtmlFormCredential.java\n&gt;     b/modules/src/main/java/org/archive/modules/credential/HtmlFormCredential.java\n&gt;     index becda3c..6885134 100644\n&gt;     ---\n&gt;     a/modules/src/main/java/org/archive/modules/credential/HtmlFormCredential.java\n&gt;     +++\n&gt;     b/modules/src/main/java/org/archive/modules/credential/HtmlFormCredential.java\n&gt;     @@ -19,8 +19,8 @@\n&gt;\n&gt;       package org.archive.modules.credential;\n&gt;     &nbs p;\n&gt;     -import java.util.HashMap;\n&gt;       import java.util.Map;\n&gt;     +import java.util.TreeMap;\n&gt;       import java.util.logging.Logger;\n&gt;\n&gt;       import org.apache.commons.httpclient.URIException;\n&gt;     @@ -55,7 +55,7 @@ public class HtmlFormCredential extends Credential {\n&gt;           /**\n&gt;            * Form items.\n&gt;            */\n&gt;     -    protected Map&lt;String,String&gt; formItems = new\n&gt;     HashMap&lt;String,String&gt;();\n&gt;     +    protected Map&lt;String,String&gt; formItems = new\n&gt;     TreeMap&lt;String,String&gt;();\n&gt;           public Map&lt;String,String&gt; getFormItems() {\n&gt;               return this.formItems;\n&gt;           }\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n\n"}}