{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":95697582,"authorName":"G.B.Reddy","from":"&quot;G.B.Reddy&quot; &lt;reddy@...&gt;","profile":"gbreddysoft","replyTo":"LIST","senderId":"E9sC-i6ZsY9tDiXcqJUtYXrUPmGba_K7mFBSuf_GWi-aELw_osIZLPEVVUs2QKXY33u0QdYdMwToMQlEmKL5eodlSOrJ6huCtRVh6ow","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Re: Web crawler work ??","postDate":"1046364947","msgId":13,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDA3NjkwMWMyZGU4MSQxM2ZjZmU5MCRkNTAwYThjMEB0aWRlbHBhcmsuaXNvZnR0ZWNoaW5kaWEuY29tPg==","referencesHeader":"PDM3ZWQwMWMyZDczNCQ0ZjQ0NjliMCRkNTAwYThjMEBSZWRkeUdCPiA8MDM4MDAxYzJkN2I2JDJjMTIxZjAwJDNhZWJlZGQxQGdvam92YWlvPiA8M2ZlMDAxYzJkOWM3JGU1OGE0YTgwJGQ1MDBhOGMwQFJlZGR5R0I+IDwwMGRjMDFjMmRhMDckNjZlZTEzNjAkM2FlYmVkZDFAZ29qb3ZhaW8+"},"prevInTopic":12,"nextInTopic":15,"prevInTime":12,"nextInTime":14,"topicId":12,"numMessagesInTopic":6,"msgSnippet":"Gordon and Raymie, Here goes the proposal for the asynchronous DNS lookup API implementation. We shall implement a minimal resolver which is capable of sending","rawEmail":"Return-Path: &lt;reddy@...&gt;\r\nX-Sender: reddy@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_4); 27 Feb 2003 16:55:48 -0000\r\nReceived: (qmail 90900 invoked from network); 27 Feb 2003 16:55:46 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m14.grp.scd.yahoo.com with QMQP; 27 Feb 2003 16:55:46 -0000\r\nReceived: from unknown (HELO pub.isofttechindia.com) (203.199.202.17)\n  by mta1.grp.scd.yahoo.com with SMTP; 27 Feb 2003 16:55:44 -0000\r\nReceived: from ReddyGB (ReddyGB.isofttechindia.com [192.168.0.213])\n\tby pub.isofttechindia.com (8.11.0/8.11.0) with SMTP id h1RGrKi26295;\n\tThu, 27 Feb 2003 22:23:21 +0530\r\nMessage-ID: &lt;076901c2de81$13fcfe90$d500a8c0@...&gt;\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nCc: &quot;Raymie Stata&quot; &lt;raymie@...&gt;, &lt;wcr-team@...&gt;\r\nReferences: &lt;37ed01c2d734$4f4469b0$d500a8c0@ReddyGB&gt; &lt;038001c2d7b6$2c121f00$3aebedd1@gojovaio&gt; &lt;3fe001c2d9c7$e58a4a80$d500a8c0@ReddyGB&gt; &lt;00dc01c2da07$66ee1360$3aebedd1@gojovaio&gt;\r\nSubject: Re: [archive-crawler] Re: Web crawler work ??\r\nDate: Thu, 27 Feb 2003 22:25:47 +0530\r\nOrganization: ISoftTech\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_0766_01C2DEAF.2CDC3FB0&quot;\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4920.2300\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4920.2300\r\nX-eGroups-From: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nFrom: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nReply-To: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nX-Yahoo-Group-Post: member; u=95697582\r\nX-Yahoo-Profile: gbreddysoft\r\n\r\n\r\n------=_NextPart_000_0766_01C2DEAF.2CDC3FB0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nGordon and Raymie,\n\nHere goes the proposal for the asynchronous DNS lookup =\r\nAPI implementation.\n\nWe shall implement a minimal resolver which is capable=\r\n of sending DNS request packets and processing response packets in an async=\r\nhrounous nio fashion. This resolver class will contact a local name server =\r\nand rely on it to do the actual lookup. The local name server will be confi=\r\ngured to support recursion and better would be to use a name server which d=\r\noes lookup asynchronously. ( SQUID has asynchronous DNS lookup facilities )=\r\n.  Even if the local name server is not asynchrounous, our java resolver be=\r\ning asynchronous will be good enough since our primary goal is that we do n=\r\not want any blocking code in our crawler implementation. This idea even sou=\r\nnds good considering the fact we would only reinvent the same wheel if we o=\r\npt to implement a complete full-fledged resolver implementation which compl=\r\nies with the RFC 1035 and 1034. We can definitely implement this full-fledg=\r\ned resolver but the real concern is that this would require a lot of testin=\r\ng and the efforts to make it rock solid in terms of robustness would be hug=\r\ne.\n\nSo, the various jobs that we would have to do to build our Simple Async=\r\nhronous DNS lookup API would be \n    -- Request packet formation and reply =\r\npacket parsing in the exact RFC format.\n    -- Use non-blocking IO APIs and=\r\n do UDP. (We might not need TCP since the name server is only in the local =\r\nnetwork.)\n    -- Do canonical name queries and A record queries.\n    -- Imp=\r\nlement timeouts.\n    -- Implement caching based on TTL. ( This may have to =\r\nbe deferred as pointed by Raymie earlier. )\n    -- Integrate with SEDA.\n\nTh=\r\nanks,\nReddy\n\n  ----- Original Message ----- \n  From: Gordon Mohr \n  To: G.B=\r\n.Reddy \n  Cc: Raymie Stata ; wcr-team@... ; archive-crawler@=\r\nyahoogroups.com \n  Sent: Saturday, February 22, 2003 5:37 AM\n  Subject: [ar=\r\nchive-crawler] Re: Web crawler work ??\n\n\n  [CC&#39;ing to archive-crawler@yahoo=\r\ngroups.com]\n\n  Reddy writes:\n\n  &gt; On the first cut do we need to look at im=\r\nplementing an asynchronous DNS\n  &gt; lookup mechanism. If we are not, then it=\r\n is going to be two stages, viz.\n  &gt; DNSCacheHandlingStage and ResolvingSta=\r\nge, that can be employed using the\n  &gt; blocking DNS lookup calls in Java. T=\r\nhe first stage, DNSCacheHandlingStage,\n  &gt; would check if the entry is avai=\r\nlable in the cache. If available, he would\n  &gt; set the resolved address in =\r\nthe CrawlURI object and enqueue it to the\n  &gt; appropriate next stage. If th=\r\ne cache doesn&#39;t contain the entry, then he\n  &gt; would pass the request to th=\r\ne Resolving stage which would call the\n  &gt; InetAddress.getByName blocking m=\r\nethod to resolve it. The getByName result\n  &gt; would be set in the CrawlURI =\r\nobject as before and enqueued into the\n  &gt; appropriate next stage. In addit=\r\nion to this, the Resolving stage will\n  &gt; enqueue another event into the DN=\r\nSCacheHandlingStage to enable him update\n  &gt; his cache. So, the DNSCacheHan=\r\ndlingStage would be handling two types of\n  &gt; events, one is the lookup eve=\r\nnts and the other is the update cache events.\n  &gt; \n  &gt; One problem here is =\r\nthat the InetAddress class does not expose its cache\n  &gt; variables to its u=\r\nsers. Even we cannot check if the cache has an entry\n  &gt; before calling the=\r\n getByName method. So, we should be disabling the java\n  &gt; cache ( using th=\r\ne policy file ) and implementing our own caching mechanism.\n  &gt; ( The DNSCa=\r\ncheHandlingStage would have to additionally do the job of\n  &gt; throwing away=\r\n the expired entries in the cache also.)\n  &gt; \n  &gt; Let me know your comments=\r\n on this.\n\n  This looks like a good first cut. I&#39;m still working to improve=\r\n my \n  understanding of the best way to use the staged style, mostly by\n  l=\r\nooking at their HTTP and HTTP Server (Haboob) code. \n\n  It seems that they&#39;=\r\nve tended to use a single Stage object to do \n  many different steps/aspect=\r\ns of one process, by switching on the\n  type of QueueElement received. \n\n  =\r\nSo for example their seda.sandStorm.seda.apps.Haboob.http.HttpRecv \n  accep=\r\nts events of types....\n\n    - httpConnection\n    - httpRequest\n    - SinkCl=\r\nosedEvent\n    - timerEvent\n\n  And their seda.sandStorm.lib.http.httpServer =\r\naccepts events of\n  types...\n\n    - ATcpInPacket\n    - ATcpConnection\n    -=\r\n aSocketErrorEvent\n    - SinkDrainedEvent\n    - SinkCloggedEvent\n    - Sink=\r\nClosedEvent\n    - ATcpListenSuccessEvent\n\n  They also use Sinks that are no=\r\nt associated with stages; rather,\n  they interface to unstaged components w=\r\nhich nonetheless result in \n  an eventual event to some supplied answer Sin=\r\nk. See for example\n  seda.sandStorm.lib.http.httpConnection.\n\n  So perhaps =\r\nas a matter of grouping related tasks, the same Stage object \n  should be r=\r\ne-entered over the course of a lookup, with different triggering \n  events.=\r\n For example, you might want to reenter a single DNSResolvingStage\n  over t=\r\nhe course of cache lookup, lookup-initiation, result-receiving (or\n  timeou=\r\nt), etc. I&#39;m not sure; use your judgement as to how many stages are \n  real=\r\nly needed.\n\n  &gt; P.S : We found some openly available async dns client APIs =\r\nin C language.\n\n  That could be useful as a model. (I doubt we&#39;d want to ca=\r\nll out to C\n  for this simple step, though -- and if we nailed down a truly=\r\n async Java \n  DNS facility, a lot of open source projects would probably b=\r\ne quite happy.)\n\n  Also: I heard back from Patrick Eaton about SEDA-style a=\r\nsync HTTP client\n  code... he has a rough implementation for simple usage, =\r\nand he knows of \n  another one at Berkeley which goes deeper into HTTP/1.1 =\r\nconformance and\n  optimal performance. I&#39;ve asked him to forward whatever a=\r\ndditional code\n  or details he can.\n\n  - Gordon\n\n\n\n        Yahoo! Groups Sp=\r\nonsor \n              ADVERTISEMENT\n             \n       \n       \n\n  To unsu=\r\nbscribe from this group, send an email to:\n  archive-crawler-unsubscribe@ya=\r\nhoogroups.com\n\n\n\n  Your use of Yahoo! Groups is subject to the Yahoo! Terms=\r\n of Service. \n\n\r\n------=_NextPart_000_0766_01C2DEAF.2CDC3FB0\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 5.50.4134.600&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;&lt;/STYLE&gt;=\r\n\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Gordon a=\r\nnd Raymie,&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV=\r\n&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Here goes the proposal for the asynchron=\r\nous DNS \nlookup API implementation.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial si=\r\nze=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;We shall implem=\r\nent a minimal resolver which is \ncapable of sending DNS request packets and=\r\n processing response packets in an \nasynchrounous nio fashion. This resolve=\r\nr class will contact a local name server \nand rely on it to do the actual l=\r\nookup.&nbsp;The&lt;/FONT&gt;&lt;FONT face=3DArial \nsize=3D2&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;&lt;FONT face=3DArial size=3D2&gt; local name server will \nbe configured to =\r\nsupport recursion&nbsp;and better would be to use a name server \nwhich does=\r\n lookup a&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;synchronously. ( SQUID has \nasy=\r\nnchronous DNS lookup facilities ). &nbsp;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT \nface=\r\n=3DArial size=3D2&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;FONT face=3DArial size=3D2&gt;E=\r\nven if the \nlocal name server&nbsp;is not asynchrounous, our java resolver&=\r\nnbsp;being \nasynchronous will be good enough&nbsp;since our primary goal&nb=\r\nsp;is that we do \nnot want any blocking code in our crawler implementation.=\r\n This idea even sounds \ngood considering the fact we would only&nbsp;reinve=\r\nnt the same wheel if we opt \nto implement a complete full-fledged resolver =\r\nimplementation which complies with \nthe RFC 1035 and 1034.&nbsp;We can defi=\r\nnitely implement this full-fledged \nresolver but the real concern is that t=\r\nhis would require a lot of testing and \nthe efforts to make it&nbsp;rock so=\r\nlid in&nbsp;terms of robustness would be \nhuge.&lt;/FONT&gt;&lt;/DIV&gt;&lt;/FONT&gt;&lt;/FONT&gt;\n=\r\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DAria=\r\nl size=3D2&gt;So, the various jobs that&nbsp;we would have to \ndo&nbsp;to buil=\r\nd our&nbsp;Simple Asynchronous DNS lookup API&lt;/FONT&gt;&lt;FONT \nface=3DArial siz=\r\ne=3D2&gt; would be &lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;=\r\n&nbsp; -- Request packet formation and \nreply packet parsing in the exact R=\r\nFC format.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp;=\r\n -- Use non-blocking IO&nbsp;APIs \nand do UDP. (We might not need TCP since=\r\n the name server is only in the local \nnetwork.)&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT fa=\r\nce=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; --&nbsp;Do canonical name \nqueries&n=\r\nbsp;and A record queries.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nb=\r\nsp;&nbsp;&nbsp; -- Implement \ntimeouts.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DAria=\r\nl size=3D2&gt;&nbsp;&nbsp;&nbsp; -- Implement caching based on \nTTL. ( This ma=\r\ny have to be deferred&nbsp;as pointed \nby&nbsp;Raymie&nbsp;earlier.&nbsp;)&lt;=\r\n/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; -- &lt;/FONT&gt;=\r\n&lt;FONT face=3DArial \nsize=3D2&gt;Integrate&nbsp;with SEDA.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;F=\r\nONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;Thanks,&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Reddy&lt;/FONT&gt;&lt;/DI=\r\nV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;BLOCKQUOTE \nstyle=\r\n=3D&quot;PADDING-RIGHT: 0px; PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #=\r\n000000 2px solid; MARGIN-RIGHT: 0px&quot;&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;---=\r\n-- Original Message ----- &lt;/DIV&gt;\n  &lt;DIV \n  style=3D&quot;BACKGROUND: #e4e4e4; FO=\r\nNT: 10pt arial; font-color: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; \n  &lt;A title=3Dgojomo@archiv=\r\ne.org href=3D&quot;mailto:gojomo@...&quot;&gt;Gordon Mohr&lt;/A&gt; \n  &lt;/DIV&gt;\n  &lt;DIV s=\r\ntyle=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A title=3Dreddy@... \n  href=\r\n=3D&quot;mailto:reddy@...&quot;&gt;G.B.Reddy&lt;/A&gt; &lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: =\r\n10pt arial&quot;&gt;&lt;B&gt;Cc:&lt;/B&gt; &lt;A title=3Draymie@... \n  href=3D&quot;mailto:raym=\r\nie@...&quot;&gt;Raymie Stata&lt;/A&gt; ; &lt;A \n  title=3Dwcr-team@...=\r\nm \n  href=3D&quot;mailto:wcr-team@...&quot;&gt;wcr-team@...=\r\nm&lt;/A&gt; ; &lt;A \n  title=3Darchive-crawler@yahoogroups.com \n  href=3D&quot;mailto:arc=\r\nhive-crawler@yahoogroups.com&quot;&gt;archive-crawler@yahoogroups.com&lt;/A&gt; \n  &lt;/DIV&gt;=\r\n\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Sent:&lt;/B&gt; Saturday, February 22, 2003=\r\n 5:37 \n  AM&lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Subject:&lt;/B&gt; [archiv=\r\ne-crawler] Re: Web \n  crawler work ??&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT \n  face=3DArial size=\r\n=3D2&gt;&lt;/FONT&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;TT&gt;[CC&#39;ing to &lt;A \n  href=3D&quot;mailto:archive-crawler@y=\r\nahoogroups.com&quot;&gt;archive-crawler@yahoogroups.com&lt;/A&gt;]&lt;BR&gt;&lt;BR&gt;Reddy \n  writes=\r\n:&lt;BR&gt;&lt;BR&gt;&gt; On the first cut do we need to look at implementing an \n  asy=\r\nnchronous DNS&lt;BR&gt;&gt; lookup mechanism. If we are not, then it is going to =\r\n\n  be two stages, viz.&lt;BR&gt;&gt; DNSCacheHandlingStage and ResolvingStage, th=\r\nat can \n  be employed using the&lt;BR&gt;&gt; blocking DNS lookup calls in Java. =\r\nThe first \n  stage, DNSCacheHandlingStage,&lt;BR&gt;&gt; would check if the entry=\r\n is available in \n  the cache. If available, he would&lt;BR&gt;&gt; set the resol=\r\nved address in the \n  CrawlURI object and enqueue it to the&lt;BR&gt;&gt; appropr=\r\niate next stage. If the \n  cache doesn&#39;t contain the entry, then he&lt;BR&gt;&gt;=\r\n would pass the request to the \n  Resolving stage which would call the&lt;BR&gt;&=\r\ngt; InetAddress.getByName blocking \n  method to resolve it. The getByName r=\r\nesult&lt;BR&gt;&gt; would be set in the \n  CrawlURI object as before and enqueued=\r\n into the&lt;BR&gt;&gt; appropriate next \n  stage. In addition to this, the Resol=\r\nving stage will&lt;BR&gt;&gt; enqueue another \n  event into the DNSCacheHandlingS=\r\ntage to enable him update&lt;BR&gt;&gt; his cache. \n  So, the DNSCacheHandlingSta=\r\nge would be handling two types of&lt;BR&gt;&gt; events, \n  one is the lookup even=\r\nts and the other is the update cache events.&lt;BR&gt;&gt; \n  &lt;BR&gt;&gt; One proble=\r\nm here is that the InetAddress class does not expose its \n  cache&lt;BR&gt;&gt; v=\r\nariables to its users. Even we cannot check if the cache has an \n  entry&lt;BR=\r\n&gt;&gt; before calling the getByName method. So, we should be disabling \n  th=\r\ne java&lt;BR&gt;&gt; cache ( using the policy file ) and implementing our own \n  =\r\ncaching mechanism.&lt;BR&gt;&gt; ( The DNSCacheHandlingStage would have to \n  add=\r\nitionally do the job of&lt;BR&gt;&gt; throwing away the expired entries in the \n =\r\n cache also.)&lt;BR&gt;&gt; &lt;BR&gt;&gt; Let me know your comments on this.&lt;BR&gt;&lt;BR&gt;Th=\r\nis \n  looks like a good first cut. I&#39;m still working to improve my &lt;BR&gt;unde=\r\nrstanding \n  of the best way to use the staged style, mostly by&lt;BR&gt;looking =\r\nat their HTTP \n  and HTTP Server (Haboob) code. &lt;BR&gt;&lt;BR&gt;It seems that they&#39;=\r\nve tended to use a \n  single Stage object to do &lt;BR&gt;many different steps/as=\r\npects of one process, by \n  switching on the&lt;BR&gt;type of QueueElement receiv=\r\ned. &lt;BR&gt;&lt;BR&gt;So for example \n  their seda.sandStorm.seda.apps.Haboob.http.Ht=\r\ntpRecv &lt;BR&gt;accepts events of \n  types....&lt;BR&gt;&lt;BR&gt;&nbsp; - httpConnection&lt;BR=\r\n&gt;&nbsp; - httpRequest&lt;BR&gt;&nbsp; - \n  SinkClosedEvent&lt;BR&gt;&nbsp; - timerEvent=\r\n&lt;BR&gt;&lt;BR&gt;And their \n  seda.sandStorm.lib.http.httpServer accepts events of&lt;B=\r\nR&gt;types...&lt;BR&gt;&lt;BR&gt;&nbsp; \n  - ATcpInPacket&lt;BR&gt;&nbsp; - ATcpConnection&lt;BR&gt;&n=\r\nbsp; - \n  aSocketErrorEvent&lt;BR&gt;&nbsp; - SinkDrainedEvent&lt;BR&gt;&nbsp; - \n  Sin=\r\nkCloggedEvent&lt;BR&gt;&nbsp; - SinkClosedEvent&lt;BR&gt;&nbsp; - \n  ATcpListenSuccessE=\r\nvent&lt;BR&gt;&lt;BR&gt;They also use Sinks that are not associated with \n  stages; rat=\r\nher,&lt;BR&gt;they interface to unstaged components which nonetheless \n  result i=\r\nn &lt;BR&gt;an eventual event to some supplied answer Sink. See for \n  example&lt;BR=\r\n&gt;seda.sandStorm.lib.http.httpConnection.&lt;BR&gt;&lt;BR&gt;So perhaps as a \n  matter o=\r\nf grouping related tasks, the same Stage object &lt;BR&gt;should be \n  re-entered=\r\n over the course of a lookup, with different triggering &lt;BR&gt;events. \n  For =\r\nexample, you might want to reenter a single DNSResolvingStage&lt;BR&gt;over the \n=\r\n  course of cache lookup, lookup-initiation, result-receiving (or&lt;BR&gt;timeou=\r\nt), \n  etc. I&#39;m not sure; use your judgement as to how many stages are &lt;BR&gt;=\r\nreally \n  needed.&lt;BR&gt;&lt;BR&gt;&gt; P.S : We found some openly available async dn=\r\ns client APIs \n  in C language.&lt;BR&gt;&lt;BR&gt;That could be useful as a model. (I =\r\ndoubt we&#39;d want to \n  call out to C&lt;BR&gt;for this simple step, though -- and =\r\nif we nailed down a truly \n  async Java &lt;BR&gt;DNS facility, a lot of open sou=\r\nrce projects would probably be \n  quite happy.)&lt;BR&gt;&lt;BR&gt;Also: I heard back f=\r\nrom Patrick Eaton about SEDA-style \n  async HTTP client&lt;BR&gt;code... he has a=\r\n rough implementation for simple usage, \n  and he knows of &lt;BR&gt;another one =\r\nat Berkeley which goes deeper into HTTP/1.1 \n  conformance and&lt;BR&gt;optimal p=\r\nerformance. I&#39;ve asked him to forward whatever \n  additional code&lt;BR&gt;or det=\r\nails he can.&lt;BR&gt;&lt;BR&gt;- Gordon&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;To \n  unsubscribe =\r\nfrom this group, send an email \n  to:&lt;BR&gt;archive-crawler-unsubscribe@yahoog=\r\nroups.com&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;Your \n  use of Yahoo! Groups is subject t=\r\no the &lt;A \n  href=3D&quot;http://docs.yahoo.com/info/terms/&quot;&gt;Yahoo! Terms of Serv=\r\nice&lt;/A&gt;.&lt;/TT&gt; \n&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_0766_01C2DEAF.2CDC3FB0--\r\n\n"}}