{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"fh42cWRxYImN0XsCOpXatBYWRxQ4RRUxdAqCLWqzwnM-jIiJqFsay5SZRGYW6QqqCYXnSkkjlBPrq11qA98SzM92SKuypiU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] How to configure a bigger BloomUriUniqFilter","postDate":"1154476027","msgId":3142,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ0Q0ZFN0ZCLjMwNTAzMDlAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGVhbHV1NytzamFzQGVHcm91cHMuY29tPg==","referencesHeader":"PGVhbHV1NytzamFzQGVHcm91cHMuY29tPg=="},"prevInTopic":3138,"nextInTopic":3145,"prevInTime":3141,"nextInTime":3143,"topicId":3138,"numMessagesInTopic":4,"msgSnippet":"... Yes -- it means that the predicted false-positive rate inherent to a bloom filter won t go over 1-in-4million (1 in 2^22) up through 125million inserts. ","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 55617 invoked from network); 1 Aug 2006 23:45:36 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m39.grp.scd.yahoo.com with QMQP; 1 Aug 2006 23:45:36 -0000\r\nReceived: from unknown (HELO mail.archive.org) (207.241.227.188)\n  by mta4.grp.scd.yahoo.com with SMTP; 1 Aug 2006 23:45:36 -0000\r\nReceived: from localhost (localhost [127.0.0.1])\n\tby mail.archive.org (Postfix) with ESMTP id 5B0C114149996\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Tue,  1 Aug 2006 16:45:07 -0700 (PDT)\r\nReceived: from mail.archive.org ([127.0.0.1])\n\tby localhost (mail.archive.org [127.0.0.1]) (amavisd-new, port 10024)\n\twith LMTP id 20757-01-90 for &lt;archive-crawler@yahoogroups.com&gt;;\n\tTue, 1 Aug 2006 16:45:05 -0700 (PDT)\r\nReceived: from [192.168.1.203] (c-71-198-60-165.hsd1.ca.comcast.net [71.198.60.165])\n\tby mail.archive.org (Postfix) with ESMTP id 4EB11140BE261\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Tue,  1 Aug 2006 16:45:05 -0700 (PDT)\r\nMessage-ID: &lt;44CFE7FB.3050309@...&gt;\r\nDate: Tue, 01 Aug 2006 16:47:07 -0700\r\nUser-Agent: Mail/News 1.5 (X11/20060309)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;ealuu7+sjas@...&gt;\r\nIn-Reply-To: &lt;ealuu7+sjas@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Virus-Scanned: Debian amavisd-new at archive.org\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] How to configure a bigger BloomUriUniqFilter\r\nX-Yahoo-Group-Post: member; u=137285340; y=m493Z9itQP9dzQjTqXykXey5_Tmv4PecSP4ZaW0K-X7D\r\nX-Yahoo-Profile: gojomo\r\n\r\njoehung302 wrote:\n&gt; Hi,\n&gt; \n&gt; How do I configure a bigger BloomUriUniqFilter? I read \n&gt; http://crawler.archive.org/cgi-bin/wiki.pl?BloomUriUniqFilter\n&gt; It says the default value should handle 125M inserts and uses 500M of \n&gt; memory. \n&gt; \n&gt; What does 125M inserts mean? Does that mean I can have 125M URL \n&gt; downloaded with 1 in 4M error rate? (that&#39;s about 30 dups in 125M?)\n\nYes -- it means that the predicted false-positive rate inherent to a \nbloom filter won&#39;t go over 1-in-4million (1 in 2^22) up through \n125million inserts.\n\n(It will be even lower than that at the beginning, and even after \n125million it won&#39;t rocket up, but edge up over that target error rate \nover time.)\n\n&gt; What if I have 800M of memory to spare, what would be new parameters \n&gt; in terms of\n&gt; \n&gt; org.archive.crawler.util.BloomUriUniqFilter.expected-size\n&gt; org.archive.crawler.util.BloomUriUniqFilter.hash-count\n\nOur bloom filter implementations are based on the MG4J BloomFilter code. \n  More details on that code are here:\n\nhttp://mg4j.dsi.unimi.it/docs/it/unimi/dsi/mg4j/util/BloomFilter.html\n\nAs explained there:\n\n   &quot;a Bloom filter for n character sequences with d hash functions will \nuse ln 2 dn ~ 1.44 dn bits; false positives will happen with probability \n2-d.&quot;\n\n(Here &#39;n&#39; is the same as &#39;expected-size&#39; and &#39;d&#39; is &#39;hash-count&#39;.)\n\nThe default values are 125,000,000 and 22, giving:\n\n  1.44 * 125,000,000 * 22 / 8 = 495,000,000 bytes\n\nYou can play with the two numbers to trade off error-rate, capacity at \nthat error rate, and size. For example, changing expected-size to \n200million would get a size of about 792,000,000 bytes with the same \n1-in-2^22 error rate.\n\nHOWEVER, the default internal bloom implementation of BloomUriUniqFilter \n(BloomFilter32bitSplit, as set in initialize()) uses integer bit indexes \nand so can&#39;t be used for filters with more than 2^32 bits.\n\nNever fear, we&#39;ve got another implementation that uses 64bit indexes: \nBloomFilter64bit. There&#39;s not yet a parameter/setting/property to \ntrigger its use -- you&#39;ll have to edit BloomUriUniqFilter.initialize().\nIt should handle much larger bitfields, up to any currently-conceivable \nheap size.\n\nHOWEVER, some Java GC options have a thrashing issue with such a large \nsingle primitive array. See for details:\n\n  http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6298694\n  (fixed in Mustang/1.6 betas)\n  http://forum.java.sun.com/thread.jspa?messageID=3801578\n  (my initial report)\n\nThis may not be a problem with your heap, JVM, etc. If it is, the \nBloomFilter64bit could get a new BloomFilter64bitSplit implementation \nthat, like the other &#39;Split&#39; variants, uses multiple smaller arrays to \nimplement the giant bitfield, to work-around any GC pathologies. (Let me \nknow if you run into problems, and I&#39;ll get such a variant into the base \nditribution.)\n\nHope this helps,\n\n- Gordon @ IA\n\n"}}