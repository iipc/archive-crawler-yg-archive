{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":563559132,"authorName":"Ahmed Alsum","from":"Ahmed Alsum &lt;aalsum@...&gt;","replyTo":"LIST","senderId":"F51BTmEVFRGvCtoLPfLbsCJB-4O4bgc8D7dPICuJ-pXzLd-CZQrJHEUZ5WlGs6E4s3qh76HV6aLAzdkMFbDQCB_BNInhxRso","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] Killing hang up threads in Heritrix","postDate":"1409264836","msgId":8601,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEQwMjRGQTU0LkI3OTklYWFsc3VtQHN0YW5mb3JkLmVkdT4=","inReplyToHeader":"PDUzRkU2RTM2LjgwNjAyMDVAYXJjaGl2ZS5vcmc+","referencesHeader":"PEQwMjM0QjRDLkI2Q0MlYWFsc3VtQHN0YW5mb3JkLmVkdT4gPENBQS16NzBKUFMrK3lUSnc5NENhYzlIS29OVVFlT3l0VVZmZ0Zwd1V6NVZOaXBIQWJRZ0BtYWlsLmdtYWlsLmNvbT4gPDUzRkU2N0JDLjcwMDA3MDhAYXJjaGl2ZS5vcmc+IDw1M0ZFNkUzNi44MDYwMjA1QGFyY2hpdmUub3JnPg=="},"prevInTopic":8598,"nextInTopic":8602,"prevInTime":8600,"nextInTime":8602,"topicId":8594,"numMessagesInTopic":7,"msgSnippet":"Thanks Gordon for your detailed analysis. Back to the question of why do you need to kill a thread. I reran the job and it stopped in the middle. I looked into","rawEmail":"Return-Path: &lt;aalsum@...&gt;\r\nX-Sender: aalsum@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 85266 invoked by uid 102); 28 Aug 2014 22:27:28 -0000\r\nX-Received: from unknown (HELO mtaq4.grp.bf1.yahoo.com) (10.193.84.143)\n  by m1.grp.bf1.yahoo.com with SMTP; 28 Aug 2014 22:27:28 -0000\r\nX-Received: (qmail 19046 invoked from network); 28 Aug 2014 22:27:28 -0000\r\nX-Received: from unknown (HELO mx3.stanford.edu) (98.138.100.121)\n  by mtaq4.grp.bf1.yahoo.com with SMTP; 28 Aug 2014 22:27:28 -0000\r\nX-Received: from pps02.stanford.edu (pps02.Stanford.EDU [171.67.214.164])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby mx3.stanford.edu (Postfix) with ESMTPS id 0108C80EDC\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 28 Aug 2014 15:27:27 -0700 (PDT)\r\nX-Received: from pps.filterd (pps02.stanford.edu [127.0.0.1])\n\tby pps02.stanford.edu (8.14.5/8.14.5) with SMTP id s7SMQwnJ024432\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 28 Aug 2014 15:27:22 -0700\r\nX-Received: from smtp.stanford.edu (smtp2.Stanford.EDU [171.67.219.82])\n\tby pps02.stanford.edu with ESMTP id 1p1sjxg6sq-1\n\t(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NOT)\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 28 Aug 2014 15:27:19 -0700\r\nX-Received: from [10.35.51.102] (DN0a233366.SUNet [10.35.51.102])\n\t(using TLSv1 with cipher DES-CBC3-SHA (168/168 bits))\n\t(No client certificate requested)\n\t(Authenticated sender: aalsum)\n\tby smtp.stanford.edu (Postfix) with ESMTPSA id 31C68340B46\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 28 Aug 2014 15:27:21 -0700 (PDT)\r\nUser-Agent: Microsoft-MacOutlook/14.4.3.140616\r\nDate: Thu, 28 Aug 2014 15:27:16 -0700\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nMessage-ID: &lt;D024FA54.B799%aalsum@...&gt;\r\nThread-Topic: [archive-crawler] Killing hang up threads in Heritrix\r\nReferences: &lt;D0234B4C.B6CC%aalsum@...&gt;\n &lt;CAA-z70JPS++yTJw94Cac9HKoNUQeOytUVfgFpwUz5VNipHAbQg@...&gt;\n &lt;53FE67BC.7000708@...&gt;\n &lt;53FE6E36.8060205@...&gt;\r\nIn-Reply-To: &lt;53FE6E36.8060205@...&gt;\r\nMime-version: 1.0\r\nContent-type: multipart/alternative;\n\tboundary=&quot;B_3492084442_26033687&quot;\r\nX-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10432:5.12.52,1.0.27,0.0.0000\n definitions=2014-08-28_04:2014-08-28,2014-08-28,1970-01-01 signatures=0\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0 suspectscore=15\n phishscore=0 adultscore=0 bulkscore=0 classifier=spam adjust=0 reason=mlx\n scancount=1 engine=7.0.1-1402240000 definitions=main-1408280258\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nSubject: Re: [archive-crawler] Killing hang up threads in Heritrix\r\nX-Yahoo-Group-Post: member; u=563559132\r\nFrom: Ahmed Alsum &lt;aalsum@...&gt;\r\n\r\n\r\n--B_3492084442_26033687\r\nContent-type: text/plain;\n\tcharset=&quot;ISO-8859-1&quot;\r\nContent-transfer-encoding: quoted-printable\r\n\r\nThanks Gordon for your detailed analysis.\n\nBack to the question of why do y=\r\nou need to kill a thread. I reran the job\nand it stopped in the middle. I l=\r\nooked into the reports/logs and I got the\nfollowing for one of my threads.\n=\r\n\nthreads-report.txt\t\n[ToeThread #20: \nhttps://www.youtube.com/embed/fR9d3HR=\r\nDS4Y?hl=3Den&fs=3D1&autoplay=3D0&hd=3D1&showinf\no=3D0&rel=3D0\n CrawlURI \nht=\r\ntps://www.youtube.com/embed/fR9d3HRDS4Y?hl=3Den&fs=3D1&autoplay=3D0&hd=3D1&=\r\nshowinf\no=3D0&rel=3D0 LLLE \nhttp://news.stanford.edu/news/2014/may/amy-blue=\r\n-urbanek-051514.html    0\nattempts\n    in processor: fetchHttp\n    ACTIVE f=\r\nor 56s528ms\n    step: ABOUT_TO_BEGIN_PROCESSOR for 56s527ms\nJava Thread Sta=\r\nte: RUNNABLE\nBlocked/Waiting On: NONE\n    java.net.SocketInputStream.socket=\r\nRead0(Native Method)\n    java.net.SocketInputStream.read(SocketInputStream.=\r\njava:129)\n    com.sun.net.ssl.internal.ssl.InputRecord.readFully(InputRecor=\r\nd.java:422)\n    com.sun.net.ssl.internal.ssl.InputRecord.read(InputRecord.j=\r\nava:460)\n    \ncom.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSock=\r\netImpl.java:863\n)\n    \ncom.sun.net.ssl.internal.ssl.SSLSocketImpl.readDataR=\r\necord(SSLSocketImpl.java\n:820)\n    com.sun.net.ssl.internal.ssl.AppInputStr=\r\neam.read(AppInputStream.java:75)\n    java.io.BufferedInputStream.read1(Buff=\r\neredInputStream.java:256)\n    java.io.BufferedInputStream.read(BufferedInpu=\r\ntStream.java:317)\n    org.archive.io.RecordingInputStream.read(RecordingInp=\r\nutStream.java:113)\n    \norg.archive.io.RecordingInputStream.readFullyOrUnti=\r\nl(RecordingInputStream.ja\nva:200)\n    org.archive.modules.fetcher.FetchHTTP=\r\n.innerProcess(FetchHTTP.java:682)\n    org.archive.modules.Processor.innerPr=\r\nocessResult(Processor.java:175)\n    org.archive.modules.Processor.process(P=\r\nrocessor.java:142)\n    org.archive.modules.fetcher.FetchHTTP.process(FetchH=\r\nTTP.java:918)\n    org.archive.modules.ProcessorChain.process(ProcessorChain=\r\n.java:131)\n    org.archive.crawler.framework.ToeThread.run(ToeThread.java:1=\r\n48)\n\nfrontier-summary-report.txt\n -----=3D=3D=3D=3D=3D IN-PROCESS QUEUES =\r\n=3D=3D=3D=3D=3D-----\nIN-PROCESS#0:\nQueue com,youtube,www, (p3)\n  24 items\n =\r\n   last enqueued: \nhttps://www.youtube.com/embed/SlyKK9DPK_k?hl=3Den&fs=3D1=\r\n&autoplay=3D0&hd=3D1\n      last peeked: \nhttps://www.youtube.com/embed/fR9d=\r\n3HRDS4Y?hl=3Den&fs=3D1&autoplay=3D0&hd=3D1&showinf\no=3D0&rel=3D0\n   total e=\r\nxpended: 92 (total budget: -1)\n   active balance: 2999\n   last(avg) cost: 1=\r\n(1)\n   totalScheduled fetchSuccesses fetchFailures fetchDisregards\nfetchRes=\r\nponses robotsDenials successBytes totalBytes fetchNonResponses\nlastSuccessT=\r\nime\n   116 92 0 0 92 0 1765293 1765293 3 2014-08-28T22:17:09.580Z\n   Simple=\r\nPrecedenceProvider\n   3\nAny idea what is wrong? Or how to avoid this proble=\r\nm without killing the\nthread?\n\nRegards,\nAhmed\n\nFrom:  &quot;Gordon Mohr gojomo@a=\r\nrchive.org [archive-crawler]&quot;\n&lt;archive-crawler@yahoogroups.com&gt;\nReply-To:  =\r\n&lt;archive-crawler@yahoogroups.com&gt;\nDate:  Wednesday, August 27, 2014 at 4:48=\r\n PM\nTo:  &lt;archive-crawler@yahoogroups.com&gt;\nSubject:  Re: [archive-crawler] =\r\nKilling hang up threads in Heritrix\n\n \n \n \n \n   \n\nHaving just looked more a=\r\nt jdb and the blog post you referenced, I see\nthat the jdb &#39;kill&#39; is likely=\r\n a bit safer than I thought - it injects an\nexception into the thread, rath=\r\ner than doing some sort of native kill\n(like say the old deprecated Thread.=\r\nkill() method).\n\nIt&#39;d still depend on where it was injected, though - the T=\r\noeThread code\nhas some last-ditch catchall handlers that try to clean thing=\r\ns up\nproperly, but I wouldn&#39;t rely on that in any particular recurring\nsitu=\r\nation without a closer look.\n\nAnother possibility that occurred to me is th=\r\nat the thread might not be\n&#39;hung&#39; idly, but rather in some busy-spin on som=\r\ne processing step.\n\nIn my experience this has been most common when a casua=\r\nlly-constructed\nregex hits some unexpected worst-case input. And in such ca=\r\nses, you\nmight want to abort that match, but then also want to tighten the =\r\nregex\n(most often with reluctant-match qualifiers or other quick-fail trick=\r\ns)\nto prevent the same spin in the future.\n\nThe jdb method might be an OK m=\r\nethod to break out of such runaway regex\nmatches... but I suspect you could=\r\n do the same via the &#39;Scripting\nConsole&#39;: via the CrawlController & ToePool=\r\n, get the offending thread,\nand call its ToeThread.kill() method.\n\n- Gordon=\r\n\n\nOn 8/27/14, 4:20 PM, Gordon Mohr gojomo@... [archive-crawler] wro=\r\nte:\n&gt; Indeed I don&#39;t believe that generally, you can kill threads in this\n&gt;=\r\n manner and still be sure that Java (including native JVM) data\n&gt; structure=\r\ns are still in a consistent state. So you could have mysterious\n&gt; corruptio=\r\nn or crashes, only evident arbitrarily later.\n&gt;\n&gt; Fully diagnosing and corr=\r\necting the cause of any such hangs is a better\n&gt; approach. Essentially ever=\r\ny step of the usual Heritrix operation already\n&gt; has designed-in timeouts o=\r\nr other limitations, so any indefinite hang is\n&gt; a defect that should be fi=\r\nxed rather than adapted-to.\n&gt;\n&gt; As Noah requests, representative stacks mig=\r\nht give more ideas.\n&gt;\n&gt; Notably, exactly those places that might be &#39;safest=\r\n&#39; to do an\n&gt; out-of-band thread kill may also be the easiest problems to di=\r\nagnose/fix.\n&gt;\n&gt; Also, I recall in the long-ago era of early JVMs and often-=\r\nflaky Linux\n&gt; threading (~2004ish; before/early-days-of NPTL era), some JVM=\r\n/OS\n&gt; combinations were prone to threads transiently missing the &#39;wake&#39; sig=\r\nnal\n&gt; from the OS.  In such cases, a workaround was to connect with gdb, an=\r\nd\n&gt; send the right &#39;IO is ready&#39; signal to the thread - which then resumed\n=\r\n&gt; progress. (I think it was SIGIO, but not sure.)\n&gt;\n&gt; We&#39;re long separated =\r\nfrom those bad old days, I hope =AD unless you&#39;re\n&gt; using an older/atypical=\r\n OS/JVM combination, or some other mix of new\n&gt; hardware/filesystems that m=\r\night have similar undebugged multi-threaded\n&gt; timing issues. So I wonder if=\r\n a similar &quot;send the overlooked signal&quot;\n&gt; could be tried here, to unstick r=\r\nather than kill the thread.\n&gt;\n&gt; (For a few subsequent years, OpenJDK at lea=\r\nst through 1.6 versions often\n&gt; had mysterious thread hangs, that I tended =\r\nto attribute to some sort of\n&gt; similar issue - and tended to disappear when=\r\n avoiding OpenJDK.)\n&gt;\n&gt; - Gordon\n&gt;\n&gt; On 8/27/14, 10:16 AM, Noah Levitt nlev=\r\nitt@... [archive-crawler]\n&gt; wrote:\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Hey Ahmed,\n&gt;&gt;\n&gt;&gt; Do you=\r\n have a stack trace of these hung threads? It&#39;s not something I\n&gt;&gt; see very=\r\n often. Usually they will finish if you wait them out.\n&gt;&gt;\n&gt;&gt; Noah\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n=\r\n&gt;&gt; On Wed, Aug 27, 2014 at 8:46 AM, Ahmed Alsum aalsum@...\n&gt;&gt; &lt;mai=\r\nlto:aalsum@...&gt; [archive-crawler]\n&gt;&gt; &lt;archive-crawler@yahoogroups.=\r\ncom\n&gt;&gt; &lt;mailto:archive-crawler@yahoogroups.com&gt;&gt; wrote:\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;      He=\r\nllo,\n&gt;&gt;\n&gt;&gt;      Sometimes we face the problem of hang up threads in Heritri=\r\nx job\n&gt;&gt;      that may suspend the whole job. I investigated in this issue =\r\nand\n&gt;&gt;      came with a method to kill these threads. I would like to share=\r\n the\n&gt;&gt;      idea with you and looking forward for your feedback if there i=\r\ns any\n&gt;&gt;      concern or if there are other methods that I may add to the p=\r\nost.\n&gt;&gt;\n&gt;&gt;      \nhttp://a-alsum.blogspot.com/2014/08/killing-hang-up-thread=\r\ns-in-heritrix.html\n&gt;&gt;\n&gt;&gt;      Best regards,\n&gt;&gt;      Ahmed AlSum, Ph.D.\n&gt;&gt;  =\r\n    Web Archiving Engineer\n&gt;&gt;      Digital Library System and Services\n&gt;&gt;  =\r\n    Stanford University Library\n&gt;&gt;      Work: 650-868-7449 &lt;tel:650-868-744=\r\n9&gt;\n&gt;&gt;\n&gt;&gt;      &lt; /div&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt; --------------------------------=\r\n----\n&gt; Posted by: Gordon Mohr &lt;gojomo@...&gt;\n&gt; ----------------------=\r\n--------------\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo Groups =\r\nLinks\n&gt;\n&gt;\n&gt;\n \n   \n\n \n\n\n\r\n--B_3492084442_26033687\r\nContent-type: text/html;\n\tcharset=&quot;ISO-8859-1&quot;\r\nContent-transfer-encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=3D&quot;word-wrap: break-word; -webkit-nbsp-mode:=\r\n space; -webkit-line-break: after-white-space; color: rgb(0, 0, 0); font-si=\r\nze: 14px; font-family: Calibri, sans-serif;&quot;&gt;&lt;div&gt;Thanks Gordon for your de=\r\ntailed analysis.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Back to the question of why do yo=\r\nu need to kill a thread. I reran the job and it stopped in the middle. I lo=\r\noked into the reports/logs and I got the following for one of my threads.&lt;/=\r\ndiv&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;pre style=3D&quot;word-wrap: break-word; white-spa=\r\nce: pre-wrap;&quot;&gt;threads-report.txt&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;wh=\r\nite-space: pre;&quot;&gt;\t&lt;/span&gt;&lt;/pre&gt;&lt;pre style=3D&quot;word-wrap: break-word; white-s=\r\npace: pre-wrap;&quot;&gt;[ToeThread #20: https://www.youtube.com/embed/fR9d3HRDS4Y?=\r\nhl=3Den&amp;fs=3D1&amp;autoplay=3D0&amp;hd=3D1&amp;showinfo=3D0&amp;rel=3D0=\r\n\n CrawlURI https://www.youtube.com/embed/fR9d3HRDS4Y?hl=3Den&amp;fs=3D1&amp=\r\n;autoplay=3D0&amp;hd=3D1&amp;showinfo=3D0&amp;rel=3D0 LLLE http://news.stan=\r\nford.edu/news/2014/may/amy-blue-urbanek-051514.html    0 attempts\n    in pr=\r\nocessor: fetchHttp\n    ACTIVE for 56s528ms\n    step: ABOUT_TO_BEGIN_PROCESS=\r\nOR for 56s527ms\nJava Thread State: RUNNABLE\nBlocked/Waiting On: NONE\n    ja=\r\nva.net.SocketInputStream.socketRead0(Native Method)\n    java.net.SocketInpu=\r\ntStream.read(SocketInputStream.java:129)\n    com.sun.net.ssl.internal.ssl.I=\r\nnputRecord.readFully(InputRecord.java:422)\n    com.sun.net.ssl.internal.ssl=\r\n.InputRecord.read(InputRecord.java:460)\n    com.sun.net.ssl.internal.ssl.SS=\r\nLSocketImpl.readRecord(SSLSocketImpl.java:863)\n    com.sun.net.ssl.internal=\r\n.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:820)\n    com.sun.net.s=\r\nsl.internal.ssl.AppInputStream.read(AppInputStream.java:75)\n    java.io.Buf=\r\nferedInputStream.read1(BufferedInputStream.java:256)\n    java.io.BufferedIn=\r\nputStream.read(BufferedInputStream.java:317)\n    org.archive.io.RecordingIn=\r\nputStream.read(RecordingInputStream.java:113)\n    org.archive.io.RecordingI=\r\nnputStream.readFullyOrUntil(RecordingInputStream.java:200)\n    org.archive.=\r\nmodules.fetcher.FetchHTTP.innerProcess(FetchHTTP.java:682)\n    org.archive.=\r\nmodules.Processor.innerProcessResult(Processor.java:175)\n    org.archive.mo=\r\ndules.Processor.process(Processor.java:142)\n    org.archive.modules.fetcher=\r\n.FetchHTTP.process(FetchHTTP.java:918)\n    org.archive.modules.ProcessorCha=\r\nin.process(ProcessorChain.java:131)\n    org.archive.crawler.framework.ToeTh=\r\nread.run(ToeThread.java:148)\n&lt;/pre&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;pre style=3D&quot;word-wrap: =\r\nbreak-word; white-space: pre-wrap;&quot;&gt;frontier-summary-report.txt&lt;/pre&gt;&lt;pre s=\r\ntyle=3D&quot;word-wrap: break-word; white-space: pre-wrap;&quot;&gt; -----=3D=3D=3D=3D=\r\n=3D IN-PROCESS QUEUES =3D=3D=3D=3D=3D-----\nIN-PROCESS#0:\nQueue com,youtube,=\r\nwww, (p3)\n  24 items\n    last enqueued: https://www.youtube.com/embed/SlyKK=\r\n9DPK_k?hl=3Den&amp;fs=3D1&amp;autoplay=3D0&amp;hd=3D1\n      last peeked: ht=\r\ntps://www.youtube.com/embed/fR9d3HRDS4Y?hl=3Den&amp;fs=3D1&amp;autoplay=3D0=\r\n&amp;hd=3D1&amp;showinfo=3D0&amp;rel=3D0\n   total expended: 92 (total budge=\r\nt: -1)\n   active balance: 2999\n   last(avg) cost: 1(1)\n   totalScheduled fe=\r\ntchSuccesses fetchFailures fetchDisregards fetchResponses robotsDenials suc=\r\ncessBytes totalBytes fetchNonResponses lastSuccessTime\n   116 92 0 0 92 0 1=\r\n765293 1765293 3 2014-08-28T22:17:09.580Z\n   SimplePrecedenceProvider\n   3\n=\r\n&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Any idea what is wrong? Or how to avoid this problem=\r\n without killing the thread?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;Ah=\r\nmed&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;span id=3D&quot;OLK_SRC_BODY_SECTION&quot;&gt;&lt;div style=3D&quot;fon=\r\nt-family:Calibri; font-size:11pt; text-align:left; color:black; BORDER-BOTT=\r\nOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0in; PADDING-LEF=\r\nT: 0in; PADDING-RIGHT: 0in; BORDER-TOP: #b5c4df 1pt solid; BORDER-RIGHT: me=\r\ndium none; PADDING-TOP: 3pt&quot;&gt;&lt;span style=3D&quot;font-weight:bold&quot;&gt;From: &lt;/span&gt;=\r\n &quot;Gordon Mohr &lt;a href=3D&quot;mailto:gojomo@...&quot;&gt;gojomo@...&lt;/a&gt; =\r\n[archive-crawler]&quot; &lt;&lt;a href=3D&quot;mailto:archive-crawler@yahoogroups.com&quot;&gt;a=\r\nrchive-crawler@yahoogroups.com&lt;/a&gt;&gt;&lt;br&gt;&lt;span style=3D&quot;font-weight:bold&quot;&gt;=\r\nReply-To: &lt;/span&gt; &lt;&lt;a href=3D&quot;mailto:archive-crawler@yahoogroups.com&quot;&gt;ar=\r\nchive-crawler@yahoogroups.com&lt;/a&gt;&gt;&lt;br&gt;&lt;span style=3D&quot;font-weight:bold&quot;&gt;D=\r\nate: &lt;/span&gt; Wednesday, August 27, 2014 at 4:48 PM&lt;br&gt;&lt;span style=3D&quot;font-w=\r\neight:bold&quot;&gt;To: &lt;/span&gt; &lt;&lt;a href=3D&quot;mailto:archive-crawler@yahoogroups.c=\r\nom&quot;&gt;archive-crawler@yahoogroups.com&lt;/a&gt;&gt;&lt;br&gt;&lt;span style=3D&quot;font-weight:b=\r\nold&quot;&gt;Subject: &lt;/span&gt; Re: [archive-crawler] Killing hang up threads in Heri=\r\ntrix&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;\n\n\n\n\n\n\n\n\n \n&lt;div style=3D&quot;background-color=\r\n: #fff;&quot;&gt;&lt;span style=3D&quot;display:none&quot;&gt;&nbsp;&lt;/span&gt;\n\n    &lt;div id=3D&quot;ygrp-te=\r\nxt&quot;&gt;\n      \n      \n      &lt;p&gt;Having just looked more at jdb and the blog pos=\r\nt you referenced, I see &lt;br&gt;\nthat the jdb &#39;kill&#39; is likely a bit safer than=\r\n I thought - it injects an &lt;br&gt;\nexception into the thread, rather than doin=\r\ng some sort of native kill &lt;br&gt;\n(like say the old deprecated Thread.kill() =\r\nmethod).&lt;br&gt;&lt;br&gt;\nIt&#39;d still depend on where it was injected, though - the T=\r\noeThread code &lt;br&gt;\nhas some last-ditch catchall handlers that try to clean =\r\nthings up &lt;br&gt;\nproperly, but I wouldn&#39;t rely on that in any particular recu=\r\nrring &lt;br&gt;\nsituation without a closer look.&lt;br&gt;&lt;br&gt;\nAnother possibility tha=\r\nt occurred to me is that the thread might not be &lt;br&gt;\n&#39;hung&#39; idly, but rath=\r\ner in some busy-spin on some processing step.&lt;br&gt;&lt;br&gt;\nIn my experience this=\r\n has been most common when a casually-constructed &lt;br&gt;\nregex hits some unex=\r\npected worst-case input. And in such cases, you &lt;br&gt;\nmight want to abort th=\r\nat match, but then also want to tighten the regex &lt;br&gt;\n(most often with rel=\r\nuctant-match qualifiers or other quick-fail tricks) &lt;br&gt;\nto prevent the sam=\r\ne spin in the future.&lt;br&gt;&lt;br&gt;\nThe jdb method might be an OK method to break=\r\n out of such runaway regex &lt;br&gt;\nmatches... but I suspect you could do the s=\r\name via the &#39;Scripting &lt;br&gt;\nConsole&#39;: via the CrawlController &amp; ToePool=\r\n, get the offending thread, &lt;br&gt;\nand call its ToeThread.kill() method.&lt;br&gt;&lt;=\r\nbr&gt;\n- Gordon&lt;br&gt;&lt;br&gt;\nOn 8/27/14, 4:20 PM, Gordon Mohr &lt;a href=3D&quot;mailto:goj=\r\nomo@...&quot;&gt;gojomo@...&lt;/a&gt; [archive-crawler] wrote:&lt;br&gt;\n&gt; I=\r\nndeed I don&#39;t believe that generally, you can kill threads in this&lt;br&gt;\n&gt;=\r\n manner and still be sure that Java (including native JVM) data&lt;br&gt;\n&gt; st=\r\nructures are still in a consistent state. So you could have mysterious&lt;br&gt;\n=\r\n&gt; corruption or crashes, only evident arbitrarily later.&lt;br&gt;\n&gt;&lt;br&gt;\n&g=\r\nt; Fully diagnosing and correcting the cause of any such hangs is a better&lt;=\r\nbr&gt;\n&gt; approach. Essentially every step of the usual Heritrix operation a=\r\nlready&lt;br&gt;\n&gt; has designed-in timeouts or other limitations, so any indef=\r\ninite hang is&lt;br&gt;\n&gt; a defect that should be fixed rather than adapted-to=\r\n.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; As Noah requests, representative stacks might give more=\r\n ideas.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Notably, exactly those places that might be &#39;safe=\r\nst&#39; to do an&lt;br&gt;\n&gt; out-of-band thread kill may also be the easiest probl=\r\nems to diagnose/fix.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Also, I recall in the long-ago era o=\r\nf early JVMs and often-flaky Linux&lt;br&gt;\n&gt; threading (~2004ish; before/ear=\r\nly-days-of NPTL era), some JVM/OS&lt;br&gt;\n&gt; combinations were prone to threa=\r\nds transiently missing the &#39;wake&#39; signal&lt;br&gt;\n&gt; from the OS.  In such cas=\r\nes, a workaround was to connect with gdb, and&lt;br&gt;\n&gt; send the right &#39;IO i=\r\ns ready&#39; signal to the thread - which then resumed&lt;br&gt;\n&gt; progress. (I th=\r\nink it was SIGIO, but not sure.)&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; We&#39;re long separated fro=\r\nm those bad old days, I hope &#8211; unless you&#39;re&lt;br&gt;\n&gt; using an older/=\r\natypical OS/JVM combination, or some other mix of new&lt;br&gt;\n&gt; hardware/fil=\r\nesystems that might have similar undebugged multi-threaded&lt;br&gt;\n&gt; timing =\r\nissues. So I wonder if a similar &quot;send the overlooked signal&quot;&lt;br&gt;\n&gt; coul=\r\nd be tried here, to unstick rather than kill the thread.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; =\r\n(For a few subsequent years, OpenJDK at least through 1.6 versions often&lt;br=\r\n&gt;\n&gt; had mysterious thread hangs, that I tended to attribute to some sort=\r\n of&lt;br&gt;\n&gt; similar issue - and tended to disappear when avoiding OpenJDK.=\r\n)&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; - Gordon&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; On 8/27/14, 10:16 AM, Noah L=\r\nevitt &lt;a href=3D&quot;mailto:nlevitt@...&quot;&gt;nlevitt@...&lt;/a&gt; [archi=\r\nve-crawler]&lt;br&gt;\n&gt; wrote:&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; Hey Ahme=\r\nd,&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; Do you have a stack trace of these hung thread=\r\ns? It&#39;s not something I&lt;br&gt;\n&gt;&gt; see very often. Usually they will fini=\r\nsh if you wait them out.&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; Noah&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&g=\r\nt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; On Wed, Aug 27, 2014 at 8:46 AM, Ahmed Als=\r\num &lt;a href=3D&quot;mailto:aalsum@...&quot;&gt;aalsum@...&lt;/a&gt;&lt;br&gt;\n&gt;&=\r\ngt; &lt;&lt;a href=3D&quot;mailto:aalsum@...&quot;&gt;mailto:aalsum@...&lt;/=\r\na&gt;&gt; [archive-crawler]&lt;br&gt;\n&gt;&gt; &lt;&lt;a href=3D&quot;mailto:archive-crawler=\r\n@yahoogroups.com&quot;&gt;archive-crawler@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&gt;&gt; &lt;&lt;a h=\r\nref=3D&quot;mailto:archive-crawler@yahoogroups.com&gt;&quot;&gt;mailto:archive-crawler@y=\r\nahoogroups.com&gt;&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br=\r\n&gt;\n&gt;&gt;      Hello,&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;      Sometimes we face the=\r\n problem of hang up threads in Heritrix job&lt;br&gt;\n&gt;&gt;      that may susp=\r\nend the whole job. I investigated in this issue and&lt;br&gt;\n&gt;&gt;      came =\r\nwith a method to kill these threads. I would like to share the&lt;br&gt;\n&gt;&gt;=\r\n      idea with you and looking forward for your feedback if there is any&lt;b=\r\nr&gt;\n&gt;&gt;      concern or if there are other methods that I may add to th=\r\ne post.&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;      &lt;a href=3D&quot;http://a-alsum.blogspot.c=\r\nom/2014/08/killing-hang-up-threads-in-heritrix.html&quot;&gt;http://a-alsum.blogspo=\r\nt.com/2014/08/killing-hang-up-threads-in-heritrix.html&lt;/a&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;=\r\n\n&gt;&gt;      Best regards,&lt;br&gt;\n&gt;&gt;      Ahmed AlSum, Ph.D.&lt;br&gt;\n&gt;&=\r\ngt;      Web Archiving Engineer&lt;br&gt;\n&gt;&gt;      Digital Library System an=\r\nd Services&lt;br&gt;\n&gt;&gt;      Stanford University Library&lt;br&gt;\n&gt;&gt;      =\r\nWork: 650-868-7449 &lt;tel:650-868-7449&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;      =\r\n&lt; /div&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&=\r\ngt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; ------------------------------------&lt;br&gt;\n&gt=\r\n; Posted by: Gordon Mohr &lt;&lt;a href=3D&quot;mailto:gojomo@...&quot;&gt;gojomo@a=\r\nrchive.org&lt;/a&gt;&gt;&lt;br&gt;\n&gt; ------------------------------------&lt;br&gt;\n&gt;&lt;b=\r\nr&gt;\n&gt;&lt;br&gt;\n&gt; ------------------------------------&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Yah=\r\noo Groups Links&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    &lt;=\r\n/div&gt;&lt;/div&gt;&lt;!-- end group email --&gt;&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n\r\n--B_3492084442_26033687--\r\n\n"}}