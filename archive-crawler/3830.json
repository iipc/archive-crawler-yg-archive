{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":202034705,"authorName":"Michael Stack","from":"Michael Stack &lt;stack@...&gt;","replyTo":"LIST","senderId":"YnDnzUvPNrxrknHjnyCAcPBaSjePXetdifPDQrO7NK0_dKLobElvlJEHMV8r4knHFoCFc9uyBNt2YIaUYU728U6D0ZEka6g","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] How can read method of ArcRecord perform faster","postDate":"1172072334","msgId":3830,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1REM2NzhFLjEwNDA1MDlAZHVib2NlLm5ldD4=","inReplyToHeader":"PDJhMTljNzlmMDcwMjIxMDU0M3M0ZjAyMWFhMWwzZjA2ODE5YWM4MTIyNjlhQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDJhMTljNzlmMDcwMjIxMDU0M3M0ZjAyMWFhMWwzZjA2ODE5YWM4MTIyNjlhQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":3829,"nextInTopic":3832,"prevInTime":3829,"nextInTime":3831,"topicId":3829,"numMessagesInTopic":5,"msgSnippet":"Currently, you are reading a byte at a time.  You should use read(byte[] b, int offset, int length) (even though its using read() at its core).  If you did","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 2485 invoked from network); 21 Feb 2007 15:38:57 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m43.grp.scd.yahoo.com with QMQP; 21 Feb 2007 15:38:57 -0000\r\nReceived: from unknown (HELO dns.duboce.net) (63.203.238.116)\n  by mta7.grp.scd.yahoo.com with SMTP; 21 Feb 2007 15:38:56 -0000\r\nReceived: by dns.duboce.net (Postfix, from userid 1008)\n\tid 66E9EC51D; Wed, 21 Feb 2007 06:15:22 -0800 (PST)\r\nX-Spam-Checker-Version: SpamAssassin 3.1.4 (2006-07-26) on dns.duboce.net\r\nX-Spam-Level: \r\nX-Spam-Status: No, score=-3.1 required=5.0 tests=ALL_TRUSTED,AWL,BAYES_00,\n\tHTML_MESSAGE,HTML_TINY_FONT autolearn=ham version=3.1.4\r\nReceived: from [192.168.1.107] (debord.duboce.net [192.168.1.107])\n\tby dns.duboce.net (Postfix) with ESMTP id 889C2C3F2;\n\tWed, 21 Feb 2007 06:15:16 -0800 (PST)\r\nMessage-ID: &lt;45DC678E.1040509@...&gt;\r\nDate: Wed, 21 Feb 2007 07:38:54 -0800\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.2pre) Gecko/20070111 SeaMonkey/1.1\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;2a19c79f0702210543s4f021aa1l3f06819ac812269a@...&gt;\r\nIn-Reply-To: &lt;2a19c79f0702210543s4f021aa1l3f06819ac812269a@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------080609060208050608030303&quot;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Michael Stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] How can read method of ArcRecord perform faster\r\nX-Yahoo-Group-Post: member; u=202034705; y=EeAxvExKifY1s9T2gU60mglUtM5dxY95eIMgJy2NUvvdT3On0vSmJqX_\r\n\r\n\r\n--------------080609060208050608030303\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\nCurrently, you are reading a byte at a time.  You should use \n&#39;read(byte[] b, int offset, int length)&#39; (even though its using read() \nat its core).  If you did the same on a FileInputStream, I believe you \nwould experience the same phenomenon.\nSt.Ack\n\n\nsajid khan wrote:\n&gt;\n&gt; Hi,\n&gt;     My program reads arc files and processes its contents. I noticed \n&gt; that bulk of the time is spent in reading the arc file rather than \n&gt; processing the data.\n&gt; I am reading the arc files using ArcRecord&#39;s read() method. The code \n&gt; looks like this,\n&gt;\n&gt; //arcfile --- The path of the arc file.\n&gt;  ArcReader arc = ARCReaderFactory.get(arcfile);\n&gt;  Iterator iter = arc.iterator();\n&gt;  while(iter.hasNext())\n&gt;  {\n&gt;       ARCRecord r = (ARCRecord) iter.next();\n&gt;       ByteArrayOutputStream baos = new ByteArrayOutputStream( \n&gt; r.available());\n&gt;       r.skipHttpHeader();\n&gt;       sizeOfArcRecord = r.available();\n&gt;      \n&gt;       //this while loop consumes lot of time\n&gt;       while (sizeOfArcRecord-- &gt; 0)\n&gt;       {\n&gt;                         baos.write(r.read());\n&gt;       }\n&gt;       //Doing somthing with baos.\n&gt; }\n&gt;\n&gt; On analyzing the time spent on each section of the code, I noticed \n&gt; that the inner loop in the above code takes more time than I had \n&gt; expected. For processing 40MB arc file it(the inner loop) is taking \n&gt; nearly 1 min 30 second in my machine(512MB RAM, 2.6GHz processor). I \n&gt; thought the following function may help by reading several bytes in \n&gt; one attempt, but it is also internally calling the read() funtion of \n&gt; ArcRecord\n&gt;             read(byte[] b, int offset, int length) of ArcRecord.\n&gt;\n&gt; Can anybody please help me.\n&gt;\n&gt; Thanks and regards\n&gt; Sajid Khan\n&gt; |\n&gt; |\n&gt;\n&gt;  \n\n\r\n--------------080609060208050608030303\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta content=&quot;text/html;charset=ISO-8859-1&quot; http-equiv=&quot;Content-Type&quot;&gt;\n&lt;/head&gt;\n&lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot;&gt;\nCurrently, you are reading a byte at a time.&nbsp; You should use\n&#39;read(byte[] b, int offset, int length)&#39; (even though its using read()\nat its core).&nbsp; If you did the same on a FileInputStream, I believe you\nwould experience the same phenomenon.&lt;br&gt;\nSt.Ack&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nsajid khan wrote:\n&lt;blockquote\n cite=&quot;mid:2a19c79f0702210543s4f021aa1l3f06819ac812269a@...&quot;\n type=&quot;cite&quot;&gt;&lt;!-- Network content --&gt;\n\n  &lt;div id=&quot;ygrp-text&quot;&gt;\n  &lt;p&gt;Hi,&lt;br&gt;\n&nbsp;&nbsp;&nbsp; My program reads arc files and processes its contents. I noticed\nthat bulk of the time is spent in reading the arc file rather than\nprocessing the data.&lt;br&gt;\nI am reading the arc files using ArcRecord&#39;s read() method. The code\nlooks like this,\n  &lt;br&gt;\n  &lt;br&gt;\n//arcfile --- The path of the arc file.&lt;br&gt;\n&nbsp;ArcReader arc = ARCReaderFactory.&lt;wbr&gt;get(arcfile)&lt;wbr&gt;;&lt;br&gt;\n&nbsp;Iterator iter = arc.iterator(&lt;wbr&gt;);&lt;br&gt;\n&nbsp;while(iter.hasNext(&lt;wbr&gt;))&lt;br&gt;\n&nbsp;{&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ARCRecord r = (ARCRecord) iter.next();&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ByteArrayOutputStre&lt;wbr&gt;am baos = new ByteArrayOutputStre&lt;wbr&gt;am(\nr.available(&lt;wbr&gt;));&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r.skipHttpHeader(&lt;wbr&gt;);&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sizeOfArcRecord = r.available(&lt;wbr&gt;);&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //this while loop consumes lot of time&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (sizeOfArcRecord-&lt;wbr&gt;- &gt; 0)&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&lt;br&gt;\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; baos.write(r.&lt;wbr&gt;read());&lt;br&gt;\n&nbsp;&nbsp;&nbsp; &nbsp; }&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Doing somthing with baos.&lt;br&gt;\n}&lt;br&gt;\n  &lt;br&gt;\nOn analyzing the time spent on each section of the code, I noticed that\nthe inner loop in the above code takes more time than I had expected.\nFor processing 40MB arc file it(the inner loop) is taking nearly 1 min\n30 second in my machine(512MB RAM, 2.6GHz processor). I thought the\nfollowing function may help by reading several bytes in one attempt,\nbut it is also internally calling the read() funtion of ArcRecord&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read(byte[] b, int offset, int length) of ArcRecord.\n  &lt;br&gt;\n  &lt;br&gt;\nCan anybody please help me.&lt;br&gt;\n  &lt;br&gt;\nThanks and regards&lt;br&gt;\nSajid Khan&lt;br&gt;\n  &lt;code&gt;&lt;span style=&quot;font-family: mon;&quot;&gt;&lt;/span&gt;&lt;span\n style=&quot;font-weight: bold;&quot;&gt;&lt;/span&gt;&lt;br&gt;\n  &lt;/code&gt;&lt;br&gt;\n  &lt;/p&gt;\n  &lt;/div&gt;\n\n&lt;!--End group email --&gt;&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------080609060208050608030303--\r\n\n"}}