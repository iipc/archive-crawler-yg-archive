{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"mfWIvSjrRopE206vK-CDT-yXW0AfGnH_qKzZ75AXgwkmb7DvV0VOw9DsAuv6QfGklWI_jekcEoV_5L2JdaOuuLtQWft5MIc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Heritrix Launcher v3.0","postDate":"1288131352","msgId":6783,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDQzc1MzE4LjYwNzA0MDhAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PEFBTkxrVGk9SDdROEVDPXFKcFUxS3NicXFHeD1XZEY5YnZ1RndVNHVxb2FROUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDUyNzAxNC4yMzAxMi5xbUB3ZWI2MzEwNS5tYWlsLnJlMS55YWhvby5jb20+CTw0Q0JGNzRDQy44MDIwMDA3QGFyY2hpdmUub3JnPiA8QUFOTGtUaT1IN1E4RUM9cUpwVTFLc2JxcUd4PVdkRjlidnVGd1U0dXFvYVE5QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":6782,"nextInTopic":6785,"prevInTime":6782,"nextInTime":6784,"topicId":6738,"numMessagesInTopic":5,"msgSnippet":"Heritrix doesn t have a true continuous mode, so in any case you ll have to poke at it to occasionally re-start or re-feed URLs to a running crawler. (This","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 80634 invoked from network); 26 Oct 2010 22:15:53 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m14.grp.re1.yahoo.com with QMQP; 26 Oct 2010 22:15:53 -0000\r\nX-Received: from unknown (HELO relay03.pair.com) (209.68.5.17)\n  by mta3.grp.re1.yahoo.com with SMTP; 26 Oct 2010 22:15:53 -0000\r\nX-Received: (qmail 87721 invoked from network); 26 Oct 2010 22:15:52 -0000\r\nX-Received: from 208.70.27.190 (HELO silverbook.local) (208.70.27.190)\n  by relay03.pair.com with SMTP; 26 Oct 2010 22:15:52 -0000\r\nX-pair-Authenticated: 208.70.27.190\r\nMessage-ID: &lt;4CC75318.6070408@...&gt;\r\nDate: Tue, 26 Oct 2010 15:15:52 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.11) Gecko/20101013 Thunderbird/3.1.5\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nCc: burakkk &lt;burak.isikli@...&gt;\r\nReferences: &lt;527014.23012.qm@...&gt;\t&lt;4CBF74CC.8020007@...&gt; &lt;AANLkTi=H7Q8EC=qJpU1KsbqqGx=WdF9bvuFwU4uqoaQ9@...&gt;\r\nIn-Reply-To: &lt;AANLkTi=H7Q8EC=qJpU1KsbqqGx=WdF9bvuFwU4uqoaQ9@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] Heritrix Launcher v3.0\r\nX-Yahoo-Group-Post: member; u=137285340; y=UwYkI9fabo1CUOmB3y7-Vxcz4Fhgnl0COOYH1oxg-gB0\r\nX-Yahoo-Profile: gojomo\r\n\r\nHeritrix doesn&#39;t have a true &#39;continuous&#39; mode, so in any case you&#39;ll \nhave to poke at it to occasionally re-start or re-feed URLs to a running \ncrawler. (This is just about as easy through the web interface as if you \nwere calling the Java code directly, so this use case doesn&#39;t require a \nWUI-less operation mode.)\n\nTo approximate &#39;continuous&#39; crawling, most common is to re-launch a \nstandard job at regular intervals, often feeding subsequent launches \nwith &#39;history&#39; info or larger lists of URLs from previous crawls.\n\nSome discussion of using the \nPersistLoadProcessor/FetchHistoryStore/PersistStoreProcessor \nduplication-reduction functionality in repeated crawls is available at \nthese wiki pages:\n\n(original discussion when the feature first arrived in H1.12)\nhttps://webarchive.jira.com/wiki/display/Heritrix/Feature+Notes+-+1.12.0\n\n(examples updated for H3)\nhttps://webarchive.jira.com/wiki/display/Heritrix/Duplication+Reduction+Processors\n\nSome other H3 features making it easier to force-reload URLs, or (with a \nbit of custom configuration or scripting) trigger automatic revisits of \nURLs in the same crawl launch, may also be of use, depending on your \nexact needs.\n\n- Gordon @ IA\n\n\nOn 10/26/10 4:14 AM, burakkk wrote:\n&gt;\n&gt;\n&gt; The first reason of that is I want to schedule my crawler and so then\n&gt; it&#39;s running all the time continously. How can i do it with web gui?\n&gt;\n&gt; 2010/10/21 Gordon Mohr &lt;gojomo@... &lt;mailto:gojomo@...&gt;&gt;\n&gt;\n&gt;     Hi -\n&gt;\n&gt;     Why don&#39;t you want the web GUI? It&#39;s the preferred way to compose,\n&gt;     launch, and control crawls.\n&gt;\n&gt;     The class you mention below was posted around 6 years ago as an example\n&gt;     to the list -- it may not be a good model for current/future use.\n&gt;\n&gt;     In general, if you want to embed Heritrix code into another Java\n&gt;     program, the best guide is the source code of the web GUI itself --\n&gt;     your\n&gt;     calling code will have to perform roughly the same steps as it does.\n&gt;\n&gt;     But, the looser coupling of another app controlling Heritrix via web\n&gt;     requests is recommended. It allows the crawl(s) to occur in a separate\n&gt;     JVM or other machine, isolating each program from problems in the\n&gt;     others, and providing another way to monitor crawls during development.\n&gt;\n&gt;     - Gordon @ IA\n&gt;\n&gt;     On 9/20/10 12:39 PM, Burak ISIKLI wrote:\n&gt;      &gt;\n&gt;      &gt;\n&gt;      &gt; Hello,\n&gt;      &gt; How can i start heritrix version 3.0 in java app without web gui?\n&gt;      &gt; I meant how can i start the heritrix to coding?\n&gt;      &gt; In heritrix 1.14.4 there is a file name is called\n&gt;      &gt; SimpleHeritrixLauncher. I want to write it similar.\n&gt;      &gt; Thanks\n&gt;      &gt;\n&gt;      &gt;\n&gt;      &gt; *SimpleHeritrixLauncher.java*\n&gt;      &gt;\n&gt;      &gt; import java.io.File;\n&gt;      &gt; import java.io.FileNotFoundException;\n&gt;      &gt; import java.util.Date;\n&gt;      &gt;\n&gt;      &gt; import org.archive.crawler.framework.CrawlController;\n&gt;      &gt; import\n&gt;     org.archive.crawler.framework.exceptions.InitializationException;\n&gt;      &gt; import org.archive.crawler.settings.*;\n&gt;      &gt; import org.archive.crawler.event.CrawlStatusListener;\n&gt;      &gt;\n&gt;      &gt; import javax.management.InvalidAttributeValueException;\n&gt;      &gt;\n&gt;      &gt;\n&gt;      &gt;\n&gt;      &gt;\n&gt;      &gt; public class SimpleHeritrixLauncher {\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * the orderfile to use\n&gt;      &gt; */\n&gt;      &gt; private File orderfile;\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * the original seedsfile to use\n&gt;      &gt; */\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Set to true by doOneCrawl()\n&gt;      &gt; * Set to false on the event crawlEnded - fired by the crawler\n&gt;      &gt; */\n&gt;      &gt; private boolean crawlerRunning = false;\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Set to true when requestCrawlPause() is called on the\n&gt;     CrawlController\n&gt;      &gt; * Set to false when requestCrawlResume() is called on the\n&gt;     CrawlController\n&gt;      &gt; */\n&gt;      &gt; private boolean crawlerPaused = false;\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * The CrawlController used\n&gt;      &gt; */\n&gt;      &gt; private CrawlController controller;\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Sets up the SimpleHeritrixLauncher from the given order file\n&gt;      &gt; *\n&gt;      &gt; * @param orderfile the orderfile to use\n&gt;      &gt; */\n&gt;      &gt; public SimpleHeritrixLauncher(File orderfile) throws\n&gt;     FileNotFoundException {\n&gt;      &gt; if (orderfile == null || !orderfile.exists() ||\n&gt;     orderfile.isDirectory()) {\n&gt;      &gt; throw new FileNotFoundException(&quot;No legal order file found at &quot; +\n&gt;      &gt; orderfile);\n&gt;      &gt; }\n&gt;      &gt; this.orderfile = orderfile;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Method returns the CrawlController (Heritrix)\n&gt;      &gt; *\n&gt;      &gt; * @return the CrawlController used for launching Heritrix\n&gt;      &gt; */\n&gt;      &gt; public CrawlController getCrawlController() {\n&gt;      &gt; return this.controller;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Medhod takes at this point exactly 1 argument:\n&gt;      &gt; * 1. orderfile\n&gt;      &gt; * After launching - it waits in a very simple loop for the\n&gt;     crawler to finish\n&gt;      &gt; */\n&gt;      &gt; public static void main(String[] args) {\n&gt;      &gt; /* if (args.length != 1) {\n&gt;      &gt; //System.out.println(&quot;arguman sayisi :&quot;+args.length);\n&gt;      &gt; outputUsage();\n&gt;      &gt; return;\n&gt;      &gt; }*/\n&gt;      &gt; //File orderfile = new File(args[0]);\n&gt;      &gt; String fileName=&quot;D:/Workspace.hermod/Hermod/order.xml&quot;;\n&gt;      &gt; File orderfile = new File(fileName);\n&gt;      &gt; if (!orderfile.exists()) {\n&gt;      &gt; System.out.println(&quot;Orderfile &#39;&quot; + fileName + &quot;&#39; NOT found !&quot;);\n&gt;      &gt; return;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; SimpleHeritrixLauncher hl;\n&gt;      &gt; try {\n&gt;      &gt; Date d1 = new Date();\n&gt;      &gt; d1.getTime();\n&gt;      &gt; hl = new SimpleHeritrixLauncher(orderfile);\n&gt;      &gt; System.out.println(&quot;Starting crawl with Heritrix....&quot;);\n&gt;      &gt; System.out.println(&quot;Using orderfile : &quot; + hl.orderfile);\n&gt;      &gt; hl.doOneCrawl();\n&gt;      &gt; while (hl.isCrawlerRunning()) {\n&gt;      &gt; // wait for the crawler to finish\n&gt;      &gt; }\n&gt;      &gt; System.out.println(&quot;&#92;nCrawl ended......&quot;);\n&gt;      &gt; } catch (Exception e) {\n&gt;      &gt; System.out.println(&quot;Exception occurred: &quot; + e);\n&gt;      &gt; }\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Method outputs usage-information to stdout\n&gt;      &gt; */\n&gt;      &gt; private static void outputUsage() {\n&gt;      &gt; System.out.println(&quot;Usage: java [-Xmx128m]\n&gt;      &gt; dk.netarkivet.harvestcontroller.SimpleHeritrixLauncher &lt;orderfile&gt;&quot;);\n&gt;      &gt; System.out.println(&quot;&quot;);\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * This method launches the crawler !\n&gt;      &gt; *\n&gt;      &gt; * @throws\n&gt;     org.archive.crawler.framework.exceptions.InitializationException\n&gt;      &gt; * @throws javax.management.InvalidAttributeValueException\n&gt;      &gt; */\n&gt;      &gt; public void doOneCrawl()\n&gt;      &gt; throws InitializationException, InvalidAttributeValueException {\n&gt;      &gt;\n&gt;      &gt; XMLSettingsHandler handler =\n&gt;      &gt; new XMLSettingsHandler(this.orderfile);\n&gt;      &gt; handler.initialize();\n&gt;      &gt; controller = new CrawlController();\n&gt;      &gt; try {\n&gt;      &gt; controller.initialize(handler);\n&gt;      &gt; } catch (InitializationException e) {\n&gt;      &gt; throw new InitializationException(e);\n&gt;      &gt; }\n&gt;      &gt; controller.addCrawlStatusListener(new myCrawlStatusListener(this));\n&gt;      &gt; controller.requestCrawlStart();\n&gt;      &gt; this.crawlerRunning = true;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Method returns running-status of the crawler\n&gt;      &gt; *\n&gt;      &gt; * @return running-status\n&gt;      &gt; */\n&gt;      &gt; public boolean isCrawlerRunning() {\n&gt;      &gt; return this.crawlerRunning;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Method returns pause-status of the crawler\n&gt;      &gt; *\n&gt;      &gt; * @return pause-status\n&gt;      &gt; */\n&gt;      &gt; public boolean isCrawlerPaused() {\n&gt;      &gt; return this.crawlerPaused;\n&gt;      &gt; }\n&gt;      &gt; class myCrawlStatusListener implements CrawlStatusListener {\n&gt;      &gt; /**\n&gt;      &gt; * The Heritrix-launcher that uses this listener\n&gt;      &gt; */\n&gt;      &gt; private SimpleHeritrixLauncher hl;\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Constructor\n&gt;      &gt; *\n&gt;      &gt; * @param hl a HeritrixLauncher\n&gt;      &gt; */\n&gt;      &gt; public myCrawlStatusListener(SimpleHeritrixLauncher hl) {\n&gt;      &gt; this.hl = hl;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Fired by the crawler when the crawl is about to end\n&gt;      &gt; * (no reports writen yet....toe threads might still be running....)\n&gt;      &gt; *\n&gt;      &gt; * @param s Message to attach\n&gt;      &gt; */\n&gt;      &gt; public void crawlEnding(String s) {\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Fired by the crawler when the crawl is ended\n&gt;      &gt; *\n&gt;      &gt; * @param s Message to attach\n&gt;      &gt; */\n&gt;      &gt; public void crawlEnded(String s) {\n&gt;      &gt; this.hl.crawlerRunning = false;\n&gt;      &gt; this.hl.crawlerPaused = false;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Fired by the crawler when the crawl is about to pause\n&gt;      &gt; * (toe threads might still be running.....)\n&gt;      &gt; *\n&gt;      &gt; * @param s Message to attach\n&gt;      &gt; */\n&gt;      &gt; public void crawlPausing(String s) {\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Fired by the crawler when the crawl is paused\n&gt;      &gt; *\n&gt;      &gt; * @param s Message to attach\n&gt;      &gt; */\n&gt;      &gt; public void crawlPaused(String s) {\n&gt;      &gt; this.hl.crawlerPaused = true;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; /**\n&gt;      &gt; * Fired by the crawler when the crawl is resuming\n&gt;      &gt; *\n&gt;      &gt; * @param s Message to attach\n&gt;      &gt; */\n&gt;      &gt; public void crawlResuming(String s) {\n&gt;      &gt; this.hl.crawlerPaused = false;\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; @Override\n&gt;      &gt; public void crawlCheckpoint(File arg0) throws Exception {\n&gt;      &gt; // TODO Auto-generated method stub\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt; @Override\n&gt;      &gt; public void crawlStarted(String arg0) {\n&gt;      &gt; // TODO Auto-generated method stub\n&gt;      &gt; }\n&gt;      &gt; }\n&gt;      &gt; }\n&gt;      &gt;\n&gt;      &gt;\n&gt;      &gt;\n&gt;      &gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; --\n&gt;\n&gt; *BURAK ISIKLI***| *http://burakisikli.wordpress.com*\n&gt;\n&gt; *\n&gt; *\n&gt;\n&gt;\n&gt;\n&gt; \n\n"}}