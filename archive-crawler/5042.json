{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":334689939,"authorName":"Micah Wedemeyer","from":"Micah Wedemeyer &lt;mwedeme@...&gt;","replyTo":"LIST","senderId":"GQ6S8S7IKgX7XydThXSbH_AnvbnnJIYFpyDCFP27CiYUc3qsGpQie1whQGdJFeYjYf9DYtF3x8MD6zn7sAniHDfdUqy3pEua3aM","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] SurtPrefixedDecideRule - need a little starter help","postDate":"1204815838","msgId":5042,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ3RDAwN0RFLjQwMjA3MDhAZW1vcnkuZWR1Pg==","inReplyToHeader":"PDQ3Q0Y0RjU4LjUwMTA1MDdAYXJjaGl2ZS5vcmc+","referencesHeader":"PDQ3Q0RDMkNGLjYwNTA2MDFAZW1vcnkuZWR1PiA8NDdDRjIwQTMuNzAwMDAwOUBlbW9yeS5lZHU+IDw0N0NGMjU4Ni44MDcwNjAyQGVtb3J5LmVkdT4gPDQ3Q0Y0RjU4LjUwMTA1MDdAYXJjaGl2ZS5vcmc+"},"prevInTopic":5041,"nextInTopic":0,"prevInTime":5041,"nextInTime":5043,"topicId":5036,"numMessagesInTopic":6,"msgSnippet":"Gordon, This really clears things up, especially the transclusion rules. For our purposes, we re only doing text analysis, not archiving, so losing images and","rawEmail":"Return-Path: &lt;mwedeme@...&gt;\r\nX-Sender: mwedeme@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 99011 invoked from network); 6 Mar 2008 15:04:09 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m46.grp.scd.yahoo.com with QMQP; 6 Mar 2008 15:04:09 -0000\r\nX-Received: from unknown (HELO mr2.cc.emory.edu) (170.140.52.91)\n  by mta15.grp.scd.yahoo.com with SMTP; 6 Mar 2008 15:04:09 -0000\r\nX-Received: from [170.140.210.152] (emoryfloatdmz.cc.emory.edu [170.140.52.254])\n\tby mr2.cc.emory.edu (8.13.1/8.13.1) with ESMTP id m26F3wWt011508\n\t(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 6 Mar 2008 10:03:59 -0500\r\nMessage-ID: &lt;47D007DE.4020708@...&gt;\r\nDate: Thu, 06 Mar 2008 10:03:58 -0500\r\nUser-Agent: Mozilla-Thunderbird 2.0.0.9 (X11/20080110)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;47CDC2CF.6050601@...&gt; &lt;47CF20A3.7000009@...&gt; &lt;47CF2586.8070602@...&gt; &lt;47CF4F58.5010507@...&gt;\r\nIn-Reply-To: &lt;47CF4F58.5010507@...&gt;\r\nX-Enigmail-Version: 0.95.0\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: 7bit\r\nX-emory.edu-MailScanner: Found to be clean\r\nX-emory.edu-MailScanner-From: mwedeme@...\r\nX-Spam-Status: No\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Micah Wedemeyer &lt;mwedeme@...&gt;\r\nSubject: Re: [archive-crawler] SurtPrefixedDecideRule - need a little starter\n help\r\nX-Yahoo-Group-Post: member; u=334689939\r\n\r\nGordon,\n\nThis really clears things up, especially the transclusion rules.\n\nFor our purposes, we&#39;re only doing text analysis, not archiving, so\nlosing images and supplementary media should be fine.  I&#39;ll try turning\noff the transclusion decide rule and see if that will exclude all the\nURLs that don&#39;t match the SURT prefix.\n\nThanks for your help!\nMicah\n\nGordon Mohr wrote:\n&gt; Typically (and in the rule progression you&#39;ve shown), SURT prefixes are \n&gt; used to rule things in, but not out.\n&gt; \n&gt; The general operation of your rules in plain english is:\n&gt; \n&gt;   - mark everything as REJECT\n&gt;   - if fits in SURT, mark as ACCEPT\n&gt;   - if too many hops, mark as REJECT\n&gt;   - if transcluded (see below), mark as ACCEPT\n&gt;   - if a pathologically repetitive path, REJECT\n&gt;   - if an excessively long path, REJECT\n&gt;   - if a prerequisite of another URI, ACCEPT\n&gt; \n&gt; They are applied in order, and the last decision to be applied wins.\n&gt; \n&gt; Obviously, the two URIs you give as examples of unwanted inclusion don&#39;t \n&gt; fit within your SURT prefix -- so they are not ACCEPTed by that rule, \n&gt; and indeed must have a REJECT decision when at step 2.\n&gt; \n&gt; A later step must be ACCEPTing them. As they don&#39;t look like \n&gt; prerequisites, it&#39;s the &#39;transclusion&#39; step.\n&gt; \n&gt; For our purposes, URIs get &#39;transcluded&#39; if they appear likely to be \n&gt; necessary to render collected pages, even if they are off the primary \n&gt; scope. The TransclusionDecideRule makes this determination based on the \n&gt; way the link was discovered -- its &#39;hop type&#39;.\n&gt; \n&gt; Three kinds of hop types get transclusion treatment:\n&gt; \n&gt; &#39;embeds&#39; (&#39;E&#39;): things like an IMG, FRAME, SCRIPT, or STYLE SRC\n&gt; \n&gt; &#39;redirects&#39; (&#39;R&#39;): things like a server redirect or meta refresh\n&gt; \n&gt; &#39;speculative&#39; (&#39;X&#39;): possible links found inside Javascript or rich \n&gt; media that may be necessary to render the original page, even without a \n&gt; user navigation click\n&gt; \n&gt; By looking at the crawl.log lines for the URIs collected, you will see \n&gt; -- right after the URI itself -- a string of letters like &#39;LLE&#39; which \n&gt; indicates the hops-from-seed to reach that URI. Further, right after \n&gt; that &#39;hops-path&#39; you will see another URI, which was the place the \n&gt; current URI was discovered.\n&gt; \n&gt; You can tighten whether such URIs are included by reducing the counts in \n&gt; the TransclusionDecideRule&#39;s settings. Or, you can discard the rule \n&gt; entirely.\n&gt; \n&gt; Be aware, though, that this increases the likelihood your collection \n&gt; will have gaps where pages refer to offsite resources. On some sites, \n&gt; this might be no harm at all; others may extensively use offsite \n&gt; resources and look very bad unless they are also collected.\n&gt; \n&gt; Looking at your seed...\n&gt; \n&gt;    http://www.georgiaencyclopedia.org/nge/about/Index.jsp\n&gt; \n&gt; ...I see that it uses graphics from...\n&gt; \n&gt;    http://www.georgiaencyclopedia.org/graphics/\n&gt; \n&gt; This /graphics/ directory would *not* be accepted by your SURT prefix...\n&gt; \n&gt;    http://(org,georgiaencyclopedia,www,)/nge/about/\n&gt; \n&gt; ...so it is only the &#39;transclusion&#39; which is currently getting them. \n&gt; (You could also expand your prefix to include the whole site, or add an \n&gt; extra prefix to include the /graphics/ directory.)\n&gt; \n&gt; Hope this helps,\n&gt; \n&gt; - Gordon @ IA\n&gt; \n&gt; \n&gt; Micah Wedemeyer wrote:\n&gt;&gt; (Sorry for spamming, but I wanted to head off the inevitable reply...)\n&gt;&gt;\n&gt;&gt; I looked deeper and found the notes about starting each SURT prefix line\n&gt;&gt; with a &quot;+&quot;  This didn&#39;t seem to have any effect on the scoping, but it\n&gt;&gt; did get rid of the non-LDH errors.\n&gt;&gt;\n&gt;&gt; Also, before anyone asks, here are a few of the URLs that were\n&gt;&gt; (erroneously) crawled.  Let me know if I&#39;m wrong about that:\n&gt;&gt;\n&gt;&gt; http://www.technicalcollegesystemofgeorgia.org/\n&gt;&gt; http://gov.georgia.gov/02/gov/home/0,2218,78006749,00.html\n&gt;&gt;\n&gt;&gt; Obviously, I think these should be excluded by the surt prefix:\n&gt;&gt; http://(org,georgiaencyclopedia,www,)/nge/about/\n&gt;&gt;\n&gt;&gt; Thanks,\n&gt;&gt; Micah\n&gt;&gt;\n&gt;&gt; Micah Wedemeyer wrote:\n&gt;&gt;&gt; Still having trouble here...\n&gt;&gt;&gt;\n&gt;&gt;&gt; I&#39;ve tried adding the SURT prefixes to the seeds file, and it doesn&#39;t\n&gt;&gt;&gt; seem to limit the crawl scope. In addition, I see the following in the\n&gt;&gt;&gt; heritrix output log:\n&gt;&gt;&gt;\n&gt;&gt;&gt; Mar 5, 2008 5:29:54 PM org.archive.modules.seeds.SeedFileIterator transform\n&gt;&gt;&gt; INFO: line in seed file ignored: gnu.inet.encoding.IDNAException:\n&gt;&gt;&gt; Contains non-LDH characters. (org,georgiaencyclopedia,www,)\n&gt;&gt;&gt; org.apache.commons.httpclient.URIException:\n&gt;&gt;&gt; gnu.inet.encoding.IDNAException: Contains non-LDH characters.\n&gt;&gt;&gt; (org,georgiaencyclopedia,www,)\n&gt;&gt;&gt;\n&gt;&gt;&gt; Here is a snippet of my global.sheet:\n&gt;&gt;&gt;\n&gt;&gt;&gt; root:scope:rules=list, org.archive.modules.deciderules.DecideRule\n&gt;&gt;&gt; root:scope:rules:0=object, org.archive.modules.deciderules.RejectDecideRule\n&gt;&gt;&gt; root:scope:rules:1=object,\n&gt;&gt;&gt; org.archive.modules.deciderules.surt.SurtPrefixedDecideRule\n&gt;&gt;&gt; root:scope:rules:1:rebuild-on-reconfig=boolean, true\n&gt;&gt;&gt; root:scope:rules:1:seeds-as-surt-prefixes=boolean, true\n&gt;&gt;&gt; root:scope:rules:2=object,\n&gt;&gt;&gt; org.archive.modules.deciderules.TooManyHopsDecideRule\n&gt;&gt;&gt; root:scope:rules:3=object,\n&gt;&gt;&gt; org.archive.modules.deciderules.TransclusionDecideRule\n&gt;&gt;&gt; root:scope:rules:4=object,\n&gt;&gt;&gt; org.archive.modules.deciderules.PathologicalPathDecideRule\n&gt;&gt;&gt; root:scope:rules:5=object,\n&gt;&gt;&gt; org.archive.modules.deciderules.TooManyPathSegmentsDecideRule\n&gt;&gt;&gt; root:scope:rules:6=object,\n&gt;&gt;&gt; org.archive.modules.deciderules.PrerequisiteAcceptDecideRule\n&gt;&gt;&gt;\n&gt;&gt;&gt; The contents of the seeds file are as follows:\n&gt;&gt;&gt;\n&gt;&gt;&gt; http://www.georgiaencyclopedia.org/nge/about/Index.jsp\n&gt;&gt;&gt; &lt;http://www.georgiaencyclopedia.org/nge/about/Index.jsp&gt;\n&gt;&gt;&gt; http://(org,georgiaencyclopedia,www,)/nge/about/\n&gt;&gt;&gt;\n&gt;&gt;&gt; I&#39;ve also tried the SURTS_SOURCE_FILE, but it (seems to) try to infer\n&gt;&gt;&gt; the surt prefix, and I want to specify it exactly.\n&gt;&gt;&gt;\n&gt;&gt;&gt; What am I doing wrong?\n&gt;&gt;&gt;\n&gt;&gt;&gt; Thanks,\n&gt;&gt;&gt; Micah\n&gt;&gt;&gt;\n&gt;&gt;&gt; Micah Wedemeyer wrote:\n&gt;&gt;&gt;&gt; I&#39;d like to be able to crawl with the following 4 filters:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; 1 - Crawl by path (ie. http://sub.example.com/foo/\n&gt;&gt;&gt; &lt;http://sub.example.com/foo/&gt;\n&gt;&gt;&gt;&gt; &lt;http://sub.example.com/foo/ &lt;http://sub.example.com/foo/&gt;&gt; )\n&gt;&gt;&gt;&gt; 2 - Crawl by host (ie. http://sub.example.com &lt;http://sub.example.com&gt;\n&gt;&gt;&gt; &lt;http://sub.example.com &lt;http://sub.example.com&gt;&gt; )\n&gt;&gt;&gt;&gt; 3 - Crawl by domain (ie. http://*.example.com &lt;http://*.example.com&gt;\n&gt;&gt;&gt; &lt;http://*.example.com &lt;http://*.example.com&gt;&gt; )\n&gt;&gt;&gt;&gt; 4 - Free (crawl whatever you find)\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Now, it seems that the SurtPrefixedDecideRule should be able to handle\n&gt;&gt;&gt;&gt; all these cases. I&#39;m just unclear on how to go from a seed to the\n&gt;&gt;&gt;&gt; correct surt prefix.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Assume we have a seed of: http://sub.example.com/foo/index.html\n&gt;&gt;&gt; &lt;http://sub.example.com/foo/index.html&gt;\n&gt;&gt;&gt;&gt; &lt;http://sub.example.com/foo/index.html\n&gt;&gt;&gt; &lt;http://sub.example.com/foo/index.html&gt;&gt;\n&gt;&gt;&gt;&gt; Its surt form would be: http://(com, example, sub,)/foo/index.html\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Are these surt prefixes correct for their respective cases?:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; 1 - http://(com, example, sub,)/foo/\n&gt;&gt;&gt;&gt; 2 - http://(com, example, sub,\n&gt;&gt;&gt;&gt; 3 - http://(com, example\n&gt;&gt;&gt;&gt; 4 - http://\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Please tell me if I have something wrong there.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Assuming I understand that correctly, I&#39;m unclear on how to configure\n&gt;&gt;&gt;&gt; the SurtPrefixedDecideRule module. Specifically, how can I specify a\n&gt;&gt;&gt;&gt; particular surt prefix? I&#39;m assuming that the prefix inferred from the\n&gt;&gt;&gt;&gt; seed is the most restrictive (ie. it will always be case 1 in my list\n&gt;&gt;&gt;&gt; above). So, I would like to be able to explicitly set the prefix set.\n&gt;&gt;&gt;&gt; I notice there&#39;s an option to do this from a file, but can it also be\n&gt;&gt;&gt;&gt; done programmatically? Can I specify it directly?\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Alternately, it looks like I could add the specific surt prefix to the\n&gt;&gt;&gt;&gt; seed file, and then set SEEDS_AS_SURT_PREFIXES to true. However, the\n&gt;&gt;&gt;&gt; surt prefix in the seeds file would not be a valid URI. Is that a\n&gt;&gt;&gt;&gt; problem, to have invalid URIs in the seeds file?\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; To sum up, the basic questions are this: do I understand surt prefixes\n&gt;&gt;&gt;&gt; correctly, and if so, how do I explicitly specify the desired prefiexs\n&gt;&gt;&gt;&gt; to the SurtPrefixedDecideRule?\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Thanks,\n&gt;&gt;&gt;&gt; Micah\n\n"}}