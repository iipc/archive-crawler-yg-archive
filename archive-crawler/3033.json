{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137477665,"authorName":"Igor Ranitovic","from":"Igor Ranitovic &lt;igor@...&gt;","profile":"iranitovic","replyTo":"LIST","senderId":"UZN5-XRvKm6t8AUdfgtObK3evnOxJcIIYVJbtJbsRFAhrBsAY1R1cjIH1sUJdcRjl9hyGVGfmGGEIW7DWZbej4Boh4GGGb6b","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] [Thoughts / Fixes] bugs 1507554,1517693","postDate":"1152572800","msgId":3033,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ0QjJERDgwLjcwNTA4MDdAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDQ0QjI5RUY5LjkwNDA4MDRAYXJjaGl2ZS5vcmc+","referencesHeader":"PGIxM2YzZjA2MDYwNzA5MTQyN2czYmZkMTgyMXlhYmE5MTZjZDE5NmJkZTc1QG1haWwuZ21haWwuY29tPiA8NDRCMjlFRjkuOTA0MDgwNEBhcmNoaXZlLm9yZz4="},"prevInTopic":3031,"nextInTopic":3036,"prevInTime":3032,"nextInTime":3034,"topicId":3026,"numMessagesInTopic":10,"msgSnippet":"I would just like to add that we are not trying all values found within the value attribute but just ones that look like possible URLs. So, if Heritrix finds","rawEmail":"Return-Path: &lt;igor@...&gt;\r\nX-Sender: igor@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 92843 invoked from network); 10 Jul 2006 23:10:30 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m27.grp.scd.yahoo.com with QMQP; 10 Jul 2006 23:10:30 -0000\r\nReceived: from unknown (HELO mail.archive.org) (207.241.227.188)\n  by mta6.grp.scd.yahoo.com with SMTP; 10 Jul 2006 23:10:30 -0000\r\nReceived: from localhost (localhost [127.0.0.1])\n\tby mail.archive.org (Postfix) with ESMTP id 4BB9114156BAD\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Mon, 10 Jul 2006 16:10:33 -0700 (PDT)\r\nReceived: from mail.archive.org ([127.0.0.1])\n\tby localhost (mail.archive.org [127.0.0.1]) (amavisd-new, port 10024)\n\twith LMTP id 12429-02-10 for &lt;archive-crawler@yahoogroups.com&gt;;\n\tMon, 10 Jul 2006 16:10:32 -0700 (PDT)\r\nReceived: from [192.168.1.4] (unknown [67.170.222.19])\n\tby mail.archive.org (Postfix) with ESMTP id 6420314156574\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Mon, 10 Jul 2006 16:10:32 -0700 (PDT)\r\nMessage-ID: &lt;44B2DD80.7050807@...&gt;\r\nDate: Mon, 10 Jul 2006 16:06:40 -0700\r\nUser-Agent: Thunderbird 1.5.0.4 (Windows/20060516)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;b13f3f060607091427g3bfd1821yaba916cd196bde75@...&gt; &lt;44B29EF9.9040804@...&gt;\r\nIn-Reply-To: &lt;44B29EF9.9040804@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Virus-Scanned: Debian amavisd-new at archive.org\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Igor Ranitovic &lt;igor@...&gt;\r\nSubject: Re: [archive-crawler] [Thoughts / Fixes] bugs 1507554,1517693\r\nX-Yahoo-Group-Post: member; u=137477665; y=l13c8Tc4eK3a7aiyHXFJZiW-DYmvsFEMnUlmrW_Bo3Fe3ZrTjQ\r\nX-Yahoo-Profile: iranitovic\r\n\r\nI would just like to add that we are not trying all values found within the value attribute but just \nones that look like possible URLs. So, if Heritrix finds something that looks like a file (0.00, \npage.html, etc.) or path (0/0, /images/) or absolute path (http://a.com/) it will try to crawl it.\n\ni.\n\nMichael Stack wrote:\n&gt; Yousef Ourabi wrote:\n&gt;&gt; Hello:\n&gt;&gt; I sent a somewhat similar email to this list yesterday that seems to \n&gt;&gt; have been blocked due to the attached patches? Ignore that one if it \n&gt;&gt; ends up making it to the list as I&#39;ve slightly changed the way I \n&gt;&gt; tweaked things. Both issues are resolved on my local build, could \n&gt;&gt; someone (St.Ack?) take a quick look through the patch(es) and see if \n&gt;&gt; they are up to snuff (There might be architectural considerations I&#39;ve \n&gt;&gt; failed to take into account). If they are not, share your thoughts and \n&gt;&gt; I&#39;ll try to comply :-)\n&gt;&gt;\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; Great stuff Yousef.  Comments interlaced in the below.\n&gt; \n&gt; ...\n&gt; \n&gt;&gt; There is a comment that mentions something about URI&#39;s in form values \n&gt;&gt; (other than the action of course) can someone elaborate? I can&#39;t \n&gt;&gt; really think of any examples? It seems like this is unnecessarily \n&gt;&gt; increasing the signal/noise ratio when extracting URI&#39;s and it seems \n&gt;&gt; like being lax with false positives would have a strong negative \n&gt;&gt; impact at crawl time (?)\n&gt;&gt;\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; The only case I can think of URIs in form values would be as form defaults.\n&gt; \n&gt; In general, Heritrix would rather have false positives than the inverse \n&gt; (Our extraction philosophy can be characterized as &#39;overeager&#39;).  \n&gt; Heritrix is an archival crawler that tries to find every link possible.\n&gt; \n&gt; Talking with our Igor, considering the sample HTML you provide, we&#39;d \n&gt; like to keep our default behavior for the very reason that there may be \n&gt; links in values (as per your cnn.com in the example below).  Igor also \n&gt; provided an example where a list is all links: http://www.fco.gov.uk.\n&gt; \n&gt; What would be nice would be making this behavior optional with it \n&gt; enabled by default.  If a webmaster complained about a Heritrix crawler \n&gt; generating too many 404s, a crawl admin could turn off option extraction.\n&gt; \n&gt; \n&gt; ....\n&gt; \n&gt;&gt; // INLINE PATCH\n&gt;&gt; Index: org/archive/crawler/extractor/ExtractorHTML.java\n&gt;&gt; ===================================================================\n&gt;&gt; RCS file: \n&gt;&gt; /cvsroot/archive-crawler/ArchiveOpenCrawler/src/java/org/archive/crawler/extractor/ExtractorHTML.java,v\n&gt;&gt; retrieving revision 1.74\n&gt;&gt; diff -u - r1.74 ExtractorHTML.java\n&gt;&gt; --- org/archive/crawler/extractor/ExtractorHTML.java    3 Mar 2006 \n&gt;&gt; 03:34:19 -0000    1.74\n&gt;&gt; +++ org/archive/crawler/extractor/ExtractorHTML.java    9 Jul 2006 \n&gt;&gt; 19:35:38 -0000\n&gt;&gt; @@ -155,8 +155,6 @@\n&gt;&gt;      // URI might be one anyway, as in form-tag VALUE attributes\n&gt;&gt;      static final String LIKELY_URI_PATH =\n&gt;&gt;       &quot;(&#92;&#92;.{0,2}[^&#92;&#92;.&#92;&#92;n&#92;&#92;r&#92;&#92;s&#92;&quot;&#39;]*(&#92;&#92;.[^&#92;&#92;.&#92;&#92;n&#92;&#92;r&#92;&#92;s&#92;&quot;&#39;]+)+)&quot;;\n&gt;&gt; -    static final String ESCAPED_AMP = &quot;&amp;&quot;;\n&gt;&gt; -    static final String AMP =&quot;&&quot;;\n&gt;&gt;      static final String WHITESPACE = &quot;&#92;&#92;s&quot;;\n&gt;&gt;      static final String CLASSEXT =&quot;.class&quot;;\n&gt;&gt;      static final String APPLET = &quot;applet&quot;;\n&gt;&gt; @@ -220,6 +218,7 @@\n&gt;&gt;              assert start &gt;= 0: &quot;Start is: &quot; + start + &quot;, &quot; + curi;\n&gt;&gt;              assert end &gt;= 0: &quot;End is :&quot; + end + &quot;, &quot; + curi;\n&gt;&gt;              CharSequence value = cs.subSequence(start, end);\n&gt;&gt; +            value = TextUtils.descapeHtmlForURI(value.toString());\n&gt;&gt;              if (attr.start(2) &gt; -1) {\n&gt;&gt;                  // HREF\n&gt;&gt;                  CharSequence context =\n&gt;&gt; @@ -276,7 +275,7 @@\n&gt;&gt;              } else if (attr.start(6) &gt; -1) {\n&gt;&gt;                  // CODEBASE\n&gt;&gt;                  // TODO: more HTML deescaping?\n&gt;&gt; -                codebase = TextUtils.replaceAll(ESCAPED_AMP, value, AMP);\n&gt;&gt; +                codebase = TextUtils.descapeHtmlForURI(value.toString());\n&gt;&gt;\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; This looks like an improvement.  Would be nice if \n&gt; TextUtils.descapeHtmlForURI did all encodings other than just single \n&gt; quote and ampersand as per the suggestion of Will Sargent up on the list \n&gt; subsequent to your posting.\n&gt; \n&gt; Thanks Yousef,\n&gt; St.Ack\n&gt;&gt;  \n&gt; \n&gt; \n&gt; \n&gt; \n&gt;  \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n&gt;  \n&gt; \n&gt; \n\n\n"}}