{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"&quot;Gordon Mohr&quot; &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"YRmRfsp_0zjqfkywzIo0MLCk0SKEvuStuF5f3cqaam6gt4FXLgTep13uKT1qXV8hNYZjQz5p0sjJFXU16b81KZefEZrTpegdtQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Javascript vs. Javascript","postDate":"1050025685","msgId":41,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMGYwMWMyZmZjYyQ2NTU5Y2IzMCQ0OGYwZWRkMUBXT1JLU1RBVElPTjIxPg=="},"prevInTopic":0,"nextInTopic":0,"prevInTime":40,"nextInTime":42,"topicId":41,"numMessagesInTopic":1,"msgSnippet":"Just to capture the idea I mentioned yesterday in the archives: A potential way to extract Javascript-synthesized URIs from web pages without integrating a","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (EGP: mail-8_2_6_5); 11 Apr 2003 01:48:16 -0000\r\nReceived: (qmail 41782 invoked from network); 11 Apr 2003 01:48:15 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m9.grp.scd.yahoo.com with QMQP; 11 Apr 2003 01:48:15 -0000\r\nReceived: from unknown (HELO mail.archive.org) (209.237.232.56)\n  by mta3.grp.scd.yahoo.com with SMTP; 11 Apr 2003 01:48:15 -0000\r\nReceived: from WORKSTATION21 (b116-dyn-72.archive.org [209.237.240.72])\n\tby iahost-232-56.archive.org (8.12.8/8.10.2) with SMTP id h3B16AMK019103\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Thu, 10 Apr 2003 18:06:10 -0700\r\nMessage-ID: &lt;000f01c2ffcc$6559cb30$48f0edd1@WORKSTATION21&gt;\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nSubject: Javascript vs. Javascript\r\nDate: Thu, 10 Apr 2003 18:48:05 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;Windows-1252&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1106\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1106\r\nFrom: &quot;Gordon Mohr&quot; &lt;gojomo@...&gt;\r\nX-Yahoo-Group-Post: member; u=137285340\r\nX-Yahoo-Profile: gojomo\r\n\r\nJust to capture the idea I mentioned yesterday in the archives:\n\nA potential way to extract Javascript-synthesized URIs from web pages \nwithout integrating a Javascript/DOM engine into our own software\nwould be:\n\nBrowser-side setup\n- Run an IE web browser on a PC\n- Set it to use a specific HTTP proxy server\n- Point it at a &quot;control&quot; URL -- a page that is initially blank\n  but triggers reloads at a regular frequency\n\nCrawler/proxy-side behavior\n- When an HTML page with Javascript is detected, the &quot;control&quot; URL is\n  changed to prompt the browser to attempt loading it in a \n  new window. (The &quot;control&quot; panel just keeps refreshing as\n  before.)\n- When the proxy receives the request for the page, it supplies\n  the page, but with an extra bit of Javascript prepended (more\n  on this below).\n- The browser will automatically attempt to fetch anything it\n  needs to interpret the page, or anything that &#39;onLoad&#39; (etc.)\n  Javascript handlers triggers. The proxy notes any URIs it\n  did not already know about, and passes to the Crawler.\n- The extra bit of Javascript -- let&#39;s call it &#39;probe.js&#39; --\n  then iterates over every DOM element, triggering any &#39;onEnter&#39;\n  &#39;onClick&#39; etc handlers that a user might, in turn.\n- It should even be possible to use &#39;probe.js&#39; to modify/wrap\n  the typical Javascript objects and functions for loading/\n  visiting pages (document/window/etc) -- so the target URIs\n  can be captured without necessarily triggering a document\n  reload (which would make the iteration harder).\n\nIt&#39;d be clunky and slow, but we&#39;d be directly intercepting \nwhat a real browser Javascript/DOM environment might generate\nas followup URIs, and thus likely do better than any other\ninferral technique unless deep, deep effort is made to accurately\nmodel IE&#39;s javascript environment.\n\n- Gordon\n\n\n\n\n"}}