{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":199508284,"authorName":"Niklas Vargensten","from":"Niklas Vargensten &lt;niklas.vargensten@...&gt;","replyTo":"LIST","senderId":"M8F3X41Uk-l8Jl4K5RNNmfI2zVQ1Apvp_9Mbs5yFhzowMiR9Ul-vlUI4g2Drz2VzMDv-VlxX3M-0lC6uAxR7BgGqR_S2g9StwOpxpz2Ruj3kCdPltEs","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Buggy host valence feature revisited","postDate":"1096029260","msgId":1034,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDQwOTI0MTQzNC4yMDYwNS5uaWtsYXMudmFyZ2Vuc3RlbkBqYWpqYS5jb20+"},"prevInTopic":0,"nextInTopic":1039,"prevInTime":1033,"nextInTime":1035,"topicId":1034,"numMessagesInTopic":2,"msgSnippet":"I think I may have tracked this bug down (maybe others have too). Preconditions for Frontier host settings: valence  1, delay factor != 0, min_delay != 0,","rawEmail":"Return-Path: &lt;niklas.vargensten@...&gt;\r\nX-Sender: niklas.vargensten@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 15379 invoked from network); 24 Sep 2004 12:36:38 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m23.grp.scd.yahoo.com with QMQP; 24 Sep 2004 12:36:38 -0000\r\nReceived: from unknown (HELO mail.jajja.com) (82.96.63.21)\n  by mta2.grp.scd.yahoo.com with SMTP; 24 Sep 2004 12:36:38 -0000\r\nReceived: (qmail 28229 invoked by uid 1010); 24 Sep 2004 14:42:48 +0200\r\nReceived: from niklas.vargensten@... by app1 by uid 1007 with qmail-scanner-1.22-st-qms \n (clamdscan: 0.75. spamassassin: 2.63.  Clear:RC:1(192.168.10.108):. \n Processed in 0.013787 secs); 24 Sep 2004 12:42:48 -0000\r\nX-Antivirus-MYDOMAIN-Mail-From: niklas.vargensten@... via app1\r\nX-Antivirus-MYDOMAIN: 1.22-st-qms (Clear:RC:1(192.168.10.108):. Processed in 0.013787 secs Process 28225)\r\nReceived: from unknown (HELO ?192.168.10.108?) (192.168.10.108)\n  by mail.jajja.com with SMTP; 24 Sep 2004 14:42:48 +0200\r\nOrganization: Jajja Communications AB\r\nTo: archive-crawler@yahoogroups.com\r\nDate: Fri, 24 Sep 2004 14:34:20 +0200\r\nUser-Agent: KMail/1.6.2\r\nMIME-Version: 1.0\r\nContent-Disposition: inline\r\nContent-Type: text/plain;\n  charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nMessage-Id: &lt;200409241434.20605.niklas.vargensten@...&gt;\r\nX-eGroups-Remote-IP: 82.96.63.21\r\nFrom: Niklas Vargensten &lt;niklas.vargensten@...&gt;\r\nSubject: Buggy host valence feature revisited\r\nX-Yahoo-Group-Post: member; u=199508284\r\n\r\nI think I may have tracked this bug down (maybe others have too).\n\nPreconditions for Frontier host settings: \nvalence &gt; 1, delay factor != 0, min_delay != 0, max_delay != 0\n\nAssume a CrawlURI C, whose associated KeyedQueue Q is READY, is being fetched.  \nIn the meantime some other CrawlURI for the same host finishes, and  Q \nbecomes SNOOZED.\n\nWhen C has been fetched, the chain of events in Frontier is shown below.\n\n1. method: finished(C)\n\n2. method:  noteProcessingDone(C)\n3.   Q = keyedQueueFor(C);\n4.   Object startState = kq.getState(); // == SNOOZED\n5.   Q.noteProcessDone (sets Q&#39;s state to READY or EMPTY)\n\n6.    method: updateScheduling(C, Q)\n\nA. if the scheduling decides that Q should be SNOOZED\n\n7.        method:  snoozeQueueUntil(Q, WakeTime)\n8.            the state of Q is READY, so it is not removed from snoozeQueues\n9.           Q is added to snoozeQueues (event though it is already present)\n10.          the state of Q is now changed to SNOOZED\n11.          the wakeTime of Q is now changed to the new WakeTime\n\nB. if the scheduling does not chamge Q to SNOOZED               \n\n11. method: noteProcessingDone (continued)\n12.          if(startState != Q.state())\n                // yes: Q was SNOOZED, now READY or EMPTY\n13.            method:updateQ(Q) \n14.                if EMPTY, then it may be discarded\n15.                if READY then\n16                     readyClassQueues.add(Q)\n\nCase A demonstrates how the snoozeQueues TreeMap ends up \nin the invalid state in which Q is present twice in the map - once \nin the wrong place of the tree, and once in the correct place. This \nwill later cause Q.remove(Q.first()) to fail in method: wakeReadyQueues. \nThis will cause an infinite loop of severe logging messages, which \nmakes heritrix_out grow until the program is killed.\n\nCase B (I don&#39;t know if this happens, but it is possible)\nNow, if Q became READY, it is present in both snoozedQueues and \nreadyClassQueues. If it became EMPTY, then it was discarded. The latter \nnever seems to happen, but the former sure does according to my traces.\n\nTo summarize, the problem seems to be caused by Q.noteProcessDone on line 5, \nwhich sets the state of Q to READY. Since the following methods in the \nchain get the state from Q with getState() they will think that Q is READY, \nwhen it is actually SNOOZED. The solution is easy - just pass the actual state \nacquired on line 4 to the scheduling methods to avoid this mishap!\n\nPheew!\n/ Niklas\n\n"}}