{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":176845436,"authorName":"anitabidari","from":"&quot;anitabidari&quot; &lt;abidari@...&gt;","profile":"anitabidari","replyTo":"LIST","senderId":"wFICibe_j_o2T66B8pppL6T_KK1ai7oWtRseleo9zUC50tHsrMXZSgaMyDvR3QpRzFUWXJP4eodCUsxPqZqZ8d1APixHUg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Out of Memory Error","postDate":"1177243076","msgId":4162,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGYwZmlrNCthamJhQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQ2MjUzNzA2LjQwOTAyMDNAYXJjaGl2ZS5vcmc+"},"prevInTopic":4127,"nextInTopic":4163,"prevInTime":4161,"nextInTime":4163,"topicId":4013,"numMessagesInTopic":16,"msgSnippet":"Hi Gordan I upgraded to 1.12.0, and still get the OOME error. I am using Java Version 1.6 and 3G Heap Size. java.lang.OutOfMemoryError at","rawEmail":"Return-Path: &lt;abidari@...&gt;\r\nX-Sender: abidari@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 33893 invoked from network); 22 Apr 2007 11:58:44 -0000\r\nReceived: from unknown (66.218.66.70)\n  by m37.grp.scd.yahoo.com with QMQP; 22 Apr 2007 11:58:44 -0000\r\nReceived: from unknown (HELO n24a.bullet.sp1.yahoo.com) (209.131.38.234)\n  by mta12.grp.scd.yahoo.com with SMTP; 22 Apr 2007 11:58:44 -0000\r\nReceived: from [216.252.122.216] by n24.bullet.sp1.yahoo.com with NNFMP; 22 Apr 2007 11:57:56 -0000\r\nReceived: from [66.218.69.2] by t1.bullet.sp1.yahoo.com with NNFMP; 22 Apr 2007 11:57:56 -0000\r\nReceived: from [66.218.66.84] by t2.bullet.scd.yahoo.com with NNFMP; 22 Apr 2007 11:57:56 -0000\r\nDate: Sun, 22 Apr 2007 11:57:56 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;f0fik4+ajba@...&gt;\r\nIn-Reply-To: &lt;46253706.4090203@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;anitabidari&quot; &lt;abidari@...&gt;\r\nSubject: Re: Out of Memory Error\r\nX-Yahoo-Group-Post: member; u=176845436; y=3f1G1r8wCvVmciXjICt5SqqTirLpWxhsmVlaVlyLDOhFxJAahM4\r\nX-Yahoo-Profile: anitabidari\r\n\r\nHi Gordan\nI upgraded to 1.12.0, and still get the OOME error. I am using Ja=\r\nva\nVersion 1.6 and 3G Heap Size. \n\njava.lang.OutOfMemoryError\n        at ja=\r\nva.util.zip.Deflater.init(Native Method)\n        at java.util.zip.Deflater.=\r\n&lt;init&gt;(Deflater.java:123)\n        at java.util.zip.GZIPOutputStream.&lt;init&gt;(=\r\nGZIPOutputStream.java:46)\n        at java.util.zip.GZIPOutputStream.&lt;init&gt;(=\r\nGZIPOutputStream.java:58)\n        at\norg.archive.io.WriterPoolMember$Compre=\r\nssedStream.&lt;init&gt;(WriterPoolMember.java:492)\n        at\norg.archive.io.Writ=\r\nerPoolMember.preWriteRecordTasks(WriterPoolMember.java:360)\n        at org.=\r\narchive.io.arc.ARCWriter.write(ARCWriter.java:412)\n        at\norg.archive.c=\r\nrawler.writer.ARCWriterProcessor.write(ARCWriterProcessor.java:163)\n       =\r\n at\norg.archive.crawler.writer.ARCWriterProcessor.innerProcess(ARCWriterPro=\r\ncessor.java:130)\n        at\norg.archive.crawler.framework.Processor.process=\r\n(Processor.java:109)\n        at\norg.archive.crawler.framework.ToeThread.pro=\r\ncessCrawlUri(ToeThread.java:302)\n        at org.archive.crawler.framework.T=\r\noeThread.run(ToeThread.java:151)\n\n\n--- In archive-crawler@yahoogroups.com, =\r\nGordon Mohr &lt;gojomo@...&gt; wrote:\n&gt;\n&gt; The counts of ReentrantReadWriteLock-re=\r\nlated instances are fishy --\nand, \n&gt; by extension, the counts of other inst=\r\nances where there are about \n&gt; 127,700 of them, such as com.sleepycat.je.la=\r\ntch.Java5SharedLatchImpl.\n&gt; \n&gt; I think you may be running into a bug in the=\r\n BDB-JE library that&#39;s \n&gt; bundled with Heritrix-1.10.2 (je-3.0.12). See the=\r\n note for &quot;#15214&quot; in \n&gt; the BDB-JE change log:\n&gt; \n&gt;\nhttp://www.oracle.com/=\r\ntechnology/software/products/berkeley-db/je/files/je3213_changelog.html\n&gt; \n=\r\n&gt; (From the description there, it also looks like you are more likely to \n&gt;=\r\n trigger this bug on long-running smaller crawls that *don&#39;t* exceed the \n&gt;=\r\n BDB-JE in-memory cache size.)\n&gt; \n&gt; If you can&#39;t move to heritrix-1.12.0 (w=\r\nhich uses BDB-JE 3.2.13), you\ncan \n&gt; *probably* just replace the &#39;je-3.0.12=\r\n.jar&#39; file in your \n&gt; HERITRIX_HOME/lib/ directory with the latest BDB-JE r=\r\nelease, 3.2.23,\nfrom:\n&gt; \n&gt;\nhttp://www.oracle.com/technology/software/produc=\r\nts/berkeley-db/je/index.html\n&gt; \n&gt; We haven&#39;t tested that exact combination =\r\n-- Heritrix 1.10.2 on BDB-JE \n&gt; 3.2.23 -- but BDB-JE updates are generally =\r\ndrop-in compatible and we \n&gt; expect to bundle BDB-JE 3.2.23 with Heritrix 1=\r\n.12.1.\n&gt; \n&gt; - Gordon @ IA\n&gt; \n&gt; anitabidari wrote:\n&gt; &gt; Hi Olaf\n&gt; &gt;   Here is=\r\n the top 100 or so lines from jmap -histo output. If you want\n&gt; &gt; to see th=\r\ne whole output which is 1500 lines, let me know. I will be\n&gt; &gt; happy to pos=\r\nt it.\n&gt; &gt; \n&gt; &gt; num   #instances    #bytes  class name\n&gt; &gt; -----------------=\r\n---------------------\n&gt; &gt;   1:  16047112   547575856  [B\n&gt; &gt;   2:    172536=\r\n   179339016  [J\n&gt; &gt;   3:    172718    91191232  [[B\n&gt; &gt;   4:    172710    =\r\n91190880  [Lcom.sleepycat.je.tree.Node;\n&gt; &gt;   5:    169162    21652736  com=\r\n.sleepycat.je.tree.BIN\n&gt; &gt;   6:    822988    19751712  com.sleepycat.je.tre=\r\ne.LN\n&gt; &gt;   7:    198911     9338280  [C\n&gt; &gt;   8:    176585     5650720  jav=\r\na.util.TreeMap$Entry\n&gt; &gt;   9:    172726     5527232 \ncom.sleepycat.je.latch=\r\n.Java5SharedLatchImpl\n&gt; &gt;  10:    172726     5527232 \n&gt; &gt; java.util.concurr=\r\nent.locks.ReentrantReadWriteLock$NonfairSync\n&gt; &gt;  11:     38695     4958680=\r\n  &lt;constMethodKlass&gt;\n&gt; &gt;  12:    197287     4734888  java.lang.String\n&gt; &gt;  =\r\n13:     35553     3415760  [I\n&gt; &gt;  14:     67101     3301736  &lt;symbolKlass&gt;=\r\n\n&gt; &gt;  15:     38695     3099976  &lt;methodKlass&gt;\n&gt; &gt;  16:    172726     27636=\r\n16 \n&gt; &gt;\njava.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalH=\r\noldCounter\n&gt; &gt;  17:    172726     2763616 \n&gt; &gt; java.util.concurrent.locks.R=\r\neentrantReadWriteLock$ReadLock\n&gt; &gt;  18:    172726     2763616 \n&gt; &gt; java.uti=\r\nl.concurrent.locks.ReentrantReadWriteLock$WriteLock\n&gt; &gt;  19:    169174     =\r\n2706784  com.sleepycat.je.utilint.TinyHashSet\n&gt; &gt;  20:     23967     257765=\r\n6  [S\n&gt; &gt;  21:      3544     2181864  &lt;constantPoolKlass&gt;\n&gt; &gt;  22:      354=\r\n4     1471096  &lt;instanceKlassKlass&gt;\n&gt; &gt;  23:      3206     1337328  &lt;consta=\r\nntPoolCacheKlass&gt;\n&gt; &gt;  24:     21012      840480  com.sleepycat.je.cleaner.=\r\nFileSummary\n&gt; &gt;  25:      3437      833080  &lt;methodDataKlass&gt;\n&gt; &gt;  26:     =\r\n18214      728560  com.sleepycat.je.tree.FileSummaryLN\n&gt; &gt;  27:     21936  =\r\n    701952 \n&gt; &gt; java.util.concurrent.locks.AbstractQueuedSynchronizer$Node\n=\r\n&gt; &gt;  28:      5957      630024  [Ljava.util.HashMap$Entry;\n&gt; &gt;  29:      35=\r\n48      368992  com.sleepycat.je.tree.IN\n&gt; &gt;  30:      3843      368928  ja=\r\nva.lang.Class\n&gt; &gt;  31:     23005      368080  java.util.regex.Pattern$Slice=\r\nA\n&gt; &gt;  32:      1351      350192  [Z\n&gt; &gt;  33:     18214      291424  com.sl=\r\neepycat.je.cleaner.PackedOffsets\n&gt; &gt;  34:      5357      250592  [[I\n&gt; &gt;  3=\r\n5:      5735      229400  java.util.HashMap\n&gt; &gt;  36:      8199      196776 =\r\n java.util.HashMap$Entry\n&gt; &gt;  37:      8018      192432  java.util.regex.Pa=\r\nttern$GroupTail\n&gt; &gt;  38:      2348      187904  [Ljava.util.regex.Pattern$N=\r\node;\n&gt; &gt;  39:      3377      165048  [Ljava.lang.Object;\n&gt; &gt;  40:         6=\r\n      164128 \n&gt; &gt; [Lorg.archive.crawler.settings.SoftSettingsHash$SettingsE=\r\nntry;\n&gt; &gt;  41:      4317      138144  java.util.regex.Pattern$Curly\n&gt; &gt;  42=\r\n:      2144      137216  java.util.regex.Pattern\n&gt; &gt;  43:      2123      13=\r\n5872  java.util.regex.Matcher\n&gt; &gt;  44:      7919      126704  java.util.reg=\r\nex.Pattern$GroupHead\n&gt; &gt;  45:      3194      102208  java.util.HashMap$Valu=\r\neIterator\n&gt; &gt;  46:       270       86400  &lt;objArrayKlassKlass&gt;\n&gt; &gt;  47:    =\r\n  4609       73744  java.util.HashSet\n&gt; &gt;  48:      2246       71872  java.=\r\nlang.ThreadLocal$ThreadLocalMap$Entry\n&gt; &gt;  49:      1386       70688  [Ljav=\r\na.lang.String;\n&gt; &gt;  50:      2874       68976  java.util.LinkedList$Entry\n&gt;=\r\n &gt;  51:      2730       65520  java.util.regex.Pattern$3\n&gt; &gt;  52:      3865=\r\n       61840  java.lang.Long\n&gt; &gt;  53:      2348       56352  java.util.rege=\r\nx.Pattern$Branch\n&gt; &gt;  54:      2140       51360  java.util.regex.Pattern$9\n=\r\n&gt; &gt;  55:      1503       48096  java.lang.ref.SoftReference\n&gt; &gt;  56:      1=\r\n921       46104  java.util.Hashtable$Entry\n&gt; &gt;  57:      1315       42080  =\r\njava.util.LinkedHashMap$Entry\n&gt; &gt;  58:      2603       41648  java.util.reg=\r\nex.Pattern$Slice\n&gt; &gt;  59:      1690       40560  java.util.ArrayList\n&gt; &gt;  6=\r\n0:      2348       37568  java.util.regex.Pattern$BranchConn\n&gt; &gt;  61:      =\r\n 207       34544 \n[Ljava.lang.ThreadLocal$ThreadLocalMap$Entry;\n&gt; &gt;  62:   =\r\n   2119       33904  java.util.HashMap$KeySet\n&gt; &gt;  63:       416       3328=\r\n0  java.lang.reflect.Method\n&gt; &gt;  64:      1377       33048  java.util.regex=\r\n.Pattern$5\n&gt; &gt;  65:      1956       31296  java.util.regex.Pattern$Dot\n&gt; &gt; =\r\n 66:      1842       29472  java.util.regex.Pattern$Ctype\n&gt; &gt;  67:       60=\r\n3       28944 \n&gt; &gt; org.archive.crawler.settings.ModuleAttributeInfo\n&gt; &gt;  68=\r\n:       423       27072  java.lang.reflect.Constructor\n&gt; &gt;  69:      1086  =\r\n     26064 \n&gt; &gt; java.util.concurrent.locks.ReentrantReadWriteLock$Sync$Hold=\r\nCounter\n&gt; &gt;  70:       233       25560  [Ljava.util.Hashtable$Entry;\n&gt; &gt;  7=\r\n1:      1453       23248  java.util.regex.Pattern$Start\n&gt; &gt;  72:       544 =\r\n      21760  org.archive.crawler.settings.SimpleType\n&gt; &gt;  73:      1277    =\r\n   20432  java.util.regex.Pattern$BitClass\n&gt; &gt;  74:      1099       17584  =\r\njava.lang.Integer\n&gt; &gt;  75:       258       16512 \ncom.sleepycat.je.cleaner.=\r\nTrackedFileSummary\n&gt; &gt;  76:        97       16296  org.archive.crawler.fram=\r\nework.ToeThread\n&gt; &gt;  77:       677       16248 \n&gt; &gt; java.util.concurrent.lo=\r\ncks.ReentrantLock$NonfairSync\n&gt; &gt;  78:       883       14128  java.util.reg=\r\nex.Pattern$Dollar\n&gt; &gt;  79:       588       14112  java.util.regex.Pattern$6=\r\n\n&gt; &gt;  80:       188       13536  java.lang.reflect.Field\n&gt; &gt;  81:       793=\r\n       12688  java.util.regex.Pattern$CharProperty$1\n&gt; &gt;  82:       194    =\r\n   12416  org.archive.io.RecordingOutputStream\n&gt; &gt;  83:       765       122=\r\n40 \n&gt; &gt; org.archive.crawler.settings.LegalValueTypeConstraint\n&gt; &gt;  84:     =\r\n  493       11832  java.util.regex.Pattern$Ques\n&gt; &gt;  85:       352       11=\r\n264 \njava.util.concurrent.ConcurrentHashMap$Segment\n&gt; &gt;  86:       463     =\r\n  11112  sun.misc.CacheEntry\n&gt; &gt;  87:         8       10672  [Lsun.misc.Cac=\r\nheEntry;\n&gt; &gt;  88:       187       10472 \n&gt; &gt; javax.management.openmbean.Ope=\r\nnMBeanAttributeInfoSupport\n&gt; &gt;  89:       430       10320  java.lang.ref.We=\r\nakReference\n&gt; &gt;  90:       180       10080  org.archive.crawler.settings.Da=\r\ntaContainer\n&gt; &gt;  91:       550        9808  [Ljava.lang.Class;\n&gt; &gt;  92:    =\r\n   400        9600 \ncom.sleepycat.je.cleaner.OffsetList$Segment\n&gt; &gt;  93:   =\r\n    594        9504  java.util.regex.Pattern$Begin\n&gt; &gt;  94:       216      =\r\n  8640  java.math.BigInteger\n&gt; &gt;  95:       154        8624  java.security.=\r\nProvider$Service\n&gt; &gt;  96:       356        8544  org.apache.commons.lang.In=\r\ntHashMap$Entry\n&gt; &gt;  97:       253        8096  java.lang.ref.Finalizer\n&gt; &gt; =\r\n 98:       200        8000  java.util.Hashtable\n&gt; &gt;  99:       124        7=\r\n936  java.util.logging.Logger\n&gt; &gt; 100:       118        7208  [[C\n&gt; &gt; 101: =\r\n      221        7072  java.io.ObjectStreamField\n&gt; &gt; 102:       285        =\r\n6840  java.security.Provider$ServiceKey\n&gt; &gt; 103:       282        6768  sun=\r\n.security.util.DerInputBuffer\n&gt; &gt; 104:       282        6768  sun.security.=\r\nutil.DerValue\n&gt; &gt; 105:       210        6720  org.mortbay.util.StringMap$No=\r\nde\n&gt; &gt; 106:       280        6720  sun.security.x509.RDN\n&gt; &gt; 107:       352=\r\n        6648  \n&gt; &gt; Total 19627050   1024430952\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; --- In archive=\r\n-crawler@yahoogroups.com, &quot;pandae667&quot; &lt;aaron667@&gt; wrote:\n&gt; &gt;&gt; Hi,\n&gt; &gt;&gt;\n&gt; &gt;&gt;=\r\n if you still have access to the machine and the process is still\n&gt; &gt;&gt; hang=\r\ning arround in OOM condition you might try a &quot;jmap -histo &lt;pid&gt;&quot;\n&gt; &gt;&gt; to ge=\r\nt an overview of all the objects arround - this might help to\n&gt; &gt;&gt; track do=\r\nwn the real cause of the OOME.\n&gt; &gt;&gt;\n&gt; &gt;&gt; Regards\n&gt; &gt;&gt;   Olaf Freyer\n&gt; &gt;&gt;\n&gt; =\r\n&gt;&gt; --- In archive-crawler@yahoogroups.com, &quot;anitabidari&quot; &lt;abidari@&gt;\nwrote:\n=\r\n&gt; &gt;&gt;&gt; Hi Gordan\n&gt; &gt;&gt;&gt; I have run into the OOME again. This time I had the h=\r\neap size set to\n&gt; &gt;&gt;&gt; 1G. I downloaded Java 1.6 per your suggestion, and be=\r\nlow is the\nStack\n&gt; &gt;&gt;&gt; Trace that you requested.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; The crawl ran =\r\nfor 11 days and progress stats are\n&gt; &gt;&gt;&gt; Discovered      Queued       Downl=\r\noaded  mem-use-KB  Heap-use-KB   \n&gt; &gt;&gt;&gt; Congestion\n&gt; &gt;&gt;&gt; 23181561        11=\r\n745868     11024191    979905     987584  1.0\n&gt; &gt;&gt;&gt; Do you need any other i=\r\nnformation such as my order.xml etc?\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; 04/16/2007 17:24:20 +0000 =\r\nSEVERE\n&gt; &gt;&gt;&gt; org.archive.crawler.framework.ToeThread seriousError Serious e=\r\nrror\n&gt; &gt;&gt;&gt; occured trying to proces\n&gt; &gt;&gt;&gt; s &#39;unknown&#39;\n&gt; &gt;&gt;&gt; [ToeThread #79:=\r\n\n&gt; &gt;&gt;&gt;  -no CrawlURI-\n&gt; &gt;&gt;&gt;     WAITING for 11m21s125ms\n&gt; &gt;&gt;&gt;     step: ABO=\r\nUT_TO_GET_URI for 11m21s125ms\n&gt; &gt;&gt;&gt;     java.lang.Thread.getStackTrace(Thre=\r\nad.java:1426)\n&gt; &gt;&gt;&gt;    \n&gt; &gt; org.archive.crawler.framework.ToeThread.reportT=\r\no(ToeThread.java:513)\n&gt; &gt;&gt;&gt;    \n&gt; &gt; org.archive.crawler.framework.ToeThread=\r\n.reportTo(ToeThread.java:591)\n&gt; &gt;&gt;&gt;     org.archive.util.DevUtils.extraInfo=\r\n(DevUtils.java:65)\n&gt; &gt;&gt;&gt;    \n&gt; &gt;&gt;&gt;\n&gt; &gt;\norg.archive.crawler.framework.ToeThr=\r\nead.seriousError(ToeThread.java:230)\n&gt; &gt;&gt;&gt;     org.archive.crawler.framewor=\r\nk.ToeThread.run(ToeThread.java:174)\n&gt; &gt;&gt;&gt; ]\n&gt; &gt;&gt;&gt;            timestamp  dis=\r\ncovered      queued   downloaded      \n&gt; &gt;&gt;&gt; doc/s(avg)  KB/s(avg)   dl-fai=\r\nlures   busy-thread   mem-use-\n&gt; &gt;&gt;&gt; KB  heap-size-KB   congestion   max-de=\r\npth   avg-depth\n&gt; &gt;&gt;&gt; 2007-04-16T17:24:20Z    23181561    11745868     1102=\r\n4191      \n&gt; &gt;&gt;&gt; 0.0(12.68)     0(182)        450518             8       97=\r\n69\n&gt; &gt;&gt;&gt; 99        987584          1.0     3681209     1468233\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; =\r\njava.lang.OutOfMemoryError: Java heap space\n&gt; &gt;&gt;&gt; &lt;Cleaner name=3D&quot;Cleaner-=\r\n1&quot;/&gt; caught exception:\n&gt; &gt;&gt;&gt; java.lang.NullPointerException\n&gt; &gt;&gt;&gt; java.lang=\r\n.NullPointerException\n&gt; &gt;&gt;&gt;         at java.util.TreeMap.getEntry(TreeMap.j=\r\nava:324)\n&gt; &gt;&gt;&gt;         at java.util.TreeMap.remove(TreeMap.java:580)\n&gt; &gt;&gt;&gt; =\r\n        at java.util.TreeSet.remove(TreeSet.java:259)\n&gt; &gt;&gt;&gt;         at\n&gt; &gt;&gt;=\r\n&gt;\n&gt; &gt;\ncom.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(FileSelec=\r\ntor.java:236)\n&gt; &gt;&gt;&gt;         at\n&gt; &gt;&gt;&gt;\ncom.sleepycat.je.cleaner.FileProcessor=\r\n.doClean(FileProcessor.java:201)\n&gt; &gt;&gt;&gt;         at\n&gt; &gt;&gt;&gt;\n&gt; &gt;\ncom.sleepycat.j=\r\ne.cleaner.FileProcessor.onWakeup(FileProcessor.java:143)\n&gt; &gt;&gt;&gt;         at\n&gt;=\r\n &gt;&gt;&gt; com.sleepycat.je.utilint.DaemonThread.run(DaemonThread.java:189)\n&gt; &gt;&gt;&gt;=\r\n         at java.lang.Thread.run(Thread.java:619)\n&gt; &gt;&gt;&gt; Continuing\n&gt; &gt;&gt;&gt;\n&gt; =\r\n&gt;&gt;&gt;\n&gt; &gt;&gt;&gt; --- In archive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@&gt; wro=\r\nte:\n&gt; &gt;&gt;&gt;&gt; anitabidari wrote:\n&gt; &gt;&gt;&gt;&gt;&gt; --- In archive-crawler@...=\r\nm, Gordon Mohr &lt;gojomo@&gt;\n&gt; &gt; wrote:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; anitabidari wrote:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; I=\r\n have heretrix-1.10.2 running on a dual core Linux box with\n&gt; &gt;&gt; 2.8Ghz\n&gt; &gt;=\r\n&gt;&gt;&gt;&gt;&gt;&gt; cpu&#39;s and 8G memory. Heretrix is often running into an Out of\n&gt; &gt;&gt; M=\r\nemory\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; error. I dont recall seeing this error with an older versio=\r\nn of\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; heretrix v1.8 that I had running for quite sometime.\n&gt; &gt;&gt;&gt;&gt;&gt;=\r\n&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; I am running it on a 64 bit machine. And the version of java\n&gt;=\r\n &gt; I am\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; using is j2se_jdk_sun-1.5.0.07. I have the heap size set =\r\nto\n&gt; &gt; 3Gigs\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; (-Xmx option.). Does anyone have any ideas on how to=\r\n resolve\n&gt; &gt; this?\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Should I try running it with a 64 bit JVM, so =\r\nI can specify a\n&gt; &gt;&gt; larger\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; heap? \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; Were you using the ex=\r\nact same JVM (esp. heap) and Heritrix (esp. \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; Processors and UriUni=\r\nqFilter) options in 1.8? How long does it\n&gt; &gt;&gt;&gt; take to \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; OOME?\n&gt; &gt;=\r\n&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; A problematic issue with our DNS library using an ever-growi=\r\nng\n&gt; &gt;&gt;&gt;&gt;&gt; amount of \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; cache memory was resolved between 1.8 and 1.=\r\n10.2, so I would\n&gt; &gt; have \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; expected fewer OOMEs in long-running cr=\r\nawls, rather than more.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; Some thoughts:\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; =\r\n(1) Since you have 8GB, a 64bit JVM and larger heap could help --\n&gt; &gt;&gt;&gt;&gt;&gt; b=\r\nut it \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; tends not help as much as you think, because 64bit object\n&gt;=\r\n &gt;&gt;&gt; pointers mean \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; it takes a large heap to hold the same number =\r\nof objects. (One\n&gt; &gt;&gt;&gt; estimate \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; I&#39;ve seen not specific to Heritri=\r\nx&#39;s heap: 40% larger heap needed\n&gt; &gt;&gt;&gt; for \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; same number of 64bit J=\r\nVM objects.)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; (2) Not all OOMEs are really caused by main =\r\nheap depletion --\n&gt; &gt; some\n&gt; &gt;&gt;&gt;&gt;&gt; other \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; resource/memory-space de=\r\npletions also cause OOMEs. Some of these\n&gt; &gt;&gt;&gt; other \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; depletions c=\r\nan be *worsened* by growing a heap closer to an\n&gt; &gt;&gt;&gt; addressing \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; =\r\nceiling. If you have a OOME that&#39;s easy to reproduce quickly, you\n&gt; &gt;&gt;&gt; may=\r\n \n&gt; &gt;&gt;&gt;&gt;&gt;&gt; want to try running under a 1.6 JVM -- its OOME errors are more =\r\n\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; descriptive, and there are other options for examining the heap\n&gt;=\r\n &gt;&gt; (see \n&gt; &gt;\nhttp://java.sun.com/javase/6/webnotes/trouble/TSG-VM/html/mem=\r\nleaks.html#gbywi)\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; after the OOME.\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt; - Gordon @ IA\n=\r\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;=\r\n&gt; Hi Gordon\n&gt; &gt;&gt;&gt;&gt;&gt; Per your recommendation I have downloaded 1.6 JVM and a=\r\nm\n&gt; &gt; running the\n&gt; &gt;&gt;&gt;&gt;&gt; crawl. 3G is a lot of memory. What could be causi=\r\nng Heretrix\n&gt; &gt; to take\n&gt; &gt;&gt;&gt;&gt;&gt; up more than 3G?\n&gt; &gt;&gt;&gt;&gt; I don&#39;t know; the l=\r\nast OOME problem we had was related to the DNS\n&gt; &gt;&gt; issue \n&gt; &gt;&gt;&gt;&gt; fixed bef=\r\nore 1.10.2.\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; What is your crawl like -- number of seeds, bread=\r\nth/scoping,\netc. --\n&gt; &gt;&gt;&gt; and \n&gt; &gt;&gt;&gt;&gt; how soon does it OOME (in time and nu=\r\nmber of URIs visited and\n&gt; &gt;&gt;&gt; scheduled)?\n&gt; &gt;&gt;&gt;&gt; - Gordon @ IA\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt; =\r\n\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt;  \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt; \n&gt; &gt;\n&gt;\n\n\n\n"}}