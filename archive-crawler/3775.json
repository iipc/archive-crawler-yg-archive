{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"i6XqurNUzY_vjqDpIW5qJdFIQq-kNuevCNL3SuCQImP50Bg8vj_kKIabIFXgReBC_YNnKzrJn8a949QO1WDEZ0VyKT1EA2I","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Help! &quot;No space left on device&quot; left my crawl unusable","postDate":"1170533293","msgId":3775,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1QzRFQkFELjkwNDAxMDJAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDIwMDcwMjAzMTgyMTU2LkdBMTI4MDlAZHV2ZWwuaXIuaWl0LmVkdT4=","referencesHeader":"PDIwMDcwMjAzMTgyMTU2LkdBMTI4MDlAZHV2ZWwuaXIuaWl0LmVkdT4="},"prevInTopic":3774,"nextInTopic":3776,"prevInTime":3774,"nextInTime":3776,"topicId":3774,"numMessagesInTopic":6,"msgSnippet":"Once a crawl hits an out-of-disk condition, it may be in an unresumable and uncheckpointable state -- cleanly recovering from everywhere this might happen","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 63245 invoked from network); 3 Feb 2007 20:08:14 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m30.grp.scd.yahoo.com with QMQP; 3 Feb 2007 20:08:13 -0000\r\nReceived: from unknown (HELO relay02.pair.com) (209.68.5.16)\n  by mta3.grp.scd.yahoo.com with SMTP; 3 Feb 2007 20:08:13 -0000\r\nReceived: (qmail 24369 invoked from network); 3 Feb 2007 20:08:11 -0000\r\nReceived: from unknown (HELO ?10.0.10.115?) (unknown)\n  by unknown with SMTP; 3 Feb 2007 20:08:11 -0000\r\nX-pair-Authenticated: 71.141.138.32\r\nMessage-ID: &lt;45C4EBAD.9040102@...&gt;\r\nDate: Sat, 03 Feb 2007 12:08:13 -0800\r\nUser-Agent: Thunderbird 1.5.0.9 (Windows/20061207)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;20070203182156.GA12809@...&gt;\r\nIn-Reply-To: &lt;20070203182156.GA12809@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] Help! &quot;No space left on device&quot; left my crawl\n unusable\r\nX-Yahoo-Group-Post: member; u=137285340; y=fSjJQAECTTmdty1JAw3fRD6Jd6xozZgKk0us0TNkvKh6\r\nX-Yahoo-Profile: gojomo\r\n\r\nOnce a crawl hits an out-of-disk condition, it may be in an unresumable \nand uncheckpointable state -- cleanly recovering from everywhere this \nmight happen would be very difficult.\n\nIf you have a known-good checkpoint from earlier, you can recover from \nthat, in a fresh JVM launch.\n\nIf you want to recover by replaying the recovery logs, you&#39;ll have to \nconcatenate them together first. This starts a new crawl, but then \nprimes it to (1) not revisit anything marked as a &#39;success&#39; in the \nreplayed logs; (2) fill its queues with the same waiting URIs from the \nlogs. It doesn&#39;t recover all state from the previous crawl, though -- \nlike running tallies, URI &#39;source&#39; tags (if used), and other data -- so \nif those are essential a checkpoint should be used.\n\nHope this helps,\n\n- Gordon @ IA\n\nEric wrote:\n&gt; I just had a crawl using the latest heritrix run out of disk space and\n&gt; it is now in an unusable state.  This is surprising me as I&#39;ve had\n&gt; crawls with 1.8 run out but they just waited for free space and\n&gt; carried on when there was some.  My crawl is now stuck saying all\n&gt; threads are active but producing alerts such as the following, just\n&gt; counting up the retries and doing nothing:\n&gt; \n&gt; 02/03/2007 17:05:42 +0000 WARNING org.archive.io.WriterPool borrowFile Timeout waiting for idle object: Retry #0 of  max of 10: NSEE Pool State: Active 5 of max 5, idle 0, time 300066ms of max 300000ms\n&gt; \n&gt; Not sure what got it into this seemingly leaked-WriterPool-state, as\n&gt; there where a few types of IOExceptions (see below).  But now I don&#39;t\n&gt; really know what to do because checkpoints are failing too.  It takes\n&gt; a long time to pause it, and then I get the following error.  It\n&gt; appears it&#39;s failing to write out the HttpRecorderGetMethod from\n&gt; FetchHTTP (that&#39;s what javap tells me FetchHTTP$2 is) which is somehow\n&gt; stuck in the AList of a CandidateURI that is in a WorkQueue (maybe its\n&gt; peekItem member?) on the WorkQueueFrontier.inProcessQueues.  Searching\n&gt; the code, I have no idea how the HttpRecorderGetMethod is getting put\n&gt; in this AList, but obviously it shouldn&#39;t be there if we&#39;re going to\n&gt; serialize that list.\n&gt; \n&gt; Any ideas?  It&#39;s looking to me like I&#39;ll need to terminate the crawl\n&gt; and recover it from the recover.gz log.  Are those cumulative or not?\n&gt; i.e. I actually have recover.gz.00001, 00002, etc.  Do I just use the\n&gt; latest one to recover or do I need to concatenate them or something?\n&gt; \n&gt; Thanks,\n&gt; eric\n&gt; \n&gt; 02/03/2007 18:04:18 +0000 WARNING org.archive.crawler.framework.Checkpointer checkpointFailed  Checkpoint failed\n&gt; java.io.NotSerializableException: org.archive.crawler.fetcher.FetchHTTP$2\n&gt;         at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1081)\n&gt;         at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:302)\n&gt;         at java.util.Hashtable.writeObject(Hashtable.java:813)\n&gt;         at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)\n&gt;         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n&gt;         at java.lang.reflect.Method.invoke(Method.java:585)\n&gt;         at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:917)\n&gt;         at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1339)\n&gt;         at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt;         at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt;         at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1375)\n&gt;         at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1347)\n&gt;         at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt;         at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt;         at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:302)\n&gt;         at org.archive.crawler.datamodel.CandidateURI.writeObject(CandidateURI.java:578)\n&gt;         at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)\n&gt;         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n&gt;         at java.lang.reflect.Method.invoke(Method.java:585)\n&gt;         at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:917)\n&gt;         at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1339)\n&gt;         at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt;         at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt;         at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1375)\n&gt;         at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1347)\n&gt;         at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt;         at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt;         at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:302)\n&gt;         at org.apache.commons.collections.bag.AbstractMapBag.doWriteObject(AbstractMapBag.java:493)\n&gt;         at org.apache.commons.collections.bag.HashBag.writeObject(HashBag.java:72)\n&gt;         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n&gt;         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n&gt;         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n&gt;         at java.lang.reflect.Method.invoke(Method.java:585)\n&gt;         at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:917)\n&gt;         at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1339)\n&gt;         at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt;         at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt;         at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1375)\n&gt;         at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1347)\n&gt;         at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt;         at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt;         at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1375)\n&gt;         at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1347)\n&gt;         at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt;         at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt;         at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:302)\n&gt;         at org.archive.crawler.util.CheckpointUtils.writeObjectToFile(CheckpointUtils.java:90)\n&gt;         at org.archive.crawler.util.CheckpointUtils.writeObjectToFile(CheckpointUtils.java:79)\n&gt;         at org.archive.crawler.frontier.BdbFrontier.crawlCheckpoint(BdbFrontier.java:338)\n&gt;         at org.archive.crawler.framework.CrawlController.sendCheckpointEvent(CrawlController.java:994)\n&gt;         at org.archive.crawler.framework.CrawlController.checkpoint(CrawlController.java:1176)\n&gt;         at org.archive.crawler.framework.Checkpointer$CheckpointingThread.run(Checkpointer.java:202)\n&gt; \n&gt; java.io.IOException: No space left on device\n&gt;         at java.io.FileOutputStream.writeBytes(Native Method)\n&gt;         at java.io.FileOutputStream.write(FileOutputStream.java:260)\n&gt;         at it.unimi.dsi.fastutil.io.FastBufferedOutputStream.flush(FastBufferedO\n&gt; utputStream.java:124)\n&gt;         at org.archive.io.WriterPoolMember.getPosition(WriterPoolMember.java:391\n&gt; )\n&gt;         at org.archive.crawler.writer.ARCWriterProcessor.write(ARCWriterProcesso\n&gt; r.java:175)\n&gt;         at org.archive.crawler.writer.ARCWriterProcessor.innerProcess(ARCWriterP\n&gt; rocessor.java:149)\n&gt;         at org.archive.crawler.framework.Processor.process(Processor.java:106)\n&gt;         at org.archive.crawler.framework.ToeThread.processCrawlUri(ToeThread.jav\n&gt; a:302)\n&gt;         at org.archive.crawler.framework.ToeThread.run(ToeThread.java:151)\n&gt; \n&gt; java.io.IOException: No space left on device\n&gt;         at java.io.FileOutputStream.writeBytes(Native Method)\n&gt;         at java.io.FileOutputStream.write(FileOutputStream.java:260)\n&gt;         at org.archive.io.RecyclingFastBufferedOutputStream.close(RecyclingFastB\n&gt; ufferedOutputStream.java:137)\n&gt;         at org.archive.io.RecordingOutputStream.closeDiskStream(RecordingOutputS\n&gt; tream.java:320)\n&gt;         at org.archive.io.RecordingOutputStream.closeRecorder(RecordingOutputStr\n&gt; eam.java:327)\n&gt;         at org.archive.io.RecordingOutputStream.close(RecordingOutputStream.java\n&gt; :314)\n&gt;         at org.archive.io.RecordingInputStream.close(RecordingInputStream.java:1\n&gt; 46)\n&gt;         at org.archive.util.HttpRecorder.close(HttpRecorder.java:176)\n&gt;         at org.archive.crawler.fetcher.FetchHTTP.cleanup(FetchHTTP.java:652)\n&gt;         at org.archive.crawler.fetcher.FetchHTTP.innerProcess(FetchHTTP.java:507\n&gt; )\n&gt;         at org.archive.crawler.framework.Processor.process(Processor.java:106)\n&gt;         at org.archive.crawler.framework.ToeThread.processCrawlUri(ToeThread.jav\n&gt; a:302)\n&gt;         at org.archive.crawler.framework.ToeThread.run(ToeThread.java:151)\n&gt; \n\n"}}