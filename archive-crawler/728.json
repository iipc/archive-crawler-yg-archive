{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"stack","from":"stack &lt;stack@...&gt;","replyTo":"LIST","senderId":"4exOczMcYAoGIVkGmMfAMV2E5QDGYxA2Ne8CdDdv8H4mMu652HptGepys61tzJUCCOQvOTWvdTrbYrnR3TYrOg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] ARC reading","postDate":"1091214560","msgId":728,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxMEE5Q0UwLjYwNDA4MDZAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGNlZGg5YitsdDBtQGVHcm91cHMuY29tPg==","referencesHeader":"PGNlZGg5YitsdDBtQGVHcm91cHMuY29tPg=="},"prevInTopic":727,"nextInTopic":732,"prevInTime":727,"nextInTime":729,"topicId":727,"numMessagesInTopic":11,"msgSnippet":"Good stuff.  See comments below. ... The socket implementation won t work with SSL.  I d call it a deadend. ... No real profiling has been done on ARCReader","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 96830 invoked from network); 30 Jul 2004 19:15:46 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m22.grp.scd.yahoo.com with QMQP; 30 Jul 2004 19:15:46 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (209.237.232.202)\n  by mta3.grp.scd.yahoo.com with SMTP; 30 Jul 2004 19:15:46 -0000\r\nReceived: (qmail 20986 invoked by uid 100); 30 Jul 2004 19:06:07 -0000\r\nReceived: from debord.archive.org (HELO ?207.241.238.140?) (stack@...@207.241.238.140)\n  by mail-dev.archive.org with SMTP; 30 Jul 2004 19:06:07 -0000\r\nMessage-ID: &lt;410A9CE0.6040806@...&gt;\r\nDate: Fri, 30 Jul 2004 12:09:20 -0700\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7) Gecko/20040704 Debian/1.7-4\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;cedh9b+lt0m@...&gt;\r\nIn-Reply-To: &lt;cedh9b+lt0m@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=0.1 required=7.0 tests=AWL autolearn=ham version=2.63\r\nX-eGroups-Remote-IP: 209.237.232.202\r\nFrom: stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] ARC reading\r\nX-Yahoo-Group-Post: member; u=168599281\r\n\r\nGood stuff.  See comments below.\n\nnhckbdk wrote:\n\n&gt;Hi,\n&gt;\n&gt;...\n&gt;\n\n&gt;pools of ARC writers and sockets for receiving data to be written to \n&gt;ARC files.\n&gt;  \n&gt;\nThe socket implementation won&#39;t work with SSL.  I&#39;d call it a deadend.\n\n&gt;  - ARCInputStream features a handy readAll() method returning a byte\n&gt;[]\n&gt;    with the complete object.\n&gt;  \n&gt;\n&gt;The reading seems to be better optimized in the IA package\n&gt;(though we haven&#39;t tried to measure the difference in performance).\n&gt;  \n&gt;\n\nNo real profiling has been done on ARCReader (I&#39;d say both are dogs \ncompared to the av tools or Tom Emerson&#39;s libarc: smile).\n\n&gt;Traversing an entire file is not directly supported in the DK package,\n&gt;but the ExtractCDX class implements a traversal for its own purposes.\n&gt;\n&gt;  \n&gt;\nFYI: The ARCReader#main default output is now as pseudo-CDX using the \nfollowing template: &#39;CDX b e a m s c V (or v if uncompressed) n g&#39;.  The \nhash is SHA-1, the form of hash recently added by Gordon to crawl.log \noutput.  Calculating the hash slows the reader (Later, when the hash is \nadded to the ARC itself, having the reader calculate the hash would be \nsomething you&#39;d turn or off; you&#39;d turn it on when you want to validate \nthe ARC content).  Missing are outputting normalized versions of the \noriginal URL and the special Alexa hash that is made up of some \ncombination of document attributes rather just a straight hash of the \ncontent.\n\n&gt; \n&gt;\n&gt;We would like to see at some point of time a package that combines\n&gt;the best features of both the DK and the IA package. Ideally this \n&gt;package should:\n&gt;  - Be a small, closed enitity.\n&gt;  - Be able to mimic the most important Alexa tools.\n&gt;  - Support both .arc and .arc.gz.\n&gt;  - Provide efficient and convenient access to a single object\n&gt;    given a file and an offset.\n&gt;  - Provide efficient and convenient traversal of archives.\n&gt;  - Provide convenient writing of ARC (and .arc.gz) files.\n&gt;    (Large-scale efficient writing may be left out - this is more of\n&gt;     a harvester issue).\n&gt;\n&gt;  \n&gt;\nAll of the above sounds good.  Would be good to break the reading and \nwriting of ARCs out of the crawler and have it instead include a jar.\n\n&gt;First step\n&gt;----------\n&gt;\n&gt;As a first step, we are developing a version of the DK package\n&gt;that still provides all functionalities of the package but builds on \n&gt;top\n&gt;of the IA package. The replacement for ARCInputStream is called\n&gt;ShareableARCRecord and should have the following public members:\n&gt;\n&gt;public class ShareableARCRecord{\n&gt;    public ShareableARCRecord(ARCRecord record,File file);\n&gt;    public File getFile();\n&gt;    public ARCRecordMetaData getMetaData();\n&gt;    public byte[] readAll() throws IOException;\n&gt;    public InputStream getObjectAsInputStream() throws IOException;\n&gt;}\n&gt;\n&gt;The File is just the name of the file in which the record was found.\n&gt;This is useful for indexing information.\n&gt;As the class name indicates, the two latter methods may be called\n&gt;any number of times without &quot;interference&quot;.\n&gt;\n&gt;  \n&gt;\nShould we add the arc file name to ARCRecord metadata?   (Not \nfull-path,  just the name)?\n\n&gt;In order to support CDX extraction we need to extend the package\n&gt;with more explicit support for batch jobs (i.e. &quot;convenient ARC file \n&gt;traversal).\n&gt;This should be implemented through a class with the following public \n&gt;members:\n&gt;\n&gt;public class ARCBatchData {\n&gt;\tpublic static ARCBatchData fromArcs(File[] arcFiles);\n&gt;\tpublic ARCReadingException[] run(ARCBatchJob job);\n&gt;\tpublic ARCReadingException[] run(ARCBatchJob[] jobs);\n&gt;}\n&gt;\n&gt;The class will do its best to read past any &quot;damages&quot; of the given\n&gt;ARC files and process as many records as it can find. Problems \n&gt;encountered\n&gt;on the way (e.g. EOF within a record) are encoded in the \n&gt;ARCReadingException\n&gt;class. In particular, the following code prints out an error report\n&gt;for the ARC file &quot;foo.arc&quot;:\n&gt;\n&gt;  \n&gt;\nARCReader needs to be made more robust here.  It fails the ARC read \ncurrently whenever it hits a parse error.  It should instead try and \nmove on to the next record in the file.\n\nAbove is good stuff.\nSt.Ack\n\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;\n&gt;  \n&gt;\n\n\n"}}