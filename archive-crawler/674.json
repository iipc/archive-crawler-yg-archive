{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164438524,"authorName":"Lars Clausen","from":"Lars Clausen &lt;lc@...&gt;","profile":"lrclause","replyTo":"LIST","senderId":"DHb15pZTaTwTRaT1SsV8LfopfEn3-Jjs396Ams-J1NA9Bt9HrlAn_aNGFzolRPtaJsK0vCEgiBqtBOoxA73_0ZGjlBCHz7SZaeFKXg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Half-brained idea on GZIP ARC file creation","postDate":"1090222676","msgId":674,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwOTAyMjI2NzYuMTkzNS43LmNhbWVsQHBjNzcwLnNiLnN0YXRzYmlibGlvdGVrZXQuZGs+","inReplyToHeader":"PDE2NjM0LjYxNzk4LjY0MDgxNi45MjAwMzJAdGlwaGFyZXMuYmFzaXN0ZWNoLm5ldD4=","referencesHeader":"PDE2NjMzLjUyMjk2LjMyMjQyNy4zNDA4OTBAdGlwaGFyZXMuYmFzaXN0ZWNoLm5ldD4gPDQwRkFEMjBELjkwNzA1MDZAYXJjaGl2ZS5vcmc+IDwxNjYzNC42MTc5OC42NDA4MTYuOTIwMDMyQHRpcGhhcmVzLmJhc2lzdGVjaC5uZXQ+"},"prevInTopic":672,"nextInTopic":0,"prevInTime":673,"nextInTime":675,"topicId":669,"numMessagesInTopic":5,"msgSnippet":"... I like it too, it s a transparent addition (if done right:) that can help those who know about it. ... It does mean that the data can t be streamed, unless","rawEmail":"Return-Path: &lt;lc@...&gt;\r\nX-Sender: lc@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 28790 invoked from network); 19 Jul 2004 07:38:06 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m1.grp.scd.yahoo.com with QMQP; 19 Jul 2004 07:38:06 -0000\r\nReceived: from unknown (HELO luna.statsbiblioteket.dk) (130.225.24.87)\n  by mta5.grp.scd.yahoo.com with SMTP; 19 Jul 2004 07:38:05 -0000\r\nReceived: from pc770.sb.statsbiblioteket.dk\n (pc770.sb.statsbiblioteket.dk [130.225.24.181]) by luna.statsbiblioteket.dk\n (iPlanet Messaging Server 5.2 HotFix 1.16 (built May 14 2003))\n with ESMTP id &lt;0I1300HLO978RU@...&gt; for\n archive-crawler@yahoogroups.com; Mon, 19 Jul 2004 09:37:56 +0200 (MEST)\r\nDate: Mon, 19 Jul 2004 09:37:56 +0200\r\nIn-reply-to: &lt;16634.61798.640816.920032@...&gt;\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-id: &lt;1090222676.1935.7.camel@...&gt;\r\nOrganization: Statsbiblioteket\r\nMIME-version: 1.0\r\nX-Mailer: Ximian Evolution 1.4.5 (1.4.5-1)\r\nContent-type: text/plain\r\nContent-transfer-encoding: 7BIT\r\nReferences: &lt;16633.52296.322427.340890@...&gt;\n &lt;40FAD20D.9070506@...&gt;\n &lt;16634.61798.640816.920032@...&gt;\r\nX-eGroups-Remote-IP: 130.225.24.87\r\nFrom: Lars Clausen &lt;lc@...&gt;\r\nSubject: Re: [archive-crawler] Half-brained idea on GZIP ARC file creation\r\nX-Yahoo-Group-Post: member; u=164438524\r\nX-Yahoo-Profile: lrclause\r\n\r\nOn Sun, 2004-07-18 at 23:53, Tom Emerson wrote:\n&gt; stack writes:\n&gt; &gt; I like this idea of adding a new optional gzip &#39;extra&#39; header field that \n&gt; &gt; has in it the length of the compressed member (Yes, ARCReader could \n&gt; &gt; exploit such a field if present; it does its own parse of gzip header \n&gt; &gt; now).  \n&gt; \n&gt; Yes, libarc parses the GZIP header itself too, which lead me to think\n&gt; about this.\n\nI like it too, it&#39;s a transparent addition (if done right:) that can\nhelp those who know about it.\n\n&gt; &gt; To avoid an extra copy during the writing of the gzipped ARC, the writer \n&gt; &gt; might instead backup and fill in the compressed length after gzipping \n&gt; &gt; had finished.  Would need to profile to make sure this extra I/O didn&#39;t \n&gt; &gt; come at some outlandish cost (General tendency should be toward \n&gt; &gt; minimizing crawl-time I/O).\n&gt; \n&gt; Good idea: I was thinking that the header itself was compressed, but\n&gt; of course it isn&#39;t. The header could reserve 10-digit offset (padded\n&gt; with leading zeros) which is filled in after the stream is written,\n&gt; that way it would be a fixed size.\n&gt; \n&gt; The IO overhead would be two seeks and a write: seek back to the\n&gt; field, write the data, seek back to the end of the stream.\n\nIt does mean that the data can&#39;t be streamed, unless this is done in\nbuffers in the program.\n\n&gt; &gt; I added your suggestion for consideration as part of ARC file revision \n&gt; &gt; proposal: http://crawler.archive.org/cgi-bin/wiki.pl?ArcRevisionProposal.\n&gt; \n&gt; The downside to this is the extra space taken up by the information:\n&gt; 14 bytes per record (assuming a 10-byte offset). This could be reduced\n&gt; if the offset were instead stored as an 8-byte long long stored in\n&gt; little-endian byte order (to reflect the ordering used in the rest of\n&gt; the header). That would give us 12 bytes per record. If we restrict\n&gt; offsets to unsigned 32-bit numbers than we are down to 8 bytes per\n&gt; record... probably a safe bet.\n\nThe average URL object size lies around 20K according to several\nstudies, so I&#39;m not too worried about whether this adds 8 or 14 bytes.\n\n-Lars\n\n\n"}}