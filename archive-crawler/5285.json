{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"EtSJqBoTL2CjPCfJpF1-JVowbUL1qIAHjact50GM5LYfbRZiCh1v19kU6RCmaKbtaBOl1BHHFTqxaNpdf50_fBKEcOjESWg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] Support for encoding","postDate":"1212648213","msgId":5285,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ4NDc4QjE1LjYwMzAxMDFAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGQ2MWM1NzMwMDgwNjA0MDQzNWgzYmE4ZjE5Y3FlZTZkODZlNTBlNjY2NzVkQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGQ2MWM1NzMwMDgwNjAyMTEyN2wyMDMxOWRiZmsxNGNmNjhhMmI5Y2Q4ZDIyQG1haWwuZ21haWwuY29tPgkgPDQ4NDQ2N0Y1LjkwMjAwQGFyY2hpdmUub3JnPiA8ZDYxYzU3MzAwODA2MDQwNDM1aDNiYThmMTljcWVlNmQ4NmU1MGU2NjY3NWRAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":5281,"nextInTopic":5286,"prevInTime":5284,"nextInTime":5286,"topicId":5266,"numMessagesInTopic":9,"msgSnippet":"... Was there any hint or declaration that windows-1252 was the proper encoding, or would it have to be deduced by statistical guesswork from that page if you","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 73171 invoked from network); 5 Jun 2008 06:43:34 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m50.grp.scd.yahoo.com with QMQP; 5 Jun 2008 06:43:34 -0000\r\nX-Received: from unknown (HELO relay03.pair.com) (209.68.5.17)\n  by mta18.grp.scd.yahoo.com with SMTP; 5 Jun 2008 06:43:34 -0000\r\nX-Received: (qmail 49111 invoked from network); 5 Jun 2008 06:43:26 -0000\r\nX-Received: from unknown (HELO ?10.0.10.7?) (unknown)\n  by unknown with SMTP; 5 Jun 2008 06:43:26 -0000\r\nX-pair-Authenticated: 70.137.178.185\r\nMessage-ID: &lt;48478B15.6030101@...&gt;\r\nDate: Wed, 04 Jun 2008 23:43:33 -0700\r\nUser-Agent: Thunderbird 2.0.0.14 (Windows/20080421)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;d61c57300806021127l20319dbfk14cf68a2b9cd8d22@...&gt;\t &lt;484467F5.90200@...&gt; &lt;d61c57300806040435h3ba8f19cqee6d86e50e66675d@...&gt;\r\nIn-Reply-To: &lt;d61c57300806040435h3ba8f19cqee6d86e50e66675d@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] Support for encoding\r\nX-Yahoo-Group-Post: member; u=137285340; y=xHd-0Tc8o-Du-BsLtG-LnE8sm4wCC7t-STZWEGerQCHY\r\nX-Yahoo-Profile: gojomo\r\n\r\nJean-Noël Rivasseau wrote:\n&gt; Hello.\n&gt; \n&gt; My problem was that I had a page that was actually encoded in\n&gt; windows-1252 cp, but advertised itself as a ISO-8859-1 page (although\n&gt; it did this only in the HTML content of the page, not on the\n&gt; appropriate place - the HTTP headers, but anyway as you pointed\n&gt; Heritrix probably picked ISO-8859-1 as default).\n\nWas there any hint or declaration that windows-1252 was the proper \nencoding, or would it have to be deduced by statistical guesswork from \nthat page if you didn&#39;t already know the expected encoding? (Is this a \npublic URL you can share?)\n\n&gt; In my Processor I manually forced the encoding like this (uri is a\n&gt; ProcessorURI):\n&gt; \n&gt; uri.getRecorder().setCharacterEncoding(&quot;windows-1252&quot;);\n&gt; \n&gt; However, although my JVM perfectly supports this encoding (I checked),\n&gt; things were still not working, specifically, the Euro currency\n&gt; character/symbol, coded by the byte 80 in hex in Windows-1252,\n&gt; appeared garbled when I converted the uri to a String via\n&gt; \n&gt; String content = uri.getRecorder().getReplayCharSequence().toString();\n&gt; \n&gt; I looked at the source and found this strange comment in the\n&gt; getReplayCharSequence() of RecordingOutputStream :\n&gt; \n&gt; // TODO: take into account single-byte encoding may be non-default\n&gt; \n&gt; Closer examination of the code reveals that the comment is right - the\n&gt; encoding is downright ignored for single-byte encodings... this can be\n&gt; seen immediately by the fact that the encoding argument is not passed\n&gt; down to further methods in the chain.\n&gt; \n&gt; So the stream of bytes is not correctly converted to a char (actual\n&gt; conversion appears in the charAt method of ByteReplayCharSequence):\n&gt; \n&gt; return (char)(c & 0xff);\n&gt; \n&gt; where c is an int. I guess this formula is correct only for ISO-8859-1.\n\nThis is definitely a problem; I&#39;ve created a new bug:\n\n   http://webteam.archive.org/jira/browse/HER-1506\n\nI think it&#39;s gone unnoticed for a while because:\n  - this masking won&#39;t hurt single-byte characters &lt;= 0x7F\n  - prevalent single-byte encodings are very similar in this range \ninherited from ASCII\n  - our usual configurations only use the ReplayCharSequence for link \nextraction, and link delimiters and link characters are often limited to \nASCII, even when other content on the page varies\n\n&gt; Maybe this could be easily fixed by a patch, but currently this\n&gt; clearly means only ISO-8859-1 is supported as a single byte encoding (\n&gt; I did not look much at multibyte encoding support but hope it is\n&gt; better).\n\nActually, it&#39;s a little worse than that: only bytes &lt;=0x7F are read \nproperly from a (Single)ByteReplayCharSequence.\n\n&gt; As getting back the actual bytes is also quite difficult, the priority\n&gt; of this fix should be high IMHO.\n\nIt&#39;s actually quite easy to get the raw bytes: use the \nRecordingOutputStream.getReplayInputStream method (or \ngetContentReplayInputStream to skip the HTTP headers). That will give a \nraw byte stream of the recorded fetched content.\n\n- Gordon @ IA\n\n\n\n\n&gt; Jean-Noel\n&gt; \n&gt; \n&gt; On Mon, Jun 2, 2008 at 11:36 PM, Gordon Mohr &lt;gojomo@...&gt; wrote:\n&gt;&gt; Jean-Noël Rivasseau wrote:\n&gt;&gt;&gt; Hello,\n&gt;&gt;&gt;\n&gt;&gt;&gt; I had a problem with encoding today and took a look at Heritrix code.\n&gt;&gt;&gt; Unfortunately it seems to me (from my understanding of the code) that\n&gt;&gt;&gt; Heritrix supports only ISO-8859-1 pages and UTF-8 pages. I have a page\n&gt;&gt;&gt; encoded in windows-1252, and Heritrix is not able to read it\n&gt;&gt;&gt; correctly.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Is better encoding support planned in the reasonable near future? This\n&gt;&gt;&gt; seems not a totally trivial thing to do (else I coul have tried) as\n&gt;&gt;&gt; the code is rather low level (ReplayCharSequence is probably the place\n&gt;&gt;&gt; that would need to be fixed) and I am not sure how to proceed.\n&gt;&gt; Heritrix should already support many other encodings -- limited mainly\n&gt;&gt; by what support is in your Java VM.\n&gt;&gt;\n&gt;&gt; As per HTTP/1.1, when no other charset is specified, ISO-8859-1 is\n&gt;&gt; assumed. See:\n&gt;&gt;\n&gt;&gt; http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7.1\n&gt;&gt;\n&gt;&gt; Can you be more specific about the problem you encountered? What did\n&gt;&gt; Heritrix not read that you tried?\n&gt;&gt;\n&gt;&gt; - Gordon @ IA\n&gt;&gt;\n&gt;&gt;\n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n"}}