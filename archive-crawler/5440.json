{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":357883722,"authorName":"Matt Kent","from":"Matt Kent &lt;matthew.e.kent@...&gt;","replyTo":"LIST","senderId":"9Fj0cfv15CWQ53hilIn8STV7vXk9iqxDiyR1nkNG2IaG405FJQdWClvVBuQ2Pl-r2NcHYGcSg-rtFPTn-QHqD9T-Ahb0T_NmMR-t","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] crawl jobs occasionally getting stuck","postDate":"1220377559","msgId":5440,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyMjAzNzc1NTkuNjU4NS4zNy5jYW1lbEBrZW50Ym94LmludGVybmFsLnBlcnNhaS5jb20+","inReplyToHeader":"PDQ4QjY1NDA3LjcwNDA5MDhAYXJjaGl2ZS5vcmc+","referencesHeader":"PDEyMTk4Nzc1NDIuNjU4NS44LmNhbWVsQGtlbnRib3guaW50ZXJuYWwucGVyc2FpLmNvbT4JIDw0OEI2NTQwNy43MDQwOTA4QGFyY2hpdmUub3JnPg=="},"prevInTopic":5434,"nextInTopic":5442,"prevInTime":5439,"nextInTime":5441,"topicId":5430,"numMessagesInTopic":5,"msgSnippet":"I ran into the problem again today and I think I have a more specific question to ask now. I found my processes in a situation where all ten toe threads were ","rawEmail":"Return-Path: &lt;matthew.e.kent@...&gt;\r\nX-Sender: matthew.e.kent@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 57246 invoked from network); 2 Sep 2008 17:46:01 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m56.grp.scd.yahoo.com with QMQP; 2 Sep 2008 17:46:01 -0000\r\nX-Received: from unknown (HELO yx-out-1718.google.com) (74.125.44.154)\n  by mta15.grp.scd.yahoo.com with SMTP; 2 Sep 2008 17:46:01 -0000\r\nX-Received: by yx-out-1718.google.com with SMTP id 36so1497176yxh.2\n        for &lt;archive-crawler@yahoogroups.com&gt;; Tue, 02 Sep 2008 10:46:00 -0700 (PDT)\r\nX-Received: by 10.142.172.12 with SMTP id u12mr2647140wfe.180.1220377560733;\n        Tue, 02 Sep 2008 10:46:00 -0700 (PDT)\r\nReturn-Path: &lt;matthew.e.kent@...&gt;\r\nX-Received: from ?192.168.1.64? ( [76.221.133.165])\n        by mx.google.com with ESMTPS id 30sm12043673wfa.10.2008.09.02.10.45.59\n        (version=SSLv3 cipher=RC4-MD5);\n        Tue, 02 Sep 2008 10:46:00 -0700 (PDT)\r\nTo: archive-crawler@yahoogroups.com\r\nIn-Reply-To: &lt;48B65407.7040908@...&gt;\r\nReferences: &lt;1219877542.6585.8.camel@...&gt;\n\t &lt;48B65407.7040908@...&gt;\r\nContent-Type: text/plain\r\nDate: Tue, 02 Sep 2008 10:45:59 -0700\r\nMessage-Id: &lt;1220377559.6585.37.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.22.3.1 \r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Matt Kent &lt;matthew.e.kent@...&gt;\r\nSubject: Re: [archive-crawler] crawl jobs occasionally getting stuck\r\nX-Yahoo-Group-Post: member; u=357883722\r\n\r\nI ran into the problem again today and I think I have a more specific\nquestion to ask now.\n\nI found my processes in a situation where all ten toe threads were\nstuck. Nine of the ten toe threads were in this state:\n\n&quot;ToeThread #8: &quot; prio=10 tid=0x09454c00 nid=0x6a1b waiting for monitor\nentry [0xb4a51000..0xb4a51ec0]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat org.archive.crawler.framework.CrawlController.toeEnded(CrawlController.java:1815)\n\t- waiting to lock &lt;0x88dc4998&gt; (a org.archive.crawler.admin.CrawlJob$MBeanCrawlController)\n\tat org.archive.crawler.framework.ToeThread.run(ToeThread.java:186)\n\nAnd the tenth toe thread was in this state:\n\n&quot;ToeThread #9: &quot; prio=10 tid=0x09ba6c00 nid=0x6a1c in Object.wait() [0xb506c000..0xb506cf40]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\tat com.sleepycat.je.txn.LockManager.lock(LockManager.java:227)\n\t- locked &lt;0x71e2f020&gt; (a com.sleepycat.je.txn.BasicLocker)\n\tat com.sleepycat.je.txn.BasicLocker.lockInternal(BasicLocker.java:94)\n\tat com.sleepycat.je.txn.Locker.lock(Locker.java:257)\n\tat com.sleepycat.je.dbi.CursorImpl.lockLNDeletedAllowed(CursorImpl.java:2375)\n\tat com.sleepycat.je.dbi.CursorImpl.lockLN(CursorImpl.java:2297)\n\tat com.sleepycat.je.dbi.CursorImpl.searchAndPosition(CursorImpl.java:1983)\n\tat com.sleepycat.je.dbi.DbTree.modifyDbRoot(DbTree.java:336)\n\tat com.sleepycat.je.recovery.Checkpointer.flushIN(Checkpointer.java:750)\n\tat com.sleepycat.je.recovery.Checkpointer.flushDirtyNodes(Checkpointer.java:669)\n\tat com.sleepycat.je.recovery.Checkpointer.syncDatabase(Checkpointer.java:571)\n\tat com.sleepycat.je.dbi.DatabaseImpl.sync(DatabaseImpl.java:545)\n\t- locked &lt;0x88dcab98&gt; (a com.sleepycat.je.dbi.DatabaseImpl)\n\tat com.sleepycat.je.Database.sync(Database.java:322)\n\tat org.archive.util.CachedBdbMap.close(CachedBdbMap.java:315)\n\t- locked &lt;0x88dc59e0&gt; (a org.archive.util.CachedBdbMap)\n\tat org.archive.util.CachedBdbMap.clear(CachedBdbMap.java:422)\n\t- locked &lt;0x88dc59e0&gt; (a org.archive.util.CachedBdbMap)\n\tat org.archive.crawler.admin.StatisticsTracker.finalCleanup(StatisticsTracker.java:232)\n\tat org.archive.crawler.framework.AbstractTracker.crawlEnded(AbstractTracker.java:321)\n\tat org.archive.crawler.admin.StatisticsTracker.crawlEnded(StatisticsTracker.java:869)\n\tat org.archive.crawler.framework.CrawlController.sendCrawlStateChangeEvent(CrawlController.java:960)\n\t- locked &lt;0x88dc6210&gt; (a java.util.Collections$SynchronizedRandomAccessList)\n\tat org.archive.crawler.framework.CrawlController.completeStop(CrawlController.java:1032)\n\tat org.archive.crawler.admin.CrawlJob$MBeanCrawlController.completeStop(CrawlJob.java:801)\n\tat org.archive.crawler.framework.CrawlController.toeEnded(CrawlController.java:1816)\n\t- locked &lt;0x88dc4998&gt; (a org.archive.crawler.admin.CrawlJob$MBeanCrawlController)\n\tat org.archive.crawler.framework.ToeThread.run(ToeThread.java:186)\n\nLooking at the other threads in the dump, it seems that the toe thread is stuck contending with internal BDB threads for a BDB lock.\nHas anyone encountered anything like this before?\n\nOn Thu, 2008-08-28 at 00:30 -0700, Gordon Mohr wrote:\n&gt; I&#39;m guessing some timing interaction between your control program and \n&gt; Heritrix might be the cause.\n&gt; \n&gt; Which version of Heritrix are you using? What interface are you using\n&gt; to \n&gt; start jobs?\n&gt; \n&gt; - Gordon @ IA\n&gt; \n&gt; Matt Kent wrote:\n&gt; &gt; I&#39;ve got a strange problem with my crawl jobs that manifests itself\n&gt; &gt; regularly but not predictably. Every once in a while, a job will get\n&gt; &gt; stuck in the &quot;Preparing&quot; state and I have to manually intervene and\n&gt; kill\n&gt; &gt; it.\n&gt; &gt; \n&gt; &gt; My situation is unusual because I&#39;ve embedded Heritrix in a\n&gt; long-running\n&gt; &gt; program that continuously submits and monitors jobs. The average job\n&gt; &gt; size is rather small, only about 300-500 URLs, and the average job\n&gt; time\n&gt; &gt; is only about 3-5 minutes.\n&gt; &gt; \n&gt; &gt; Based on the jstack excerpt below, it looks like something tried to\n&gt; &gt; pause the job, but it never made it out of the &quot;Preparing&quot; state.\n&gt; &gt; \n&gt; &gt; &quot;ToeThread #2&quot; prio=10 tid=0x0a2fa000 nid=0x2380 in Object.wait()\n&gt; &gt; [0xb422e000..0xb422efc0]\n&gt; &gt; java.lang.Thread.State: WAITING (on object monitor)\n&gt; &gt; at java.lang.Object.wait(Native Method)\n&gt; &gt; at java.lang.Object.wait(Object.java:485)\n&gt; &gt; at\n&gt; &gt;\n&gt; org.archive.crawler.frontier.AbstractFrontier.preNext(AbstractFrontier.java:666)\n&gt; &gt; - locked &lt;0x71c2e0f8&gt; (a\n&gt; &gt; org.archive.crawler.frontier.BdbFrontier)\n&gt; &gt; at\n&gt; &gt;\n&gt; org.archive.crawler.frontier.WorkQueueFrontier.next(WorkQueueFrontier.java:632)\n&gt; &gt; at\n&gt; &gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:144)\n&gt; &gt; \n&gt; &gt; &quot;ToeThread #1&quot; prio=10 tid=0x0a487400 nid=0x237f in Object.wait()\n&gt; &gt; [0xb3dce000..0xb3dcf040]\n&gt; &gt; java.lang.Thread.State: WAITING (on object monitor)\n&gt; &gt; at java.lang.Object.wait(Native Method)\n&gt; &gt; at java.lang.Object.wait(Object.java:485)\n&gt; &gt; at\n&gt; &gt;\n&gt; org.archive.crawler.frontier.AbstractFrontier.preNext(AbstractFrontier.java:666)\n&gt; &gt; - locked &lt;0x71c2e0f8&gt; (a\n&gt; &gt; org.archive.crawler.frontier.BdbFrontier)\n&gt; &gt; at\n&gt; &gt;\n&gt; org.archive.crawler.frontier.WorkQueueFrontier.next(WorkQueueFrontier.java:632)\n&gt; &gt; at\n&gt; &gt; org.archive.crawler.framework.ToeThread.run(ToeThread.java:144)\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; ------------------------------------\n&gt; &gt; \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; \n&gt; \n&gt; \n&gt;  \n\n\n"}}