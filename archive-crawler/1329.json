{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":157788590,"authorName":"Niti Witthayawiroj","from":"Niti Witthayawiroj &lt;niti_wit@...&gt;","profile":"niti_wit","replyTo":"LIST","senderId":"zenwn4GONGjPgDxqctp9m3_x74aw1xnC17j9XX89CfUcjHSGpW3m0rlMxenUgfviu3CMhVjcVN80CcjbMqekowrFIqWO5643HiSLWiwX","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Links Structure","postDate":"1105057647","msgId":1329,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDUwMTA3MDAyNzI3Ljk0MTMyLnFtYWlsQHdlYjYwNTA0Lm1haWwueWFob28uY29tPg==","inReplyToHeader":"PDQxREM3QUIzLjcwMTA5QGFyY2hpdmUub3JnPg=="},"prevInTopic":1325,"nextInTopic":1330,"prevInTime":1328,"nextInTime":1330,"topicId":1319,"numMessagesInTopic":9,"msgSnippet":"Hi, Thank so much for your suggestion. Now i can get the informations of link structure from Heritrix. My supervisor(Chistian) help me to write a new java","rawEmail":"Return-Path: &lt;niti_wit@...&gt;\r\nX-Sender: niti_wit@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 49792 invoked from network); 7 Jan 2005 00:27:28 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m22.grp.scd.yahoo.com with QMQP; 7 Jan 2005 00:27:28 -0000\r\nReceived: from unknown (HELO web60504.mail.yahoo.com) (216.109.116.125)\n  by mta1.grp.scd.yahoo.com with SMTP; 7 Jan 2005 00:27:28 -0000\r\nReceived: (qmail 94134 invoked by uid 60001); 7 Jan 2005 00:27:27 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nDomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;\n  s=s1024; d=yahoo.com;\n  b=x5lmiWehQU5JIIGi9bMgqDusMuzn/87lsVYpx29JSkMaLS6T7MtVD9hSEVGFRhu5uCi6vyZ0fV9DfyklNisSOKoaNP5kUngBy6+G9z/KxdH19d7hjg/V8Lb5GeTL7lYwfH6b+JIkJ8RTn5F9X0ej233Uaq6Lf+vYwj25sVHfKhg=  ;\r\nMessage-ID: &lt;20050107002727.94132.qmail@...&gt;\r\nReceived: from [212.63.46.212] by web60504.mail.yahoo.com via HTTP; Thu, 06 Jan 2005 16:27:27 PST\r\nDate: Thu, 6 Jan 2005 16:27:27 -0800 (PST)\r\nTo: archive-crawler@yahoogroups.com\r\nIn-Reply-To: &lt;41DC7AB3.70109@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-1421474698-1105057647=:90935&quot;\r\nX-eGroups-Remote-IP: 216.109.116.125\r\nFrom: Niti Witthayawiroj &lt;niti_wit@...&gt;\r\nSubject: Re: [archive-crawler] Links Structure\r\nX-Yahoo-Group-Post: member; u=157788590\r\nX-Yahoo-Profile: niti_wit\r\n\r\n\r\n--0-1421474698-1105057647=:90935\r\nContent-Type: text/plain; charset=us-ascii\r\n\r\nHi, \n \nThank so much for your suggestion. Now i can get the informations of link structure from Heritrix. My supervisor(Chistian) help me to write a new java class and add it to the org.archive.crawler.writer package. It will write information of link pages to heritrix_out.log file. \n \nThe code of the new class: \n \npackage org.archive.crawler.writer;\nimport java.io.*;\nimport java.util.*;\nimport org.archive.crawler.datamodel.*;\nimport org.archive.crawler.framework.Processor;\nimport java.util.logging.Logger;\nimport org.archive.crawler.datamodel.CoreAttributeConstants;\nimport javax.management.AttributeNotFoundException;\nimport javax.management.MBeanException;\nimport javax.management.ReflectionException;\nimport org.archive.crawler.settings.Type;\nimport org.archive.crawler.settings.SimpleType;\nimport org.apache.commons.httpclient.URIException;\npublic class LinkStructureProcessor extends Processor\n{\n    /**\n     * Key to use asking settings for arc path value.\n     */\n    public static final String ATTR_PATH =&quot;path&quot;;\n    /**\n     * Logger.\n     */\n    private static final Logger logger =\n        Logger.getLogger(LinkStructureProcessor.class.getName());\n    /**\n     * Where to drop link files.\n     */\n    private File outputDir;\n private PrintWriter writer = null;\n public LinkStructureProcessor(String name) {\n        super(name, &quot;LinkStructure processor&quot;);\n        Type e = addElementToDefinition(\n            new SimpleType(ATTR_PATH, &quot;Where to store link files&quot;, &quot;links&quot;));\n        e.setOverrideable(false);\n    }\n protected void readConfiguration()\n        throws AttributeNotFoundException, MBeanException, ReflectionException {\n        // set up output directory\n        setOutputDir((String) getAttribute(ATTR_PATH));\n    }\n    public synchronized void initialTasks() {\n        // ReadConfiguration populates settings used creating ARCWriter.\n        try {\n            readConfiguration();\n        } catch (MBeanException e) {\n            logger.warning(e.getLocalizedMessage());\n        } catch (ReflectionException e) {\n            logger.warning(e.getLocalizedMessage());\n        } catch (AttributeNotFoundException e) {\n            logger.warning(e.getLocalizedMessage());\n        }\n    }\n public File getOutputDir() {\n        return this.outputDir;\n    }\n    public void setOutputDir(String buffer) {\n        this.outputDir = new File(buffer);\n        if (!this.outputDir.isAbsolute()) {\n            // OutputDir should be relative to &quot;disk&quot;\n            this.outputDir = new File(getController().getDisk(), buffer);\n        }\n        if (!this.outputDir.exists()) {\n            try {\n                this.outputDir.mkdirs();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }\n   /**\n     * Takes a CrawlURI and writes its accompaining link structure to disk\n     *\n     * @param curi CrawlURI to process.\n     */\n    protected void innerProcess(CrawlURI curi) {\n        // If failure, or we haven&#39;t fetched the resource yet, return\n        if (curi.getFetchStatus() &lt;= 0) {\n            return;\n        }\n        Set links = (Set)curi.getAList().\n            getObject(CoreAttributeConstants.A_HTML_LINKS);\n  if(links != null) {\n   if(outputDir == null) {\n    setOutputDir(&quot;links&quot;);\n   }\n   if(writer == null) {\n    try\n    {\n     writer = new PrintWriter(new FileWriter(new File(outputDir, getName())), true);\n    }\n    catch (IOException e)\n    {\n     e.printStackTrace();\n    }\n   }\n   StringWriter sw = new StringWriter();\n   PrintWriter writer = new PrintWriter(sw);\n   writer.print(&quot;from &quot;);\n   writer.println(curi.getURIString());\n   UURI uu = curi.getUURI();\n   for (Iterator i = links.iterator(); i.hasNext();) {\n    String link = (String)i.next();\n    writer.print(&quot; to &quot;);\n    try\n    {\n     UURI uuto = uu.resolve(link);\n     writer.println(uuto);\n    }\n    catch (URIException e)\n    {\n     writer.println(link);\n    }\n   }\n   System.out.println(sw.getBuffer());\n  }\n    }\n public void crawlEnding(String sExitMessage) {\n  // sExitMessage is unused.\n  if(writer != null) {\n   this.writer.close();\n  }\n }\n}\n \nwe added this class to the conf/modules/processors.options and add it to the writers processors module when create a new crawl job.\n \nRegards,\nNiti\n\nIgor Ranitovic &lt;igor@...&gt; wrote:\nHi Niti,\n\nYes, the commandline will output links only one hop away.\nHeritrix does not use PageRank therefore we don&#39;t have that info as part of Heritrix reports. \nHowever, crawl.log has information that you need but it will require some work. Take a look at \nhoppath.pl -- that might give you some ideas on how to approach this problem.\n\nFor example:\n$HERITRIX_HOME/bin/hoppath.pl crawl.log http://www.nyrock.com/images/jr_thumb.gif\n\n2004-11-30-23-31-36 - http://www.nyrock.com/movies/200cigs.htm\n2004-11-30-23-31-34  P http://www.nyrock.com/robots.txt\n2004-11-30-23-31-49   R http://www.nyrock.com/\n2004-11-30-23-46-54    L http://www.nyrock.com/gallery/index.asp\n2004-12-01-01-37-13     L http://www.nyrock.com/gallery2.htm\n2004-12-01-01-37-19      E http://www.nyrock.com/images/jr_thumb.gif\n\nLet us know if we can help more.\n\nTake care,\ni.\n\nP.S. It is great that you are comparing Heritrix against other crawlers. We will like to learn more \nabout you findings.\n\n\n&gt; Thank you so much for your answer. I used the\n&gt; commandline that you give me, but i think the output\n&gt; from commandline are not correct with my requirement.\n&gt; I would like to get link structure of the crawled URIs\n&gt; to use for &quot;link analysis&quot;. I need this informations\n&gt; because i would like to compare with other crawlers. \n&gt; \n&gt; For example with nutch carwler(http://www.nutch.org/).\n&gt; I can get informations about links from\n&gt; nutch(net.nutch.db.WebDBReader).\n&gt; The informations about crawled pages are:\n&gt; \n&gt; Page 1: Version: 4\n&gt; URL:\n&gt; http://www.learninglab.de/~brunkhor/javadoc/jena/com/hp/hpl/jena/vocabulary/RDFS.Nodes.html\n&gt; ID: 000964db178cd1c7af9b20f21c62e612\n&gt; Next fetch: Mon Dec 27 05:24:50 CET 2004\n&gt; Retries since fetch: 0\n&gt; Retry interval: 30 days\n&gt; Num outlinks: 14\n&gt; Score: 1.0\n&gt; NextScore: 1.0\n&gt; \n&gt; Page 2: Version: 4\n&gt; URL:\n&gt; http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/rmi/Naming.html\n&gt; ID: 000ac1fa6dac5cfb0c7f1b682c40ea82\n&gt; Next fetch: Mon Dec 27 05:24:50 CET 2004\n&gt; Retries since fetch: 0\n&gt; Retry interval: 30 days\n&gt; Num outlinks: 22\n&gt; Score: 1.0\n&gt; NextScore: 1.0\n&gt; \n&gt; Page 3: Version: 4\n&gt; URL:\n&gt; http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/javax/swing/text/Utilities.html\n&gt; ID: 0012c54788ae24548b6671bf6479eaf3\n&gt; Next fetch: Mon Dec 27 05:24:50 CET 2004\n&gt; Retries since fetch: 0\n&gt; Retry interval: 30 days\n&gt; Num outlinks: 20\n&gt; Score: 1.0\n&gt; NextScore: 1.0\n&gt; ....\n&gt; and the information about link structure:\n&gt; \n&gt; from\n&gt; http://www.learninglab.de/~brunkhor/javadoc/jena/com/hp/hpl/jena/vocabulary/RDFS.Nodes.html\n&gt;  to\n&gt; http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/lang/Object.html\n&gt;  to ... #show all 14 outlinks \n&gt; \n&gt; from\n&gt; http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/rmi/Naming.html\n&gt;  to\n&gt; http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/allclasses-noframe.html\n&gt;  to ... #show all 22 outlinks\n&gt; \n&gt; from\n&gt; http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/javax/swing/text/Utilities.html\n&gt;  to\n&gt; http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/allclasses-noframe.html\n&gt;  to ... #show all 20 outlinks\n&gt; ....\n&gt; \n&gt; I need the information like that for analyzing\n&gt; links.Can you suggest me how i can get some\n&gt; information like that from Heritrix(maybe from\n&gt; crawl.log or other way).\n&gt; \n&gt; Regards and Thank you so much,\n&gt; Niti \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; --- Igor Ranitovic &lt;igor@...&gt; wrote:\n&gt; \n&gt; \n&gt;&gt; From crawl.log you can get this information with a\n&gt;&gt;bit of perl and unix commandline.\n&gt;&gt;For example:\n&gt;&gt;\n&gt;&gt;cat crawl.log | tr -s &quot; &quot; | cut -f4,6 -d &quot; &quot; | sort\n&gt;&gt;-k2,2 | perl -ane &#39;BEGIN{$uri=&quot;&quot;;}; if (!$uri) { \n&gt;&gt;print &quot;from: $F[1]&#92;n to: $F[0]&#92;n&quot;;}; if ($uri &&\n&gt;&gt;$uri !~ $F[1]){print &quot;from: $F[1]&#92;n to: $F[0]&#92;n&quot;} \n&gt;&gt;else {print &quot; to $F[0]&#92;n&quot;;}; $uri =$F[1];&#39;\n&gt;&gt;\n&gt;&gt;Lets us know if this is what you are looking for.\n&gt;&gt;\n&gt;&gt;i.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;&gt;Niti Witthayawiroj wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;Hallo All,\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;I used Heritrix to crawl some hosts and my crawl\n&gt;&gt;\n&gt;&gt;job\n&gt;&gt;\n&gt;&gt;&gt;&gt;is finished. I would like to get the links\n&gt;&gt;\n&gt;&gt;structure\n&gt;&gt;\n&gt;&gt;&gt;&gt;of pages that are carwled. Can you tell me about\n&gt;&gt;\n&gt;&gt;the\n&gt;&gt;\n&gt;&gt;&gt;&gt;format of the links structure and How i can get\n&gt;&gt;\n&gt;&gt;it.\n&gt;&gt;\n&gt;&gt;&gt;&gt;For example: the format of links structure(or\n&gt;&gt;\n&gt;&gt;other\n&gt;&gt;\n&gt;&gt;&gt;&gt;format, may be links with pageId)\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;from http://a.com/a.html\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;to http://a.com/b.html\n&gt;&gt;&gt;&gt;to http://a.com/c.html\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;from http://a.com/b.html\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;to http://a.com/a.html\n&gt;&gt;&gt;&gt;to http://a.com/c.html\n&gt;&gt;&gt;&gt;...\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;We don&#39;t have publically-available tools currently\n&gt;&gt;\n&gt;&gt;that will allow you \n&gt;&gt;\n&gt;&gt;&gt;to extract document links post crawl.  We have to\n&gt;&gt;\n&gt;&gt;add them. We currently \n&gt;&gt;\n&gt;&gt;&gt;use proprietary tools here at the Archive for\n&gt;&gt;\n&gt;&gt;doing this but intend to \n&gt;&gt;\n&gt;&gt;&gt;move off them with time. \n&gt;&gt;&gt;\n&gt;&gt;&gt;We have various ideas for how to implement the\n&gt;&gt;\n&gt;&gt;link extraction tools -- \n&gt;&gt;\n&gt;&gt;&gt;usually based off some rerunning of the Heritrix\n&gt;&gt;\n&gt;&gt;extractors against the \n&gt;&gt;\n&gt;&gt;&gt;downloaded ARCs -- but we just haven&#39;t gotten\n&gt;&gt;\n&gt;&gt;around to it yet.  There&#39;s \n&gt;&gt;\n&gt;&gt;&gt;also a feature request to drop links found in a\n&gt;&gt;\n&gt;&gt;page as we crawl.\n&gt;&gt;\n&gt;&gt;&gt;The crawl.log will list how a page was discovered.\n&gt;&gt;&gt;\n&gt;&gt;&gt;St.Ack\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;Thank so much\n&gt;&gt;&gt;&gt;Niti\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;          \n\n\t\t\n---------------------------------\nDo you Yahoo!?\n Yahoo! Mail - Helps protect you from nasty viruses.\r\n--0-1421474698-1105057647=:90935\r\nContent-Type: text/html; charset=us-ascii\r\n\r\n&lt;DIV&gt;Hi, &lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;Thank so much for your suggestion. Now i can get the informations of link structure&nbsp;from Heritrix. My supervisor(Chistian) help me to write a new java class and add it to the org.archive.crawler.writer package. It will write information of link pages to heritrix_out.log file. &lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;The&nbsp;code of the new class: &lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;package org.archive.crawler.writer;&lt;BR&gt;import java.io.*;&lt;BR&gt;import java.util.*;&lt;BR&gt;import org.archive.crawler.datamodel.*;&lt;BR&gt;import org.archive.crawler.framework.Processor;&lt;BR&gt;import java.util.logging.Logger;&lt;BR&gt;import org.archive.crawler.datamodel.CoreAttributeConstants;&lt;BR&gt;import javax.management.AttributeNotFoundException;&lt;BR&gt;import javax.management.MBeanException;&lt;BR&gt;import javax.management.ReflectionException;&lt;BR&gt;import org.archive.crawler.settings.Type;&lt;BR&gt;import org.archive.crawler.settings.SimpleType;&lt;BR&gt;import org.apache.commons.httpclient.URIException;&lt;/DIV&gt;\n&lt;DIV&gt;public class LinkStructureProcessor extends Processor&lt;BR&gt;{&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp; /**&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; * Key to use asking settings for arc path value.&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; */&lt;BR&gt;&nbsp;&nbsp;&nbsp; public static final String ATTR_PATH =&quot;path&quot;;&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp; /**&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; * Logger.&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; */&lt;BR&gt;&nbsp;&nbsp;&nbsp; private static final Logger logger =&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Logger.getLogger(LinkStructureProcessor.class.getName());&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp; /**&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; * Where to drop link files.&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; */&lt;BR&gt;&nbsp;&nbsp;&nbsp; private File outputDir;&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;private PrintWriter writer = null;&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;public LinkStructureProcessor(String name) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super(name, &quot;LinkStructure processor&quot;);&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Type e = addElementToDefinition(&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new SimpleType(ATTR_PATH, &quot;Where to store link files&quot;, &quot;links&quot;));&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.setOverrideable(false);&lt;BR&gt;&nbsp;&nbsp;&nbsp; }&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;protected void readConfiguration()&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws AttributeNotFoundException, MBeanException, ReflectionException {&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // set up output directory&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setOutputDir((String) getAttribute(ATTR_PATH));&lt;BR&gt;&nbsp;&nbsp;&nbsp; }&lt;BR&gt;&nbsp;&nbsp;&nbsp; public synchronized void initialTasks() {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // ReadConfiguration populates settings used creating ARCWriter.&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; readConfiguration();&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (MBeanException e) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; logger.warning(e.getLocalizedMessage());&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (ReflectionException e) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; logger.warning(e.getLocalizedMessage());&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (AttributeNotFoundException e)\n {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; logger.warning(e.getLocalizedMessage());&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&lt;BR&gt;&nbsp;&nbsp;&nbsp; }&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;public File getOutputDir() {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.outputDir;&lt;BR&gt;&nbsp;&nbsp;&nbsp; }&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp; public void setOutputDir(String buffer) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.outputDir = new File(buffer);&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!this.outputDir.isAbsolute()) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // OutputDir should be relative to &quot;disk&quot;&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.outputDir = new File(getController().getDisk(), buffer);&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!this.outputDir.exists()) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.outputDir.mkdirs();&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (Exception e) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&lt;BR&gt;&nbsp;&nbsp;&nbsp; }&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp; /**&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; * Takes a CrawlURI and writes its accompaining link structure to disk&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; *&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; * @param curi CrawlURI to process.&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; */&lt;BR&gt;&nbsp;&nbsp;&nbsp; protected void innerProcess(CrawlURI curi) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // If failure, or we haven&#39;t fetched the resource yet, return&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (curi.getFetchStatus() &lt;= 0) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set links = (Set)curi.getAList().&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; getObject(CoreAttributeConstants.A_HTML_LINKS);&lt;BR&gt;&nbsp;&nbsp;if(links != null) {&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;if(outputDir == null) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;setOutputDir(&quot;links&quot;);&lt;BR&gt;&nbsp;&nbsp;&nbsp;}&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;if(writer == null) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;try&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;{&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer = new PrintWriter(new FileWriter(new File(outputDir, getName())), true);&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;catch (IOException e)&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;{&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;BR&gt;&nbsp;&nbsp;&nbsp;}&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;StringWriter sw = new StringWriter();&lt;BR&gt;&nbsp;&nbsp;&nbsp;PrintWriter writer = new PrintWriter(sw);&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;writer.print(&quot;from &quot;);&lt;BR&gt;&nbsp;&nbsp;&nbsp;writer.println(curi.getURIString());&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;UURI uu = curi.getUURI();&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;for (Iterator i = links.iterator(); i.hasNext();) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;String link = (String)i.next();&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;writer.print(&quot; to &quot;);&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;&nbsp;try&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;{&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UURI uuto = uu.resolve(link);&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.println(uuto);&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;catch (URIException e)&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;{&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.println(link);&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;BR&gt;&nbsp;&nbsp;&nbsp;}&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&nbsp;&nbsp;System.out.println(sw.getBuffer());&lt;BR&gt;&nbsp;&nbsp;}&lt;BR&gt;&nbsp;&nbsp;&nbsp; }&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;public void crawlEnding(String sExitMessage) {&lt;BR&gt;&nbsp;&nbsp;// sExitMessage is unused.&lt;BR&gt;&nbsp;&nbsp;if(writer != null) {&lt;BR&gt;&nbsp;&nbsp;&nbsp;this.writer.close();&lt;BR&gt;&nbsp;&nbsp;}&lt;BR&gt;&nbsp;}&lt;BR&gt;}&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;we added&nbsp;this class to the conf/modules/processors.options&nbsp;and add&nbsp;it to the writers processors module when create a new crawl job.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=Tahoma&gt;Regards,&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=Tahoma&gt;Niti&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;BR&gt;&lt;B&gt;&lt;I&gt;Igor Ranitovic &lt;igor@...&gt;&lt;/I&gt;&lt;/B&gt; wrote:&lt;/DIV&gt;\n&lt;BLOCKQUOTE class=replbq style=&quot;PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #1010ff 2px solid&quot;&gt;&lt;TT&gt;Hi Niti,&lt;BR&gt;&lt;BR&gt;Yes, the commandline will output links only one hop away.&lt;BR&gt;Heritrix does not use PageRank therefore we don&#39;t have that info as part of Heritrix reports. &lt;BR&gt;However, crawl.log has information that you need but it will require some work. Take a look at &lt;BR&gt;hoppath.pl -- that might give you some ideas on how to approach this problem.&lt;BR&gt;&lt;BR&gt;For example:&lt;BR&gt;$HERITRIX_HOME/bin/hoppath.pl crawl.log &lt;A href=&quot;http://www.nyrock.com/images/jr_thumb.gif&quot;&gt;http://www.nyrock.com/images/jr_thumb.gif&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;2004-11-30-23-31-36 - &lt;A href=&quot;http://www.nyrock.com/movies/200cigs.htm&quot;&gt;http://www.nyrock.com/movies/200cigs.htm&lt;/A&gt;&lt;BR&gt;2004-11-30-23-31-34&nbsp; P &lt;A href=&quot;http://www.nyrock.com/robots.txt&quot;&gt;http://www.nyrock.com/robots.txt&lt;/A&gt;&lt;BR&gt;2004-11-30-23-31-49&nbsp;&nbsp; R &lt;A href=&quot;http://www.nyrock.com/&quot;&gt;http://www.nyrock.com/&lt;/A&gt;&lt;BR&gt;2004-11-30-23-46-54&nbsp;&nbsp;&nbsp; L &lt;A\n href=&quot;http://www.nyrock.com/gallery/index.asp&quot;&gt;http://www.nyrock.com/gallery/index.asp&lt;/A&gt;&lt;BR&gt;2004-12-01-01-37-13&nbsp;&nbsp;&nbsp;&nbsp; L &lt;A href=&quot;http://www.nyrock.com/gallery2.htm&quot;&gt;http://www.nyrock.com/gallery2.htm&lt;/A&gt;&lt;BR&gt;2004-12-01-01-37-19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; E &lt;A href=&quot;http://www.nyrock.com/images/jr_thumb.gif&quot;&gt;http://www.nyrock.com/images/jr_thumb.gif&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;Let us know if we can help more.&lt;BR&gt;&lt;BR&gt;Take care,&lt;BR&gt;i.&lt;BR&gt;&lt;BR&gt;P.S. It is great that you are comparing Heritrix against other crawlers. We will like to learn more &lt;BR&gt;about you findings.&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&gt; Thank you so much for your answer. I used the&lt;BR&gt;&gt; commandline that you give me, but i think the output&lt;BR&gt;&gt; from commandline are not correct with my requirement.&lt;BR&gt;&gt; I would like to get link structure of the crawled URIs&lt;BR&gt;&gt; to use for &quot;link analysis&quot;. I need this informations&lt;BR&gt;&gt; because i would like to compare with other crawlers. &lt;BR&gt;&gt; &lt;BR&gt;&gt; For example with nutch carwler(&lt;A\n href=&quot;http://www.nutch.org/).&quot;&gt;http://www.nutch.org/).&lt;/A&gt;&lt;BR&gt;&gt; I can get informations about links from&lt;BR&gt;&gt; nutch(net.nutch.db.WebDBReader).&lt;BR&gt;&gt; The informations about crawled pages are:&lt;BR&gt;&gt; &lt;BR&gt;&gt; Page 1: Version: 4&lt;BR&gt;&gt; URL:&lt;BR&gt;&gt; &lt;A href=&quot;http://www.learninglab.de/~brunkhor/javadoc/jena/com/hp/hpl/jena/vocabulary/RDFS.Nodes.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/jena/com/hp/hpl/jena/vocabulary/RDFS.Nodes.html&lt;/A&gt;&lt;BR&gt;&gt; ID: 000964db178cd1c7af9b20f21c62e612&lt;BR&gt;&gt; Next fetch: Mon Dec 27 05:24:50 CET 2004&lt;BR&gt;&gt; Retries since fetch: 0&lt;BR&gt;&gt; Retry interval: 30 days&lt;BR&gt;&gt; Num outlinks: 14&lt;BR&gt;&gt; Score: 1.0&lt;BR&gt;&gt; NextScore: 1.0&lt;BR&gt;&gt; &lt;BR&gt;&gt; Page 2: Version: 4&lt;BR&gt;&gt; URL:&lt;BR&gt;&gt; &lt;A href=&quot;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/rmi/Naming.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/rmi/Naming.html&lt;/A&gt;&lt;BR&gt;&gt; ID: 000ac1fa6dac5cfb0c7f1b682c40ea82&lt;BR&gt;&gt; Next fetch: Mon Dec 27 05:24:50 CET\n 2004&lt;BR&gt;&gt; Retries since fetch: 0&lt;BR&gt;&gt; Retry interval: 30 days&lt;BR&gt;&gt; Num outlinks: 22&lt;BR&gt;&gt; Score: 1.0&lt;BR&gt;&gt; NextScore: 1.0&lt;BR&gt;&gt; &lt;BR&gt;&gt; Page 3: Version: 4&lt;BR&gt;&gt; URL:&lt;BR&gt;&gt; &lt;A href=&quot;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/javax/swing/text/Utilities.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/javax/swing/text/Utilities.html&lt;/A&gt;&lt;BR&gt;&gt; ID: 0012c54788ae24548b6671bf6479eaf3&lt;BR&gt;&gt; Next fetch: Mon Dec 27 05:24:50 CET 2004&lt;BR&gt;&gt; Retries since fetch: 0&lt;BR&gt;&gt; Retry interval: 30 days&lt;BR&gt;&gt; Num outlinks: 20&lt;BR&gt;&gt; Score: 1.0&lt;BR&gt;&gt; NextScore: 1.0&lt;BR&gt;&gt; ....&lt;BR&gt;&gt; and the information about link structure:&lt;BR&gt;&gt; &lt;BR&gt;&gt; from&lt;BR&gt;&gt; &lt;A href=&quot;http://www.learninglab.de/~brunkhor/javadoc/jena/com/hp/hpl/jena/vocabulary/RDFS.Nodes.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/jena/com/hp/hpl/jena/vocabulary/RDFS.Nodes.html&lt;/A&gt;&lt;BR&gt;&gt;&nbsp; to&lt;BR&gt;&gt; &lt;A\n href=&quot;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/lang/Object.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/lang/Object.html&lt;/A&gt;&lt;BR&gt;&gt;&nbsp; to ... #show all 14 outlinks &lt;BR&gt;&gt; &lt;BR&gt;&gt; from&lt;BR&gt;&gt; &lt;A href=&quot;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/rmi/Naming.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/java/rmi/Naming.html&lt;/A&gt;&lt;BR&gt;&gt;&nbsp; to&lt;BR&gt;&gt; &lt;A href=&quot;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/allclasses-noframe.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/allclasses-noframe.html&lt;/A&gt;&lt;BR&gt;&gt;&nbsp; to ... #show all 22 outlinks&lt;BR&gt;&gt; &lt;BR&gt;&gt; from&lt;BR&gt;&gt; &lt;A href=&quot;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/javax/swing/text/Utilities.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/javax/swing/text/Utilities.html&lt;/A&gt;&lt;BR&gt;&gt;&nbsp; to&lt;BR&gt;&gt; &lt;A\n href=&quot;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/allclasses-noframe.html&quot;&gt;http://www.learninglab.de/~brunkhor/javadoc/j2sdk1.4.2/allclasses-noframe.html&lt;/A&gt;&lt;BR&gt;&gt;&nbsp; to ... #show all 20 outlinks&lt;BR&gt;&gt; ....&lt;BR&gt;&gt; &lt;BR&gt;&gt; I need the information like that for analyzing&lt;BR&gt;&gt; links.Can you suggest me how i can get some&lt;BR&gt;&gt; information like that from Heritrix(maybe from&lt;BR&gt;&gt; crawl.log or other way).&lt;BR&gt;&gt; &lt;BR&gt;&gt; Regards and Thank you so much,&lt;BR&gt;&gt; Niti &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; --- Igor Ranitovic &lt;igor@...&gt; wrote:&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt;&gt; From crawl.log you can get this information with a&lt;BR&gt;&gt;&gt;bit of perl and unix commandline.&lt;BR&gt;&gt;&gt;For example:&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;cat crawl.log | tr -s &quot; &quot; | cut -f4,6 -d &quot; &quot; | sort&lt;BR&gt;&gt;&gt;-k2,2 | perl -ane &#39;BEGIN{$uri=&quot;&quot;;}; if (!$uri) { &lt;BR&gt;&gt;&gt;print &quot;from: $F[1]&#92;n to: $F[0]&#92;n&quot;;}; if ($uri &amp;&amp;&lt;BR&gt;&gt;&gt;$uri !~ $F[1]){print &quot;from: $F[1]&#92;n to:\n $F[0]&#92;n&quot;} &lt;BR&gt;&gt;&gt;else {print &quot; to $F[0]&#92;n&quot;;}; $uri =$F[1];&#39;&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;Lets us know if this is what you are looking for.&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;i.&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;Niti Witthayawiroj wrote:&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;Hallo All,&lt;BR&gt;&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;I used Heritrix to crawl some hosts and my crawl&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;job&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;is finished. I would like to get the links&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;structure&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;of pages that are carwled. Can you tell me about&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;the&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;format of the links structure and How i can get&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;it.&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;For example: the format of links structure(or&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;other&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;format, may be links with pageId)&lt;BR&gt;&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;from &lt;A\n href=&quot;http://a.com/a.html&quot;&gt;http://a.com/a.html&lt;/A&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;to &lt;A href=&quot;http://a.com/b.html&quot;&gt;http://a.com/b.html&lt;/A&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;to &lt;A href=&quot;http://a.com/c.html&quot;&gt;http://a.com/c.html&lt;/A&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;from &lt;A href=&quot;http://a.com/b.html&quot;&gt;http://a.com/b.html&lt;/A&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;to &lt;A href=&quot;http://a.com/a.html&quot;&gt;http://a.com/a.html&lt;/A&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;to &lt;A href=&quot;http://a.com/c.html&quot;&gt;http://a.com/c.html&lt;/A&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;...&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;We don&#39;t have publically-available tools currently&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;that will allow you &lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;to extract document links post crawl.&nbsp; We have to&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;add them. We currently &lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;use proprietary tools here at the Archive for&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;doing this but intend to &lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;move off them with time.\n &lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;We have various ideas for how to implement the&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;link extraction tools -- &lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;usually based off some rerunning of the Heritrix&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;extractors against the &lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;downloaded ARCs -- but we just haven&#39;t gotten&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;around to it yet.&nbsp; There&#39;s &lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;also a feature request to drop links found in a&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;page as we crawl.&lt;BR&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;The crawl.log will list how a page was discovered.&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;St.Ack&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;Thank so much&lt;BR&gt;&gt;&gt;&gt;&gt;Niti&lt;BR&gt;&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;&lt;BR&gt;&gt;&gt;&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;BR&gt;&lt;/TT&gt;&lt;/BLOCKQUOTE&gt;&lt;p&gt;\n\t\t&lt;hr size=1&gt;Do you Yahoo!?&lt;br&gt; \n&lt;a href=&quot;http://us.rd.yahoo.com/mail_us/taglines/virus/*http://promotions.yahoo.com/new_mail/static/protection.html&quot;&gt;Yahoo! Mail&lt;/a&gt; - Helps protect you from nasty viruses.\r\n--0-1421474698-1105057647=:90935--\r\n\n"}}