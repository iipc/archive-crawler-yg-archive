{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"iyOTYed7b8DLT_zdO_9gTJpUOPuc6YPVE90er-NZ3mc_Xwa0iKkrccD7HE9uQMtV44T3LAN8rcn4QMwiklSfscboshWgNI0","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] regular expressions in a regexp-list","postDate":"1189795805","msgId":4543,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2RUFEN0RELjIwMDA2MDlAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDVhMWMzNGFhMDcwOTExMTQzNnc3ZTM3YjA0NWdjM2ZkNTBjMWRkMDQyODg4QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDVhMWMzNGFhMDcwOTExMTQzNnc3ZTM3YjA0NWdjM2ZkNTBjMWRkMDQyODg4QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4541,"nextInTopic":4545,"prevInTime":4542,"nextInTime":4544,"topicId":4539,"numMessagesInTopic":5,"msgSnippet":"Keeping track of the several levels of escaping can be challenging. My main suggestion would be that even if you are composing the order.xml directly for your","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 9662 invoked from network); 14 Sep 2007 18:51:37 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m45.grp.scd.yahoo.com with QMQP; 14 Sep 2007 18:51:37 -0000\r\nReceived: from unknown (HELO mail.archive.org) (207.241.233.246)\n  by mta13.grp.scd.yahoo.com with SMTP; 14 Sep 2007 18:51:37 -0000\r\nReceived: from localhost (localhost [127.0.0.1])\n\tby mail.archive.org (Postfix) with ESMTP id 5BE5F14182C18\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Fri, 14 Sep 2007 11:49:43 -0700 (PDT)\r\nReceived: from mail.archive.org ([127.0.0.1])\n\tby localhost (mail.archive.org [127.0.0.1]) (amavisd-new, port 10024)\n\twith LMTP id 13169-05-69 for &lt;archive-crawler@yahoogroups.com&gt;;\n\tFri, 14 Sep 2007 11:49:42 -0700 (PDT)\r\nReceived: from [192.168.1.203] (c-76-102-230-209.hsd1.ca.comcast.net [76.102.230.209])\n\tby mail.archive.org (Postfix) with ESMTP id C68C1141601A6\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Fri, 14 Sep 2007 11:49:42 -0700 (PDT)\r\nMessage-ID: &lt;46EAD7DD.2000609@...&gt;\r\nDate: Fri, 14 Sep 2007 11:50:05 -0700\r\nUser-Agent: Thunderbird 1.5.0.12 (X11/20070604)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;5a1c34aa0709111436w7e37b045gc3fd50c1dd042888@...&gt;\r\nIn-Reply-To: &lt;5a1c34aa0709111436w7e37b045gc3fd50c1dd042888@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Virus-Scanned: Debian amavisd-new at archive.org\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] regular expressions in a regexp-list\r\nX-Yahoo-Group-Post: member; u=137285340; y=PtuqiyuG_IPiskbd-pl3QRkTMgvPXn-nomt0pZ-dZnfk\r\nX-Yahoo-Profile: gojomo\r\n\r\nKeeping track of the several levels of escaping can be challenging.\n\nMy main suggestion would be that even if you are composing the order.xml \ndirectly for your actual crawl, try entering/testing your desired \nexpressions via the web admin UI. Then you can see how the software \nwrites a working expression to XML.\n\nI don&#39;t believe there are any bugs that would prevent the use of regexes \n  matching &#39;&&#39; characters, but the testing-through-UI process would be \nthe best way to completely rule that out.\n\nThere was one issue with handling dangling &#39;&&#39; characters in a \nsupporting library that was fixed in 1.12.1 by upgrading that library \n(see http://webteam.archive.org/jira/browse/HER-1127 ) -- but I don&#39;t \nthink that&#39;s what you&#39;re seeing. Are you using 1.12.1?\n\n- Gordon @ IA\n\nAndrea Goethals wrote:\n&gt; Hi,\n&gt; \n&gt; The last part of my DecidingScope profiles includes a section to\n&gt; exclude any URIs that match any regular expressions in a list of 0 or\n&gt; more URIs like this example:\n&gt; \n&gt; &lt;newObject name=&quot;rejectExcluded&quot;\n&gt;   class=&quot;org.archive.crawler.deciderules.MatchesListRegExpDecideRule&quot;&gt;\n&gt;      &lt;string name=&quot;decision&quot;&gt;REJECT&lt;/string&gt;\n&gt;      &lt;string name=&quot;list-logic&quot;&gt;OR&lt;/string&gt;\n&gt;      &lt;stringList name=&quot;regexp-list&quot;&gt;\n&gt;            &lt;string&gt;http://www&#92;.example&#92;.com&lt;/string&gt;\n&gt;             &lt;/stringList&gt;\n&gt; &lt;/newObject&gt;\n&gt; \n&gt; \n&gt; \n&gt; The URIs to exclude are pulled from a database and added to this\n&gt; section of the order.xml programatically just before a crawl. I&#39;m\n&gt; running into problems getting the correct escaping for the regular\n&gt; expression even after looking at examples in the manual and mailing\n&gt; list. I&#39;m trying to come up with all the characters that need escaping\n&gt; before they can go into this section of the order.xml. It seems like\n&gt; there&#39;s 2 types of escaping needed, one to go from the URI to the Java\n&gt; regular expression, and the other to make it XML-compatible.\n&gt; \n&gt; The special characters for XML are &lt; &gt; & &#39; &quot;\n&gt; I think that only the & can occur in a URI so I tried converting the &\n&gt; in the URIs to &amp; for the XML but then the pattern doesn&#39;t match a\n&gt; URI with just & instead of &amp;\n&gt; I experimented with using\n&gt; &lt;string&gt;&lt;![CDATA[uri-with-nonescaped-special-xml-chars]]&gt;&lt;/string&gt;\n&gt; to get around doing any conversion for the XML. I&#39;m not sure it that\n&gt; worked or not, I need to test it again.\n&gt; \n&gt; The characters in the URI that need to be escaped for the Java regular\n&gt; expression are at least . and ?\n&gt; I&#39;m not sure if the / character needs to be escaped.\n&gt; \n&gt; Is anyone doing something similar or have a better grasp on all the\n&gt; characters that need to be converted when going from URI -&gt; Java\n&gt; Regular expression -&gt; XML?\n&gt; \n&gt; thanks,\n&gt; Andrea\n&gt; \n&gt; \n&gt;  \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n\n"}}