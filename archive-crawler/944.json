{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":163406187,"authorName":"Kristinn Sigurdsson","from":"&quot;Kristinn Sigurdsson&quot; &lt;kris@...&gt;","profile":"kristsi25","replyTo":"LIST","senderId":"DKFQVTRp8yTPPO5Xa3jGijFATKthvgZFSrZYffL-6KLqA1MvBZZnYUfqPjinV3hKCNCczJTKfzlJZCqQBiDW9j0MQ360tkc8Wm7vw3hR8Q","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [archive-crawler] persistent crawls","postDate":"1094138259","msgId":944,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEQ5NTgxMTBCMjczQ0Q1MTFBQ0MxMDBCMEQwNzlBQTRFMDE5NjBEMDlAbG9raS5ib2suaGkuaXM+","inReplyToHeader":"PEQ5NTgxMTBCMjczQ0Q1MTFBQ0MxMDBCMEQwNzlBQTRFMDI5QzRFMTlAbG9raS5ib2suaGkuaXM+"},"prevInTopic":943,"nextInTopic":945,"prevInTime":943,"nextInTime":945,"topicId":934,"numMessagesInTopic":14,"msgSnippet":"... be a ... flag ... extraction. ... to ... it ... That would be implementation dependant. For what Stack was talking about you just take the if-modified bit","rawEmail":"Return-Path: &lt;kris@...&gt;\r\nX-Sender: kris@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 70605 invoked from network); 2 Sep 2004 15:17:09 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m22.grp.scd.yahoo.com with QMQP; 2 Sep 2004 15:17:09 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (209.237.232.202)\n  by mta5.grp.scd.yahoo.com with SMTP; 2 Sep 2004 15:17:09 -0000\r\nReceived: (qmail 21555 invoked by uid 100); 2 Sep 2004 15:07:36 -0000\r\nReceived: from forritun-4.bok.hi.is (HELO forritun4) (kris@...@130.208.152.83)\n  by mail-dev.archive.org with RC4-MD5 encrypted SMTP; 2 Sep 2004 15:07:36 -0000\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nDate: Thu, 2 Sep 2004 15:17:39 -0000\r\nMessage-ID: &lt;D958110B273CD511ACC100B0D079AA4E01960D09@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook, Build 10.0.4510\r\nIn-Reply-To: &lt;D958110B273CD511ACC100B0D079AA4E029C4E19@...&gt;\r\nImportance: Normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=0.4 required=7.0 tests=AWL autolearn=ham version=2.63\r\nX-eGroups-Remote-IP: 209.237.232.202\r\nFrom: &quot;Kristinn Sigurdsson&quot; &lt;kris@...&gt;\r\nSubject: RE: [archive-crawler] persistent crawls\r\nX-Yahoo-Group-Post: member; u=163406187\r\nX-Yahoo-Profile: kristsi25\r\n\r\n&gt;\n&gt;\n&gt;-----Original Message-----\n&gt;From: Tom Emerson [mailto:Tree@basistech.c=\r\nom] \n&gt;Sent: 2. september 2004 15:12\n&gt;To: archive-crawler@yahoogroups.com\n&gt;S=\r\nubject: RE: [archive-crawler] persistent crawls\n&gt;\n&gt;Kristinn Sigurdsson writ=\r\nes:\n&gt;&gt; That sounds great and brings me to a related topic. There really sho=\r\nuld\nbe a\n&gt;&gt; nice way of marking CrawlURIs as &quot;duplicate&quot; or something simil=\r\nar. This\nflag\n&gt;&gt; should then be used by extractors to (optionally?) preclud=\r\ne link\nextraction.\n&gt;&gt; Of course if stopped before the body is downloaded th=\r\nere wont be anything\nto\n&gt;&gt; do link extraction, but eventually we&#39;ll have a =\r\nprocessor that compares\nit\n&gt;&gt; to existing content hashes.\n&gt;\n&gt;How do you dec=\r\nide what constitutes a duplicate? Exact content match?\n&gt;Same URI path? Some=\r\n subset of similarity? Doing this that will work\n&gt;across languages is diffi=\r\ncult: Broder&#39;s &quot;shingle&quot; approach, and those\n&gt;based on it, don&#39;t work easil=\r\ny since they rely on tokens.\n\nThat would be implementation dependant. For w=\r\nhat Stack was talking about you\njust take the if-modified bit in the header=\r\ns into account. For the proposed\nAdaptive Revisiting add-on it would be URI=\r\n + content hash (possibly a\nweakened hash to ignore trivial changes).\n\nTher=\r\ne just needs to be some way for processor to flag URIs as being\n&#39;unchanged&#39;=\r\n/&#39;duplicate&#39;/&#39;redundant&#39; or whatever we want to call it because\nwe already =\r\nknow that we are going to have to deal with such URIs.\n\n- Kris\n\n\n"}}