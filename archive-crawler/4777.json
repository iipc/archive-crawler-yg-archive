{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":95792214,"authorName":"Christoph Buescher","from":"Christoph Buescher &lt;sterntaufe@...&gt;","profile":"christoph_buescher","replyTo":"LIST","senderId":"2DLrVKfGJNo58LhSh3iMV-rYQHdXA27KWN4ap5TGJso7-TdcQV-HBevmgF3-P-tWLKoIEpDNU0iHAX80VwLw0vo1Ciy0ao5XQZKGqv8","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] Question about ArchiveReader Iterator","postDate":"1197043197","msgId":4777,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ3NTk2REZELjIwODAxMDZAZ214LmRlPg==","inReplyToHeader":"PDQ3NTk2NTY1LjEwMTAzMDRAYXJjaGl2ZS5vcmc+","referencesHeader":"PDQ3NTY3NUIzLjgwODAxMDhAZ214LmRlPiA8NDc1OTY1NjUuMTAxMDMwNEBhcmNoaXZlLm9yZz4="},"prevInTopic":4776,"nextInTopic":4778,"prevInTime":4776,"nextInTime":4778,"topicId":4763,"numMessagesInTopic":7,"msgSnippet":"Hi Igor, thanks for the hint, but the files are okay (gzip -t and the command-line arcreader work). I m trying to iterate over the records from a Java program","rawEmail":"Return-Path: &lt;sterntaufe@...&gt;\r\nX-Sender: sterntaufe@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 12016 invoked from network); 7 Dec 2007 15:59:59 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m46.grp.scd.yahoo.com with QMQP; 7 Dec 2007 15:59:59 -0000\r\nX-Received: from unknown (HELO mail-gw-01.neofonie.de) (81.17.210.143)\n  by mta16.grp.scd.yahoo.com with SMTP; 7 Dec 2007 15:59:59 -0000\r\nX-Received: from [172.27.27.76] (helo=perseus.exchange.neofonie.de)\n\tby mail-gw-01.neofonie.de with esmtp (Exim 4.63)\n\t(envelope-from &lt;sterntaufe@...&gt;)\n\tid 1J0fcL-0008QO-My\n\tfor archive-crawler@yahoogroups.com; Fri, 07 Dec 2007 16:59:57 +0100\r\nX-Received: from [172.23.100.36] ([172.23.100.36]) by perseus.exchange.neofonie.de with Microsoft SMTPSVC(6.0.3790.1830);\n\t Fri, 7 Dec 2007 16:59:57 +0100\r\nMessage-ID: &lt;47596DFD.2080106@...&gt;\r\nDate: Fri, 07 Dec 2007 16:59:57 +0100\r\nUser-Agent: Thunderbird 2.0.0.9 (X11/20071114)\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;475675B3.8080108@...&gt; &lt;47596565.1010304@...&gt;\r\nIn-Reply-To: &lt;47596565.1010304@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-15\r\nContent-Transfer-Encoding: 7bit\r\nX-OriginalArrivalTime: 07 Dec 2007 15:59:57.0605 (UTC) FILETIME=[36FC0D50:01C838EA]\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Christoph Buescher &lt;sterntaufe@...&gt;\r\nReply-To: christophbuescher@...\r\nSubject: Re: [archive-crawler] Question about ArchiveReader Iterator\r\nX-Yahoo-Group-Post: member; u=95792214; y=jITY2xdmnhW7jYR4HUatz1GNc1IrjkZ5jZIVDCdSiZwkFbB8tlnTvyQ1CXUU\r\nX-Yahoo-Profile: christoph_buescher\r\n\r\nHi Igor,\n\nthanks for the hint, but the files are okay (gzip -t and the\ncommand-line arcreader work).\nI&#39;m trying to iterate over the records from a Java program and\neverything works fine as long as I use\n\nif (reader.hasNext()) {\n    ArchiveRecord r = reader.next();\n}\n\nexactly in this order and always one after each other. This, however,\nseems to be a very strict constraint for a standard Java-Iterator.  The\nproblem arises because I don&#39;t want to load all the records right away,\nbut let out processing pipeline request new records from an ArcReader\nwhen it needs one. In our scenario we can&#39;t assure that the client using\nthe ArcReader is well-behaved and always gets the next record after\nright after calling &quot;next()&quot;. It might just want to know several times\nif there is something left to process and then get the record some time\nlater...\nI thought that calling &quot;hasNext()&quot; without getting the next element\nshould not alter the state of the iterator. The test code I posted seems\nto show a different behaviour.\nAlso, calling &quot;next()&quot; without testing for more elements with\n&quot;hasNext()&quot; seems to be tricky. The following code:\n\n        ArchiveRecord r1 = null;\n        ArchiveRecord r2 = null;\n        ArchiveRecord r3 = null;\n        if (arcRecordIterator.hasNext()) {\n            r1 = arcRecordIterator.next();\n            assertNotNull(r1);\n        }\n       \n        if (arcRecordIterator.hasNext()) {\n            r2 = arcRecordIterator.next();\n            assertNotNull(r2);\n           \n        }\n\n        r3 = arcRecordIterator.next();\n        assertNotNull(r3);\n\ncorrectly reads the first two records but throws an &quot;Failed move to EOR\nor failed header read: null&quot; Runtime Exception from\nGzippedInputStream.java:238..., even if the ARC-File has many more records.\n   \n\nI guess my question is: am I using the iterator in a wrong way? Or is\nthe behaviour intended?\nIn this case a hint in the documentation of the ArcReaderIterator might\nbe useful, because the behaviour is different from regular iterators.\n\nAt the moment I&#39;m using a  wrapper class for the ArcReader Iterator that\nensures, that I can  call hasNext() indepentently from next(), but I\nwould like to get rid of this as soon as possible because it seems kind\nof error prone.\n\nChristoph\n\nIgor Ranitovic schrieb:\n&gt; Hi Christoph,\n&gt;\n&gt; Maybe the arc file is corrupted. Does the gzip test pass?\n&gt; (gzip -t CRAWL-20071130161712-00001-graz.arc.gz)\n&gt;\n&gt; Is this always happing after the first next() call?\n&gt;\n&gt; i.\n&gt;\n&gt;\n&gt;\n&gt;   \n&gt;&gt; Hi,\n&gt;&gt;\n&gt;&gt; I&#39;m new to Heritrix and currently using version 1.12.1. I successfully crawled\n&gt;&gt; my first few webpages and want to use the ArchiveReader to further process the\n&gt;&gt; results in my Java program.\n&gt;&gt;\n&gt;&gt; I stumbled across some irritating behaviour of the ArchiveReader.iterator, that\n&gt;&gt; I would like to ask about. First, I thought that calling the hasNext() method on\n&gt;&gt; the ArchiveRecordIterator without advancing the iterator by calling the next()\n&gt;&gt; method should alway work. This seems to be true for a freshly created\n&gt;&gt; Reader/Iterator, but after getting the first record, calling hasNext() more than\n&gt;&gt; once gives the following Runtime exception:\n&gt;&gt;\n&gt;&gt; java.lang.RuntimeException: Failed i/o: Negative seek offset\n&gt;&gt; \tat\n&gt;&gt;     \n\n"}}