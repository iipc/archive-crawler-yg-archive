{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137285340,"authorName":"Gordon Mohr","from":"Gordon Mohr &lt;gojomo@...&gt;","profile":"gojomo","replyTo":"LIST","senderId":"9Udoob2AumftIoYoOeOeJsYkalfhs01lzIWLqx6Zb9Dmz4L7BiIZXhkjoFE3y0e-mPf22VsFTwDzW9VyuJolTO8hY35speE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Heritrix Launcher v3.0","postDate":"1287615692","msgId":6777,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDQkY3NENDLjgwMjAwMDdAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDUyNzAxNC4yMzAxMi5xbUB3ZWI2MzEwNS5tYWlsLnJlMS55YWhvby5jb20+","referencesHeader":"PDUyNzAxNC4yMzAxMi5xbUB3ZWI2MzEwNS5tYWlsLnJlMS55YWhvby5jb20+"},"prevInTopic":6738,"nextInTopic":6782,"prevInTime":6776,"nextInTime":6779,"topicId":6738,"numMessagesInTopic":5,"msgSnippet":"Hi - Why don t you want the web GUI? It s the preferred way to compose, launch, and control crawls. The class you mention below was posted around 6 years ago","rawEmail":"Return-Path: &lt;gojomo@...&gt;\r\nX-Sender: gojomo@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 89600 invoked from network); 20 Oct 2010 23:01:34 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m11.grp.re1.yahoo.com with QMQP; 20 Oct 2010 23:01:34 -0000\r\nX-Received: from unknown (HELO relay01.pair.com) (209.68.5.15)\n  by mta2.grp.re1.yahoo.com with SMTP; 20 Oct 2010 23:01:34 -0000\r\nX-Received: (qmail 28496 invoked from network); 20 Oct 2010 23:01:33 -0000\r\nX-Received: from 67.188.34.83 (HELO silverbook.local) (67.188.34.83)\n  by relay01.pair.com with SMTP; 20 Oct 2010 23:01:33 -0000\r\nX-pair-Authenticated: 67.188.34.83\r\nMessage-ID: &lt;4CBF74CC.8020007@...&gt;\r\nDate: Wed, 20 Oct 2010 16:01:32 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.11) Gecko/20101013 Thunderbird/3.1.5\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nCc: Burak ISIKLI &lt;burak.isikli@...&gt;\r\nReferences: &lt;527014.23012.qm@...&gt;\r\nIn-Reply-To: &lt;527014.23012.qm@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Gordon Mohr &lt;gojomo@...&gt;\r\nSubject: Re: [archive-crawler] Heritrix Launcher v3.0\r\nX-Yahoo-Group-Post: member; u=137285340; y=0OTb9X5xtRHx_ElPQNTR07IYVMgpZ1ptpEsL_fF7h-uO\r\nX-Yahoo-Profile: gojomo\r\n\r\nHi -\n\nWhy don&#39;t you want the web GUI? It&#39;s the preferred way to compose, \nlaunch, and control crawls.\n\nThe class you mention below was posted around 6 years ago as an example \nto the list -- it may not be a good model for current/future use.\n\nIn general, if you want to embed Heritrix code into another Java \nprogram, the best guide is the source code of the web GUI itself -- your \ncalling code will have to perform roughly the same steps as it does.\n\nBut, the looser coupling of another app controlling Heritrix via web \nrequests is recommended. It allows the crawl(s) to occur in a separate \nJVM or other machine, isolating each program from problems in the \nothers, and providing another way to monitor crawls during development.\n\n- Gordon @ IA\n\nOn 9/20/10 12:39 PM, Burak ISIKLI wrote:\n&gt;\n&gt;\n&gt; Hello,\n&gt; How can i start heritrix version 3.0 in java app without web gui?\n&gt; I meant how can i start the heritrix to coding?\n&gt; In heritrix 1.14.4 there is a file name is called\n&gt; SimpleHeritrixLauncher. I want to write it similar.\n&gt; Thanks\n&gt;\n&gt;\n&gt; *SimpleHeritrixLauncher.java*\n&gt;\n&gt; import java.io.File;\n&gt; import java.io.FileNotFoundException;\n&gt; import java.util.Date;\n&gt;\n&gt; import org.archive.crawler.framework.CrawlController;\n&gt; import org.archive.crawler.framework.exceptions.InitializationException;\n&gt; import org.archive.crawler.settings.*;\n&gt; import org.archive.crawler.event.CrawlStatusListener;\n&gt;\n&gt; import javax.management.InvalidAttributeValueException;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; public class SimpleHeritrixLauncher {\n&gt;\n&gt; /**\n&gt; * the orderfile to use\n&gt; */\n&gt; private File orderfile;\n&gt;\n&gt; /**\n&gt; * the original seedsfile to use\n&gt; */\n&gt;\n&gt; /**\n&gt; * Set to true by doOneCrawl()\n&gt; * Set to false on the event crawlEnded - fired by the crawler\n&gt; */\n&gt; private boolean crawlerRunning = false;\n&gt;\n&gt; /**\n&gt; * Set to true when requestCrawlPause() is called on the CrawlController\n&gt; * Set to false when requestCrawlResume() is called on the CrawlController\n&gt; */\n&gt; private boolean crawlerPaused = false;\n&gt;\n&gt; /**\n&gt; * The CrawlController used\n&gt; */\n&gt; private CrawlController controller;\n&gt;\n&gt; /**\n&gt; * Sets up the SimpleHeritrixLauncher from the given order file\n&gt; *\n&gt; * @param orderfile the orderfile to use\n&gt; */\n&gt; public SimpleHeritrixLauncher(File orderfile) throws FileNotFoundException {\n&gt; if (orderfile == null || !orderfile.exists() || orderfile.isDirectory()) {\n&gt; throw new FileNotFoundException(&quot;No legal order file found at &quot; +\n&gt; orderfile);\n&gt; }\n&gt; this.orderfile = orderfile;\n&gt; }\n&gt;\n&gt; /**\n&gt; * Method returns the CrawlController (Heritrix)\n&gt; *\n&gt; * @return the CrawlController used for launching Heritrix\n&gt; */\n&gt; public CrawlController getCrawlController() {\n&gt; return this.controller;\n&gt; }\n&gt;\n&gt; /**\n&gt; * Medhod takes at this point exactly 1 argument:\n&gt; * 1. orderfile\n&gt; * After launching - it waits in a very simple loop for the crawler to finish\n&gt; */\n&gt; public static void main(String[] args) {\n&gt; /* if (args.length != 1) {\n&gt; //System.out.println(&quot;arguman sayisi :&quot;+args.length);\n&gt; outputUsage();\n&gt; return;\n&gt; }*/\n&gt; //File orderfile = new File(args[0]);\n&gt; String fileName=&quot;D:/Workspace.hermod/Hermod/order.xml&quot;;\n&gt; File orderfile = new File(fileName);\n&gt; if (!orderfile.exists()) {\n&gt; System.out.println(&quot;Orderfile &#39;&quot; + fileName + &quot;&#39; NOT found !&quot;);\n&gt; return;\n&gt; }\n&gt;\n&gt; SimpleHeritrixLauncher hl;\n&gt; try {\n&gt; Date d1 = new Date();\n&gt; d1.getTime();\n&gt; hl = new SimpleHeritrixLauncher(orderfile);\n&gt; System.out.println(&quot;Starting crawl with Heritrix....&quot;);\n&gt; System.out.println(&quot;Using orderfile : &quot; + hl.orderfile);\n&gt; hl.doOneCrawl();\n&gt; while (hl.isCrawlerRunning()) {\n&gt; // wait for the crawler to finish\n&gt; }\n&gt; System.out.println(&quot;&#92;nCrawl ended......&quot;);\n&gt; } catch (Exception e) {\n&gt; System.out.println(&quot;Exception occurred: &quot; + e);\n&gt; }\n&gt; }\n&gt;\n&gt; /**\n&gt; * Method outputs usage-information to stdout\n&gt; */\n&gt; private static void outputUsage() {\n&gt; System.out.println(&quot;Usage: java [-Xmx128m]\n&gt; dk.netarkivet.harvestcontroller.SimpleHeritrixLauncher &lt;orderfile&gt;&quot;);\n&gt; System.out.println(&quot;&quot;);\n&gt; }\n&gt;\n&gt; /**\n&gt; * This method launches the crawler !\n&gt; *\n&gt; * @throws org.archive.crawler.framework.exceptions.InitializationException\n&gt; * @throws javax.management.InvalidAttributeValueException\n&gt; */\n&gt; public void doOneCrawl()\n&gt; throws InitializationException, InvalidAttributeValueException {\n&gt;\n&gt; XMLSettingsHandler handler =\n&gt; new XMLSettingsHandler(this.orderfile);\n&gt; handler.initialize();\n&gt; controller = new CrawlController();\n&gt; try {\n&gt; controller.initialize(handler);\n&gt; } catch (InitializationException e) {\n&gt; throw new InitializationException(e);\n&gt; }\n&gt; controller.addCrawlStatusListener(new myCrawlStatusListener(this));\n&gt; controller.requestCrawlStart();\n&gt; this.crawlerRunning = true;\n&gt; }\n&gt;\n&gt; /**\n&gt; * Method returns running-status of the crawler\n&gt; *\n&gt; * @return running-status\n&gt; */\n&gt; public boolean isCrawlerRunning() {\n&gt; return this.crawlerRunning;\n&gt; }\n&gt;\n&gt; /**\n&gt; * Method returns pause-status of the crawler\n&gt; *\n&gt; * @return pause-status\n&gt; */\n&gt; public boolean isCrawlerPaused() {\n&gt; return this.crawlerPaused;\n&gt; }\n&gt; class myCrawlStatusListener implements CrawlStatusListener {\n&gt; /**\n&gt; * The Heritrix-launcher that uses this listener\n&gt; */\n&gt; private SimpleHeritrixLauncher hl;\n&gt;\n&gt; /**\n&gt; * Constructor\n&gt; *\n&gt; * @param hl a HeritrixLauncher\n&gt; */\n&gt; public myCrawlStatusListener(SimpleHeritrixLauncher hl) {\n&gt; this.hl = hl;\n&gt; }\n&gt;\n&gt; /**\n&gt; * Fired by the crawler when the crawl is about to end\n&gt; * (no reports writen yet....toe threads might still be running....)\n&gt; *\n&gt; * @param s Message to attach\n&gt; */\n&gt; public void crawlEnding(String s) {\n&gt; }\n&gt;\n&gt; /**\n&gt; * Fired by the crawler when the crawl is ended\n&gt; *\n&gt; * @param s Message to attach\n&gt; */\n&gt; public void crawlEnded(String s) {\n&gt; this.hl.crawlerRunning = false;\n&gt; this.hl.crawlerPaused = false;\n&gt; }\n&gt;\n&gt; /**\n&gt; * Fired by the crawler when the crawl is about to pause\n&gt; * (toe threads might still be running.....)\n&gt; *\n&gt; * @param s Message to attach\n&gt; */\n&gt; public void crawlPausing(String s) {\n&gt; }\n&gt;\n&gt; /**\n&gt; * Fired by the crawler when the crawl is paused\n&gt; *\n&gt; * @param s Message to attach\n&gt; */\n&gt; public void crawlPaused(String s) {\n&gt; this.hl.crawlerPaused = true;\n&gt; }\n&gt;\n&gt; /**\n&gt; * Fired by the crawler when the crawl is resuming\n&gt; *\n&gt; * @param s Message to attach\n&gt; */\n&gt; public void crawlResuming(String s) {\n&gt; this.hl.crawlerPaused = false;\n&gt; }\n&gt;\n&gt; @Override\n&gt; public void crawlCheckpoint(File arg0) throws Exception {\n&gt; // TODO Auto-generated method stub\n&gt; }\n&gt;\n&gt; @Override\n&gt; public void crawlStarted(String arg0) {\n&gt; // TODO Auto-generated method stub\n&gt; }\n&gt; }\n&gt; }\n&gt;\n&gt;\n&gt;\n&gt; \n\n"}}