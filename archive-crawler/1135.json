{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":194371199,"authorName":"bjhong02","from":"&quot;bjhong02&quot; &lt;bjhong02@...&gt;","profile":"bjhong02","replyTo":"LIST","senderId":"aMi8Zzll9QCCEOYZn-65jXNqUKRmh4m0YmLsx8vxFptdDX1AO3RgHJndZRyRNoPk0wE26Tpl9609EhF_vyIRNsZXd67MRw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: programming -- how HttpRecorder.ris is related to responseStream","postDate":"1099277952","msgId":1135,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNtNDhxMCs2aG9kQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGNtMTc2Zys2Z2I3QGVHcm91cHMuY29tPg=="},"prevInTopic":1134,"nextInTopic":0,"prevInTime":1134,"nextInTime":1136,"topicId":1119,"numMessagesInTopic":7,"msgSnippet":"... you ... file. ... add ... null  - + ... In debug processing, only one thread is used. After I comment out the sentences you metioned above, still get a ","rawEmail":"Return-Path: &lt;bjhong02@...&gt;\r\nX-Sender: bjhong02@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 22423 invoked from network); 1 Nov 2004 02:59:21 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m8.grp.scd.yahoo.com with QMQP; 1 Nov 2004 02:59:21 -0000\r\nReceived: from unknown (HELO n7a.bulk.scd.yahoo.com) (66.94.237.41)\n  by mta6.grp.scd.yahoo.com with SMTP; 1 Nov 2004 02:59:21 -0000\r\nReceived: from [66.218.69.2] by n7.bulk.scd.yahoo.com with NNFMP; 01 Nov 2004 02:59:18 -0000\r\nReceived: from [66.218.66.121] by mailer2.bulk.scd.yahoo.com with NNFMP; 01 Nov 2004 02:59:18 -0000\r\nDate: Mon, 01 Nov 2004 02:59:12 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;cm48q0+6hod@...&gt;\r\nIn-Reply-To: &lt;cm176g+6gb7@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 1671\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.94.237.41\r\nFrom: &quot;bjhong02&quot; &lt;bjhong02@...&gt;\r\nSubject: Re: programming -- how HttpRecorder.ris is related to responseStream\r\nX-Yahoo-Group-Post: member; u=194371199\r\nX-Yahoo-Profile: bjhong02\r\n\r\n\n&gt; Is Heritrix doing anything else at this time?  How many other\n&gt; fetches/threads are running concurrently?  If only one thread, do \nyou\n&gt; get the timeout?  \n&gt; \n&gt; RecordingInputStream#read records all read from the socket to a \nfile.\n&gt;  Maybe its this writing to a file that is taking a long time?  Try\n&gt; commenting out the recording in RecordingInputStream#read or maybe \nadd\n&gt; logging of how long its taking to complete ... especially if its\n&gt; taking seconds to write bytes:\n&gt; \n&gt;     public int read(byte[] b) throws IOException {\n&gt;     \t    if (!isOpen()) {\n&gt;     \t    \t    throw new IOException(&quot;Stream closed &quot; +\n&gt;     \t\t\t    Thread.currentThread().getName());\n&gt;     \t    }\n&gt;     \t    int count = this.in.read(b);\n&gt; -        if (count &gt; 0) {\n&gt; -            assert this.recordingOutputStream != null: &quot;ROS is \nnull &quot; - +\n&gt; -                Thread.currentThread().getName();\n&gt; -            this.recordingOutputStream.write(b,0,count);\n&gt; -        }\n&gt;         return count;\n&gt;     }\n&gt; \n&gt; Comment out the lines marked with &#39;-&#39; (this will break subsequent\n&gt; processing of the file) or perhaps rather add a:\n&gt; \n&gt; long startTime = System.currentMillis();\n&gt; \n&gt; before the call to write with a logger.warn after the write that\n&gt; reports how long the write took.\n&gt; \n&gt; This is an interesting issue.  It shouldn&#39;t be behaving this way.\n&gt; Thanks for looking into this,\n&gt; St.Ack\n&gt; \n\n\nIn debug processing, only one thread is used. \nAfter I comment out the sentences you metioned above, still get a \ntime-out(sotimeout=20s). The first execution of this.in.read(b) \nreturns 54 bytes (the length of robots.txt) quicklly. but the second \nexecution spend more than 40s (sotimeout=60s).\n\n\n\n\n\n\n"}}