{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":191387937,"authorName":"pandae667","from":"&quot;pandae667&quot; &lt;aaron667@...&gt;","profile":"pandae667","replyTo":"LIST","senderId":"7YJ8416iYtPwwnaTi7Xz6VPfPrFP232EH1mIeTFak9cd1OYaF7Ng-ClaIkDc49vc532HtZKOpiF4Kc93uKrvtR-5E-AE","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [HER-1103] feature request: implement skipHttpHeader/readHttpHeader for WARC","postDate":"1195071338","msgId":4684,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZoZmwxYStkODFtQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQ3M0IzQTBBLjUwNDA3QGFyY2hpdmUub3JnPg=="},"prevInTopic":4680,"nextInTopic":4687,"prevInTime":4683,"nextInTime":4685,"topicId":4677,"numMessagesInTopic":5,"msgSnippet":"... in 2.0. ... Hi Gordon, and thanks alot for taking the time to answer my question. The benefit I would like to see by the manager thread approach is seeing","rawEmail":"Return-Path: &lt;aaron667@...&gt;\r\nX-Sender: aaron667@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 69818 invoked from network); 14 Nov 2007 20:16:35 -0000\r\nX-Received: from unknown (66.218.66.70)\n  by m44.grp.scd.yahoo.com with QMQP; 14 Nov 2007 20:16:35 -0000\r\nX-Received: from unknown (HELO n47b.bullet.mail.sp1.yahoo.com) (66.163.168.161)\n  by mta12.grp.scd.yahoo.com with SMTP; 14 Nov 2007 20:16:27 -0000\r\nX-Received: from [216.252.122.218] by n47.bullet.mail.sp1.yahoo.com with NNFMP; 14 Nov 2007 20:15:44 -0000\r\nX-Received: from [66.218.69.4] by t3.bullet.sp1.yahoo.com with NNFMP; 14 Nov 2007 20:15:40 -0000\r\nX-Received: from [66.218.66.85] by t4.bullet.scd.yahoo.com with NNFMP; 14 Nov 2007 20:15:39 -0000\r\nDate: Wed, 14 Nov 2007 20:15:38 -0000\r\nTo: archive-crawler@yahoogroups.com\r\nMessage-ID: &lt;fhfl1a+d81m@...&gt;\r\nIn-Reply-To: &lt;473B3A0A.50407@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;pandae667&quot; &lt;aaron667@...&gt;\r\nSubject: Re: [HER-1103] feature request: implement skipHttpHeader/readHttpHeader for WARC\r\nX-Yahoo-Group-Post: member; u=191387937; y=YFciYi6Ypl5UDOrTgwZ_aE-fDNDjtiewfU_nYpYsxhS1ida0\r\nX-Yahoo-Profile: pandae667\r\n\r\n--- In archive-crawler@yahoogroups.com, Gordon Mohr &lt;gojomo@...&gt; wrote:\n&gt;\n&gt;=\r\n pandae667 wrote:\n&gt; &gt; A similar question is: are there any chances &quot;[HER-13=\r\n11] Prioritzation\n&gt; &gt; refactoring: implement single privileged Frontier man=\r\nager thread;\n&gt; &gt; mediation queues&quot; will be backported to 1.x? Or is it even=\r\n possible?\n&gt; &gt; (I might give it a try myself if you say it could be done wi=\r\nthin a\n&gt; &gt; reasonable timeframe.)\n&gt; \n&gt; We are unlikely to undertake the man=\r\nager-thread approach in 1.x. It&#39;s a \n&gt; significant change, and is motivated=\r\n by more the queue-juggling \n&gt; necessary for prioritization features that w=\r\nill only be implemented\nin 2.0.\n&gt; \n&gt; Is there a specific benefit you were h=\r\noping the manager-thread approach \n&gt; would bring you?\n&gt; \n&gt; You could try po=\r\nrting the approach back, but once 2.0 is available, it \n&gt; would be preferab=\r\nle that effort be directed at making it easy/safe to \n&gt; move from 1.x to 2.=\r\n0.\n&gt; \n&gt; - Gordon @ IA\n&gt;\n\nHi Gordon,\n\nand thanks alot for taking the time to=\r\n answer my question.\n\nThe benefit I would like to see by the manager thread=\r\n approach is\nseeing fewer threads being locked in:\n\n   ToeThread #195\n[ToeT=\r\nhread #195: http://www.someurl.com/somepage.html\n CrawlURI http://www.someu=\r\nrl.com/somepage.html LLL\nhttp://www.someurl.com/somepageother.html 0 attemp=\r\nts\n    in processor: Scheduler\n    ACTIVE for 5s346ms\n    step: ABOUT_TO_BE=\r\nGIN_PROCESSOR for 2s190ms\n   \norg.archive.crawler.postprocessor.FrontierSch=\r\neduler.innerProcess(FrontierScheduler.java:76)\n    org.archive.crawler.fram=\r\nework.Processor.process(Processor.java:112)\n   \norg.archive.crawler.framewo=\r\nrk.ToeThread.processCrawlUri(ToeThread.java:302)\n    org.archive.crawler.fr=\r\namework.ToeThread.run(ToeThread.java:151)\n\nI have 200 ToeThreads starting t=\r\nheir crawl with about 200000 seeds. At\nsome point in the crawl more and mor=\r\ne threads lock at this position\n(up to 20-25%) and it seems the code is qui=\r\nte suboptimal.\n\nIf I recall things correct from my mind right now (I don&#39;t =\r\nhave access\nto the code right now) that line of code is a global lock. Hitt=\r\ning\nthis point an URI starts to canonicalize all its retrieved OutLinks\nand=\r\n checks if they are in-scope. Afterwards all those links are put\ninto the c=\r\norrect queues. All this canonicalization and in-scope\ntesting is done/trigg=\r\nered by the Frontier. I were wondering if it\nwouldn&#39;t be a better approach =\r\nto do the canonicalization and in-scope\ntesting before locking all the othe=\r\nr threads that want to do the exact\nsame thing (which I think can be done w=\r\nithout touching any frontier\ninternals). Only when an URI starts to enqueue=\r\n its OutCandidates it\nmight/should be required to lock out the other thread=\r\ns.\n\nI might be wrong with my presumptions as I know and understand some of\n=\r\nHeritrixs internals - but for sure not yet all of them. My hope is/was\nthat=\r\n this manager thread approach might overcome this problem and\nspeed up craw=\r\nling.\n\n\nRegards\n  Olaf Freyer\n\n\n"}}