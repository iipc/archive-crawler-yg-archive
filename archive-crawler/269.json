{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":163922992,"authorName":"John Erik Halse","from":"John Erik Halse &lt;johnh@...&gt;","profile":"johnerikhalse","replyTo":"LIST","senderId":"gChmugTIbYHoLy56gXhBCn_1CdJVCyemqbc-GfFABWAq3P_dyLv90n6FH3VAWf1I9QAobjVbjcHHnrq66MdkikOLBZAHFfVj6ig","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Heritrix Checkpointing High-Level Design","postDate":"1075164526","msgId":269,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwNzUxNjQ1MjUuMjEzMjcuMjMuY2FtZWxAYjExNi1keW4tMzcuYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDQwMTVBRjIyLjgwN0BhcmNoaXZlLm9yZz4=","referencesHeader":"PDQwMERBMjRELjMwMjA0MDNAYXJjaGl2ZS5vcmc+IDw0MDEwODU2OS42MDYwMUBhcmNoaXZlLm9yZz4JIDw0MDExN0IyQi41MDQwMEBhcmNoaXZlLm9yZz4JIDwxMDc0ODkyNDQ4LjQwMTE4ZWEwM2VjZDFAbWFpbC1kZXYuYXJjaGl2ZS5vcmc+CSA8NDAxNTkxODMuNTA1MDAwNkBhcmNoaXZlLm9yZz4JIDwxMDc1MTU2MDM0LjQwMTU5NDQyYzJhMjlAbWFpbC1kZXYuYXJjaGl2ZS5vcmc+CSA8MTA3NTE2MDQyOC4yMTMyNy44LmNhbWVsQGIxMTYtZHluLTM3LmFyY2hpdmUub3JnPgkgPDQwMTVBRjIyLjgwN0BhcmNoaXZlLm9yZz4="},"prevInTopic":268,"nextInTopic":270,"prevInTime":268,"nextInTime":270,"topicId":244,"numMessagesInTopic":13,"msgSnippet":"... I agree that it would be awkward if every low-level class (eg. queues) should register themselves. I was thinking of the high-level modules. In particular","rawEmail":"Return-Path: &lt;johnh@...&gt;\r\nX-Sender: johnh@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 6993 invoked from network); 27 Jan 2004 00:52:44 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m6.grp.scd.yahoo.com with QMQP; 27 Jan 2004 00:52:44 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (209.237.232.202)\n  by mta5.grp.scd.yahoo.com with SMTP; 27 Jan 2004 00:52:44 -0000\r\nReceived: (qmail 4581 invoked by uid 100); 27 Jan 2004 00:50:20 -0000\r\nReceived: from b116-dyn-37.archive.org (johnh@...@209.237.240.37)\n  by mail-dev.archive.org with RC4-MD5 encrypted SMTP; 27 Jan 2004 00:50:20 -0000\r\nTo: archive-crawler &lt;archive-crawler@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;4015AF22.807@...&gt;\r\nReferences: &lt;400DA24D.3020403@...&gt; &lt;40108569.60601@...&gt;\n\t &lt;40117B2B.50400@...&gt;\n\t &lt;1074892448.40118ea03ecd1@...&gt;\n\t &lt;40159183.5050006@...&gt;\n\t &lt;1075156034.40159442c2a29@...&gt;\n\t &lt;1075160428.21327.8.camel@...&gt;\n\t &lt;4015AF22.807@...&gt;\r\nContent-Type: text/plain\r\nMessage-Id: &lt;1075164525.21327.23.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Ximian Evolution 1.4.5 \r\nDate: Mon, 26 Jan 2004 16:48:46 -0800\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=-5.7 required=6.0 tests=AWL,BAYES_00 autolearn=ham \n\tversion=2.63\r\nX-eGroups-Remote-IP: 209.237.232.202\r\nFrom: John Erik Halse &lt;johnh@...&gt;\r\nSubject: Re: [archive-crawler] Heritrix Checkpointing High-Level Design\r\nX-Yahoo-Group-Post: member; u=163922992\r\nX-Yahoo-Profile: johnerikhalse\r\n\r\nOn Mon, 2004-01-26 at 16:21, Gordon Mohr wrote:\n&gt; John Erik Halse wrote:\n&gt; &gt; On Mon, 2004-01-26 at 14:27, kris@... wrote:\n&gt; &gt;&gt;Quoting Gordon Mohr &lt;gojomo@...&gt;:\n&gt; \n&gt; &gt;&gt;&gt; &gt;&gt;The CrawlController (which implements Checkpointable) is sent the\n&gt; &gt;&gt;&gt; &gt;&gt;relevant messages. It propagates these to all components it\n&gt; &gt;&gt;&gt; &gt;&gt;believes needs checkpointing. Those may further propagate the\n&gt; &gt;&gt;&gt; &gt;&gt;messages. Any POJO can implement the interface, but that&#39;s no\n&gt; &gt;&gt;&gt; &gt;&gt;guarantee it will be called; there&#39;s got to be a chain of\n&gt; &gt;&gt;&gt; &gt;&gt;intentional calls from the CrawlController down.\n&gt; &gt;&gt;&gt; &gt;\n&gt; &gt;&gt;&gt; &gt; For consistency with existing code this should be done with the Event\n&gt; &gt;&gt;&gt;model.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;I&#39;m not sure; the checkpoint process will likely need to enforce a\n&gt; &gt;&gt;&gt;stronger sense of ordering than is typical when simply registering\n&gt; &gt;&gt;&gt;for a notification that an event (&quot;checkpoint begun&quot;, &quot;checkpoint\n&gt; &gt;&gt;&gt;ended&quot;) has occurred. A tighter coupling may be inevitable.\n&gt; &gt;&gt;\n&gt; &gt;&gt;Ok.\n&gt; &gt; \n&gt; &gt; I can&#39;t see that this couldn&#39;t be achieved with the event model. As far\n&gt; &gt; as I can see is the only difference that the modules register themselves\n&gt; &gt; for a checkpoint event instead of some mechanism that searches through\n&gt; &gt; memory for all objects implementing Checkpointable. In both scenarios a\n&gt; &gt; method will be called on the module notifying that it should do the\n&gt; &gt; checkpoint. Is there something I have missed here?\n&gt; \n&gt; In the model I propose, which I&#39;ll call &#39;hierarchical delegation&#39;, the\n&gt; flow of control is all explicit in the code, with each item, as it\n&gt; is checkpointed, ensuring that its constituent parts are checkpointed\n&gt; in the right order as well.\n&gt; \n&gt; There is no registration step, and at checkpoint time each object only\n&gt; iterates over its own member data objects, rather than any generic set\n&gt; of listeners/subscribers. There is no search for things that may optionally\n&gt; need to receive a message; rather, the type-contracts between objects\n&gt; ensure that anything in a certain role will get the Checkpointable\n&gt; calls, which they are free to ignore.\n&gt; \n&gt; So CrawlController.begin(...) looks something like:\n&gt; \n&gt;      order.begin(...);\n&gt;      frontier.begin(...);\n&gt;      for {Processor p : processors)\n&gt;        processor.begin(...);\n&gt; \n&gt; Methods commit() and (with the additional complications of possible\n&gt; instantiation) resume() are similar. The pattern recurs when (for example)\n&gt; the Frontier needs its constituent queues checkpointed, or the Order needs\n&gt; all parts of the per-settings-tree checkpointed.\n&gt; \n&gt; With an event-based approach, you&#39;d have the added step of many components\n&gt; registering themselves with their &quot;container&quot;. (But in some cases, as with\n&gt; the queues inside Frontier, I think you&#39;d still prefer explicit delegation\n&gt; because the constant registering/unregistering as queues come and go would\n&gt; be very awkward.) The order of checkpoint steps would depend on the order\n&gt; in which objects registered themselves, which would be under the control of\n&gt; many spread out code segments, and subject to alteration in data structures\n&gt; rather than code.\n&gt; \nI agree that it would be awkward if every low-level class (eg. queues)\nshould register themselves. I was thinking of the high-level modules. In\nparticular I think that the modules that is set in the order-file should\nregister themselves. If those are using lower-level classes that should\ntake care of checkpointing themselves, then it should be the\nresponsibility of the owner module to make that happen. The advantage\nwith this approach is that you don&#39;t have to handle those processors\nwhich implements InstancePerThread in a special way. Otherwise I suppose\nyou have to traverse every thread to find all processors which should be\ncheckpointed.\n\n- John\n\n&gt; - Gordon\n&gt; \n&gt;  \n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; To visit your group on the web, go to:\n&gt;  http://groups.yahoo.com/group/archive-crawler/\n&gt; \n&gt; To unsubscribe from this group, send an email to:\n&gt;  archive-crawler-unsubscribe@yahoogroups.com\n&gt; \n&gt; Your use of Yahoo! Groups is subject to:\n&gt;  http://docs.yahoo.com/info/terms/\n&gt; \n&gt; \n\n\n"}}