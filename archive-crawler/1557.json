{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"stack","from":"stack &lt;stack@...&gt;","profile":"stackarchiveorg","replyTo":"LIST","senderId":"zbLur6xh1vyjCz-V5IS5z0j-Sw_VFlsUG2hJiIwAIQQtWHeNX7TRf-UWu6l3daQp5GHIctlIXBjLTOdz35hT2g","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] RFE: New queue assignment policy","postDate":"1108415882","msgId":1557,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQyMTExNThBLjgwMjAyQGFyY2hpdmUub3JnPg==","inReplyToHeader":"PDIwMDUwMjE0MTQxNC41MDM0OS5jay1oZXJpdHJpeEBuZXdzY2x1Yi5kZT4=","referencesHeader":"PDIwMDUwMjE0MTQxNC41MDM0OS5jay1oZXJpdHJpeEBuZXdzY2x1Yi5kZT4="},"prevInTopic":1551,"nextInTopic":1558,"prevInTime":1556,"nextInTime":1558,"topicId":1545,"numMessagesInTopic":13,"msgSnippet":"Nice patch.  For the moment, I ve added the below to a new RFE, http://sourceforge.net/tracker/index.php?func=detail&aid=1122692&group_id=73833&atid=539102, ","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 50701 invoked from network); 14 Feb 2005 21:26:52 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m8.grp.scd.yahoo.com with QMQP; 14 Feb 2005 21:26:52 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (207.241.224.172)\n  by mta2.grp.scd.yahoo.com with SMTP; 14 Feb 2005 21:26:52 -0000\r\nReceived: (qmail 15903 invoked by uid 100); 14 Feb 2005 21:10:30 -0000\r\nReceived: from debord.archive.org (HELO ?207.241.238.140?) (stack@...@207.241.238.140)\n  by mail-dev.archive.org with SMTP; 14 Feb 2005 21:10:30 -0000\r\nMessage-ID: &lt;4211158A.80202@...&gt;\r\nDate: Mon, 14 Feb 2005 13:18:02 -0800\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.3) Gecko/20041007 Debian/1.7.3-5\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;200502141414.50349.ck-heritrix@...&gt;\r\nIn-Reply-To: &lt;200502141414.50349.ck-heritrix@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=0.7 required=6.5 tests=AWL autolearn=no version=2.63\r\nX-eGroups-Remote-IP: 207.241.224.172\r\nFrom: stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] RFE: New queue assignment policy\r\nX-Yahoo-Group-Post: member; u=168599281\r\nX-Yahoo-Profile: stackarchiveorg\r\n\r\nNice patch.  For the moment, I&#39;ve added the below to a new RFE, \nhttp://sourceforge.net/tracker/index.php?func=detail&aid=1122692&group_id=73833&atid=539102, \nbecause it&#39;ll need some time spent on it (Documentation and note in \nrelease notes that old order files will need to be updated).\nThanks,\nSt.Ack\n\n\n\nChristian Kohlschuetter wrote:\n\n&gt; Hi,\n&gt;\n&gt; here&#39;s another feature which I would like to contribute.\n&gt;\n&gt; Currently, I am performing broad crawls using BroadScope/BdbFrontier. \n&gt; However,\n&gt; due to the number of host- or IP-keyed queues, an OutOfMemoryError occurs\n&gt; very quickly after starting the crawl. One reason for this is the \n&gt; RAM-based\n&gt; bookkeeping of subqueues -- the more queues, the more heap.\n&gt;\n&gt; I have evaded this by writing a BucketQueueAssignmentPolicy class, which\n&gt; produces a _fixed_ number of subqueues (&quot;buckets&quot;), not one per host \n&gt; or per\n&gt; IP. The queue key is computed by hashing the hostname (or the IP, if\n&gt; available) modulo N (a fixed number, such as 1000).\n&gt;\n&gt; This way, I was able to increase the number of fetched pages from ca. \n&gt; 400,000\n&gt; to 1,000,000. For some other reason, I still get OOMEs, but I think \n&gt; that is\n&gt; caused by a different problem -- the number of queues did not grow \n&gt; over the\n&gt; specified limit.\n&gt;\n&gt; Furthermore, I have modified AbstractFrontier to be able to choose \n&gt; arbitrary\n&gt; queue assignment policies and replaced the current &quot;ip-politness&quot; \n&gt; option by a\n&gt; selectbox.\n&gt;\n&gt; The patch against CVS HEAD is attached.\n&gt;\n&gt; Greetings,\n&gt; -- \n&gt; Christian Kohlschï¿½tter\n&gt; mailto: ck -at- NewsClub.de\n&gt;\n&gt; *Yahoo! Groups Sponsor*\n&gt; ADVERTISEMENT\n&gt;\n&gt;\n&gt; ------------------------------------------------------------------------\n&gt; *Yahoo! Groups Links*\n&gt;\n&gt;     * To visit your group on the web, go to:\n&gt;       http://groups.yahoo.com/group/archive-crawler/\n&gt;        \n&gt;     * To unsubscribe from this group, send an email to:\n&gt;       archive-crawler-unsubscribe@yahoogroups.com\n&gt;       &lt;mailto:archive-crawler-unsubscribe@yahoogroups.com?subject=Unsubscribe&gt;\n&gt;        \n&gt;     * Your use of Yahoo! Groups is subject to the Yahoo! Terms of\n&gt;       Service &lt;http://docs.yahoo.com/info/terms/&gt;.\n&gt;\n&gt;\n&gt;------------------------------------------------------------------------\n&gt;\n&gt;Index: AbstractFrontier.java\n&gt;===================================================================\n&gt;RCS file: /cvsroot/archive-crawler/ArchiveOpenCrawler/src/java/org/archive/crawler/frontier/AbstractFrontier.java,v\n&gt;retrieving revision 1.25\n&gt;diff -u -r1.25 AbstractFrontier.java\n&gt;--- AbstractFrontier.java\t1 Feb 2005 18:05:42 -0000\t1.25\n&gt;+++ AbstractFrontier.java\t14 Feb 2005 12:57:29 -0000\n&gt;@@ -111,10 +111,13 @@\n&gt;     public final static String ATTR_MAX_RETRIES = &quot;max-retries&quot;;\n&gt;     protected final static Integer DEFAULT_MAX_RETRIES = new Integer(30);\n&gt; \n&gt;-    /** whether to reassign URIs to IP-address based queues when IP known */\n&gt;-    public final static String ATTR_IP_POLITENESS = &quot;ip-politeness&quot;;\n&gt;-    // TODO: change default to true once well-tested\n&gt;-    protected final static Boolean DEFAULT_IP_POLITENESS = new Boolean(false); \n&gt;+    public final static String ATTR_QUEUE_ASSIGNMENT_POLICY = &quot;queue-assignment-policy&quot;;\n&gt;+    private final static String[] AVAILABLE_QUEUE_ASSIGNMENT_POLICIES = new String[] {\n&gt;+        HostnameQueueAssignmentPolicy.class.getName(),\n&gt;+        IPQueueAssignmentPolicy.class.getName(),\n&gt;+        BucketQueueAssignmentPolicy.class.getName()\n&gt;+    };\n&gt;+    private final static String DEFAULT_QUEUE_ASSIGNMENT_POLICY = AVAILABLE_QUEUE_ASSIGNMENT_POLICIES[0];\n&gt; \n&gt;     /** queue assignment to force onto CrawlURIs; intended to be overridden */\n&gt;     public final static String ATTR_FORCE_QUEUE = &quot;force-queue-assignment&quot;;\n&gt;@@ -202,11 +205,9 @@\n&gt;             &quot;limitation.&quot;,\n&gt;             DEFAULT_MAX_HOST_BANDWIDTH_USAGE));\n&gt;         t.setExpertSetting(true);\n&gt;-        t = addElementToDefinition(new SimpleType(ATTR_IP_POLITENESS,\n&gt;-                &quot;Whether to assign URIs to IP-address based queues &quot;+\n&gt;-                &quot;when possible, to remain polite on a per-IP-address &quot;+\n&gt;-                &quot;basis.&quot;,\n&gt;-                DEFAULT_IP_POLITENESS));\n&gt;+        addElementToDefinition(new SimpleType(ATTR_QUEUE_ASSIGNMENT_POLICY,\n&gt;+            &quot;Defines how to assign URIs to queues.&quot;, DEFAULT_QUEUE_ASSIGNMENT_POLICY,\n&gt;+            AVAILABLE_QUEUE_ASSIGNMENT_POLICIES));\n&gt;         t.setExpertSetting(true);\n&gt;         t.setOverrideable(false);\n&gt;         t = addElementToDefinition(\n&gt;@@ -259,10 +260,16 @@\n&gt;             String logsPath = logsDisk.getAbsolutePath() + File.separatorChar;\n&gt;             this.recover = new RecoveryJournal(logsPath, LOGNAME_RECOVER);\n&gt;         }\n&gt;-        if(((Boolean)getUncheckedAttribute(null,ATTR_IP_POLITENESS)).booleanValue()) {\n&gt;-            queueAssignmentPolicy = new IPQueueAssignmentPolicy();\n&gt;-        } else {\n&gt;-            queueAssignmentPolicy = new HostnameQueueAssignmentPolicy();\n&gt;+        try {\n&gt;+            final Class qapClass = Class\n&gt;+                .forName((String) getUncheckedAttribute(null,\n&gt;+                    ATTR_QUEUE_ASSIGNMENT_POLICY));\n&gt;+\n&gt;+            queueAssignmentPolicy = (QueueAssignmentPolicy) qapClass\n&gt;+                .newInstance();\n&gt;+        } catch (Exception e) {\n&gt;+            logger.log(Level.SEVERE, &quot;Bad queue assignment policy class&quot;, e);\n&gt;+            throw new FatalConfigurationException(e.getMessage());\n&gt;         }\n&gt;     }\n&gt;     \n&gt;Index: BucketQueueAssignmentPolicy.java\n&gt;===================================================================\n&gt;RCS file: BucketQueueAssignmentPolicy.java\n&gt;diff -N BucketQueueAssignmentPolicy.java\n&gt;--- /dev/null\t1 Jan 1970 00:00:00 -0000\n&gt;+++ BucketQueueAssignmentPolicy.java\t1 Jan 1970 00:00:00 -0000\n&gt;@@ -0,0 +1,30 @@\n&gt;+package org.archive.crawler.frontier;\n&gt;+\n&gt;+import org.archive.crawler.datamodel.CrawlHost;\n&gt;+import org.archive.crawler.datamodel.CrawlURI;\n&gt;+import org.archive.crawler.framework.CrawlController;\n&gt;+\n&gt;+/**\n&gt;+* Uses the target IPs as basis for queue-assignment,\n&gt;+* distributing them over a fixed number of sub-queues.\n&gt;+* \n&gt;+* @author Christian Kohlschuetter\n&gt;+*/\n&gt;+public class BucketQueueAssignmentPolicy extends HostnameQueueAssignmentPolicy {\n&gt;+   private static final int DEFAULT_QUEUES_NOIP = 1000;\n&gt;+   private static final int DEFAULT_QUEUES_HOSTS = 1000;\n&gt;+\n&gt;+   public String getClassKey(CrawlController controller, CrawlURI curi) {\n&gt;+       CrawlHost host = controller.getServerCache().getHostFor(curi);\n&gt;+       if(host == null) {\n&gt;+           return &quot;NO-HOST&quot;;\n&gt;+       } else if(host.getIP() == null) {\n&gt;+           return &quot;NO-IP-&quot;.concat(Integer.toString(Math.abs(host.getHostName()\n&gt;+               .hashCode())\n&gt;+               % DEFAULT_QUEUES_NOIP));\n&gt;+       } else {\n&gt;+           return Integer.toString(Math.abs(host.getIP().hashCode())\n&gt;+           % DEFAULT_QUEUES_HOSTS);\n&gt;+       }\n&gt;+   }\n&gt;+}\n&gt;  \n&gt;\n\n\n"}}