{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137477665,"authorName":"Igor Ranitovic","from":"Igor Ranitovic &lt;igor@...&gt;","profile":"iranitovic","replyTo":"LIST","senderId":"xi_3rcZlgVYHi6e33MOGI7zhT2_eNz8VlhZOINuqjsc1mIWy7kFyrav8qXyCHS2EAbbvoNj_73QvZWiB8Xi9Ek3EWVXEZCcP","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Re: Questions on ARC file format","postDate":"1101241389","msgId":1221,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxQTM5QzJELjcwNTAyMDNAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PGNudmxpNisxMDNiYUBlR3JvdXBzLmNvbT4=","referencesHeader":"PGNudmxpNisxMDNiYUBlR3JvdXBzLmNvbT4="},"prevInTopic":1220,"nextInTopic":0,"prevInTime":1220,"nextInTime":1222,"topicId":1215,"numMessagesInTopic":7,"msgSnippet":"You can use ARC files as random access files where you can easily retrieve an record given its ARC offset. So, yes you can use perl to parse ARC files. For a","rawEmail":"Return-Path: &lt;igor@...&gt;\r\nX-Sender: igor@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 66962 invoked from network); 23 Nov 2004 20:29:09 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m15.grp.scd.yahoo.com with QMQP; 23 Nov 2004 20:29:09 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (207.241.224.172)\n  by mta5.grp.scd.yahoo.com with SMTP; 23 Nov 2004 20:29:08 -0000\r\nReceived: (qmail 19918 invoked by uid 100); 23 Nov 2004 20:16:08 -0000\r\nReceived: from pauk.archive.org (HELO ?207.241.238.153?) (igor@...@207.241.238.153)\n  by mail-dev.archive.org with SMTP; 23 Nov 2004 20:16:08 -0000\r\nMessage-ID: &lt;41A39C2D.7050203@...&gt;\r\nDate: Tue, 23 Nov 2004 12:23:09 -0800\r\nUser-Agent: Mozilla Thunderbird 0.7.3 (Windows/20040803)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;cnvli6+103ba@...&gt;\r\nIn-Reply-To: &lt;cnvli6+103ba@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=0.2 required=6.5 tests=AWL,HTML_MESSAGE autolearn=no \n\tversion=2.63\r\nX-eGroups-Remote-IP: 207.241.224.172\r\nFrom: Igor Ranitovic &lt;igor@...&gt;\r\nSubject: Re: [archive-crawler] Re: Questions on ARC file format\r\nX-Yahoo-Group-Post: member; u=137477665\r\nX-Yahoo-Profile: iranitovic\r\n\r\nYou can use ARC files as random access files where you can easily retrieve an record given its ARC \noffset.\nSo, yes you can use perl to parse ARC files.\n\nFor a compress arc file and a record offset you do something like:\n\n     ....\n     open(ARCFILE, &quot;&lt;$arcfile&quot;)\n\tor die &quot;Couldn&#39;t open file $arcfile for reading: ($!)&#92;n&quot;;\n     seek(ARCFILE, $offset, 0)\n\tor die &quot;Couldn&#39;t seek to $offset: ($!)&#92;n&quot;;\n\n    my $x = inflateInit(-WindowBits =&gt; -15)\n\tor die &quot;Cannot create a gzip inflation stream&#92;n&quot;;\n\n     my $input;\n     my $output;\n     my $status;\n     my $doneWithHttpHeaders = 0;\n\n     # reg. pattern for CRLF and LFLF for both Windows and Mac\n     my $regexp = &quot;(.*&#92;&#92;r&#92;&#92;n&#92;&#92;r&#92;&#92;n|&#92;x0D&#92;n&#92;x0D&#92;n|&#92;&#92;n&#92;&#92;n)(.+)&quot;;\n\n     while (read(ARCFILE, $input, 4096)) {\n         if (! $doneWithHttpHeaders) {\n             my $len = getHeaderLength($input);\n             $input = substr($input, $len);\n             ($output, $status) = $x-&gt;inflate(&#92;$input);\n             if ($output =~ /$regexp/s){\n                 print HTTP $1 if $1 and ($status == Z_OK or $status == Z_STREAM_END);\n                 print FILE $2 if $2 and ($status == Z_OK or $status == Z_STREAM_END);\n                 $doneWithHttpHeaders = 1;\n             } else {\n                 print HTTP $output if $status == Z_OK or $status == Z_STREAM_END;\n             }\n             last if $status != Z_OK;\n\n         } else {\n             ($output, $status) = $x-&gt;inflate(&#92;$input);\n             print FILE $output if $status == Z_OK or $status == Z_STREAM_END;\n             last if $status != Z_OK;\n         }\n     }\n\n     warn &quot;inflation failed&#92;n&quot; unless $status == Z_STREAM_END;\n\n\nsub getHeaderLength {\n     my $header = shift;\n\n     my @headerbits = unpack(&quot;C256&quot;, $header);\n\n     my $len = 10;\n     if ($headerbits[3] & 4) {\n         $len += $headerbits[$len] + (headerbits[$len + 1] &lt;&lt; 8) + 2;\n     }\n     if ($headerbits[3] & 8) {\n         while ($headerbits[$len]){\n\t  ++$len;\n\t}\n         ++$len;\n     }\n     if ($headerbits[3] & 16) {\n         while ($headerbits[$len]){\n\t  ++$len;\n\t}\n         ++$len;\n     }\n     if ($headerbits[3] & 2) {\n         $len += 2;\n     }\n     return $len;\n}\n\nThis dirty perl code will separte http headers and conetent and dump them to two separte files.\nHope this helps.\n\ni.\n\n\n&gt; Actually I&#39;m parsing it myself at the moment after trying your\n&gt; proposed solutions....\n&gt; Perl is my language and I don&#39;t think I can do it without Perl - I&#39;m\n&gt; sure you understand what I mean... :-)\n&gt; \n&gt; I extracted everything between &lt;html&gt; and &lt;/html&gt; off the ARC file\n&gt; discarding everything else...\n&gt; \n&gt; After that I assigned an HTML::TreeBuilder object to it and now I can\n&gt; move around the HTML::Elements and do whatever I want..\n&gt; \n&gt; I think I&#39;ll stay this way...\n&gt; Anyway thanks...\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt;  \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n&gt;  \n&gt; \n&gt; \n&gt; \n\n\n"}}