{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":112974261,"authorName":"Mathew Nik Foscarini","from":"Mathew Nik Foscarini &lt;nfoscarini@...&gt;","profile":"nfoscarini","replyTo":"LIST","senderId":"6xB7WI3IUkXdJKB_B3rSjTaS8DqI2a216FFvtsRu4sKykP6aAfCEPu_hXWWCu-UKYp2ng_VJ2ARXf-nChb8ZKX5ZnmJeZzrVRVzhEPdwDrwbaA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [archive-crawler] Question about ArchiveReader Iterator","postDate":"1197044704","msgId":4778,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDgwMDcyNi4xMzMwOS5xbUB3ZWI1NDYwMy5tYWlsLnJlMi55YWhvby5jb20+","inReplyToHeader":"PDQ3NTk2REZELjIwODAxMDZAZ214LmRlPg=="},"prevInTopic":4777,"nextInTopic":4780,"prevInTime":4777,"nextInTime":4779,"topicId":4763,"numMessagesInTopic":7,"msgSnippet":"That does sound like a bug to me. A work around would be to create a wrapper iterator class, and pass the ArchiveReader iterator to that class s constructor.","rawEmail":"Return-Path: &lt;nfoscarini@...&gt;\r\nX-Sender: nfoscarini@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nX-Received: (qmail 93761 invoked from network); 7 Dec 2007 16:25:05 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m36.grp.scd.yahoo.com with QMQP; 7 Dec 2007 16:25:05 -0000\r\nX-Received: from unknown (HELO web54603.mail.re2.yahoo.com) (206.190.49.173)\n  by mta16.grp.scd.yahoo.com with SMTP; 7 Dec 2007 16:25:05 -0000\r\nX-Received: (qmail 14017 invoked by uid 60001); 7 Dec 2007 16:25:04 -0000\r\nX-YMail-OSG: EoF.740VM1lZWBE00Xa4onhvRePVcxr8899Zzs759OxLxHZVLrWG0KwKqik_S4lTr8pO2yuWiwXMo3ipogmyWwHrLznqZYszdT8iEfziBGo50L2IV6WqcYEskEOQ9HjEd5X6a14Ug.c1GtDU3j4Vbj3VbA--\r\nX-Received: from [38.99.150.66] by web54603.mail.re2.yahoo.com via HTTP; Fri, 07 Dec 2007 08:25:04 PST\r\nDate: Fri, 7 Dec 2007 08:25:04 -0800 (PST)\r\nTo: archive-crawler@yahoogroups.com\r\nIn-Reply-To: &lt;47596DFD.2080106@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-883938760-1197044704=:13309&quot;\r\nContent-Transfer-Encoding: 8bit\r\nMessage-ID: &lt;800726.13309.qm@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Mathew Nik Foscarini &lt;nfoscarini@...&gt;\r\nReply-To: nfoscarini@...\r\nSubject: Re: [archive-crawler] Question about ArchiveReader Iterator\r\nX-Yahoo-Group-Post: member; u=112974261; y=xxF8SSl3RdtUZXytGatlvjOJQSqRjashefjuNRBagY0H_uJ4kA\r\nX-Yahoo-Profile: nfoscarini\r\n\r\n\r\n--0-883938760-1197044704=:13309\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: 8bit\r\n\r\nThat does sound like a bug to me.\n\nA work around would be to create a wrapper iterator class, and pass the ArchiveReader iterator to that class&#39;s constructor. Then check if hasNext has been called more then once for each next().\n\nOr, see if you can fix the ArchiveReader iterator and share the code. :-)\n\nChristoph Buescher &lt;sterntaufe@...&gt; wrote:exactly in this order and always one after each other. This, however,\nseems to be a very strict constraint for a standard Java-Iterator.  The\nproblem arises because I don&#39;t want to load all the records right away,\nbut let out processing pipeline request new records from an ArcReader\nwhen it needs one. In our scenario we can&#39;t assure that the client using\nthe ArcReader is well-behaved and always gets the next record after\nright after calling &quot;next()&quot;. It might just want to know several times\nif there is something left to process and then get the record some time\nlater...\n\n       \n---------------------------------\nBe a better friend, newshound, and know-it-all with Yahoo! Mobile.  Try it now.\r\n--0-883938760-1197044704=:13309\r\nContent-Type: text/html; charset=iso-8859-1\r\nContent-Transfer-Encoding: 8bit\r\n\r\nThat does sound like a bug to me.&lt;br&gt;&lt;br&gt;A work around would be to create a wrapper iterator class, and pass the ArchiveReader iterator to that class&#39;s constructor. Then check if hasNext has been called more then once for each next().&lt;br&gt;&lt;br&gt;Or, see if you can fix the ArchiveReader iterator and share the code. :-)&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;i&gt;Christoph Buescher &lt;sterntaufe@...&gt;&lt;/i&gt;&lt;/b&gt; wrote:&lt;blockquote class=&quot;replbq&quot; style=&quot;border-left: 2px solid rgb(16, 16, 255); margin-left: 5px; padding-left: 5px;&quot;&gt;exactly in this order and always one after each other. This, however,&lt;br&gt;seems to be a very strict constraint for a standard Java-Iterator.  The&lt;br&gt;problem arises because I don&#39;t want to load all the records right away,&lt;br&gt;but let out processing pipeline request new records from an ArcReader&lt;br&gt;when it needs one. In our scenario we can&#39;t assure that the client using&lt;br&gt;the ArcReader is well-behaved and always gets the next record after&lt;br&gt;right after calling &quot;next()&quot;. It might just\n want to know several times&lt;br&gt;if there is something left to process and then get the record some time&lt;br&gt;later...&lt;br&gt;&lt;/blockquote&gt;&lt;p&gt;&#32;\n      &lt;hr size=1&gt;Be a better friend, newshound, and \nknow-it-all with Yahoo! Mobile. &lt;a href=&quot;http://us.rd.yahoo.com/evt=51733/*http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ &quot;&gt; Try it now.&lt;/a&gt;\r\n--0-883938760-1197044704=:13309--\r\n\n"}}