{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":95697582,"authorName":"G.B.Reddy","from":"&quot;G.B.Reddy&quot; &lt;reddy@...&gt;","profile":"gbreddysoft","replyTo":"LIST","senderId":"ZgvkLhVgb8iT_pLXiBbq50QOmcy4k3TIJ0S_fo2ZWkYjvGuw8vEaRz8QWR35TUw-TKj7U3jPb7j7Ed-cBmZfWeBH4w2V_yZ-eb2-o3E","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Design thoughts: a single worker thread","postDate":"1045072041","msgId":3,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJlZWMwMWMyZDJiZSRjYjFiYzg1MCRkNTAwYThjMEBSZWRkeUdCPg=="},"prevInTopic":0,"nextInTopic":4,"prevInTime":2,"nextInTime":4,"topicId":3,"numMessagesInTopic":2,"msgSnippet":"Gordon, I assume that the worker thread is doing synchronous I/O. We are not sure yet on what mode we have finalized, synchronous I/O or asynchronous I/O ? The","rawEmail":"Return-Path: &lt;reddy@...&gt;\r\nX-Sender: reddy@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_4); 12 Feb 2003 17:45:24 -0000\r\nReceived: (qmail 14353 invoked from network); 12 Feb 2003 17:45:19 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m10.grp.scd.yahoo.com with QMQP; 12 Feb 2003 17:45:19 -0000\r\nReceived: from unknown (HELO pub.isofttechindia.com) (203.199.202.17)\n  by mta1.grp.scd.yahoo.com with SMTP; 12 Feb 2003 17:45:17 -0000\r\nReceived: from ReddyGB (ReddyGB.isofttechindia.com [192.168.0.213])\n\tby pub.isofttechindia.com (8.11.0/8.11.0) with SMTP id h1CHN5608881;\n\tWed, 12 Feb 2003 22:53:05 +0530\r\nMessage-ID: &lt;2eec01c2d2be$cb1bc850$d500a8c0@ReddyGB&gt;\r\nTo: &lt;archive-crawler@yahoogroups.com&gt;\r\nCc: &quot;Raymie Stata&quot; &lt;rstata@...&gt;\r\nSubject: Re: [archive-crawler] Design thoughts: a single worker thread\r\nDate: Wed, 12 Feb 2003 23:17:21 +0530\r\nOrganization: ISoftTech\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_2EE9_01C2D2EC.E4CADC90&quot;\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4920.2300\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4920.2300\r\nX-eGroups-From: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nFrom: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nReply-To: &quot;G.B.Reddy&quot; &lt;reddy@...&gt;\r\nX-Yahoo-Group-Post: member; u=95697582\r\nX-Yahoo-Profile: gbreddysoft\r\n\r\n\r\n------=_NextPart_000_2EE9_01C2D2EC.E4CADC90\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nGordon,\n\nI assume that the worker thread is doing synchronous I/O. We are n=\r\not sure yet on what mode we have finalized, synchronous I/O or asynchronous=\r\n I/O ?\n\nThe following views are based on the belief that we are following t=\r\nhe Mercator design at the higher level.\n\n[Gordon] - Things like robots.txt =\r\nor politeness could be handled in a very-smart &#39;frontier&#39; object, or as one=\r\n or more &#39;preprocessors&#39; which occasionally veto/snooze offered URIs, pushi=\r\nng them back to the frontier for later processing\n[Reddy] - We feel that po=\r\nliteness cannot be handled in the preprocessing modules since preprocessing=\r\n works on a single candidateURI at a time. It is the frontier which has to =\r\ndo this work much like what is done in Mercator. Mercator&#39;s frontier mainta=\r\nins one queue per worker thread based on the hostnames and the politeness f=\r\nactor.\n\n[Gordon] - In this outline, the frontier object does a lot: it&#39;s th=\r\ne URI-seen database, the URI-fetched database, the URI-prioritization polic=\r\ny, etc. etc. Could/should it be further decomposed ?\n[Reddy] - We think it =\r\nshould definitely be decomposed. URI-seen and URI-fetched databases will be=\r\n simple but URI-prioritization will be a complex thing to handle.\n\n[Gordon]=\r\n - Where do DNS lookups take place, and how much of an audit trail is gener=\r\nated? One possibility is that there is a &quot;DNS frontier&quot; just like the URI f=\r\nrontier. A Preprocessor module only crawls a URI if its domain name has alr=\r\neady been (recently) resolved; if not, it starts a DNS lookup, and &quot;snoozes=\r\n&quot; the URI for enough time that the name will probably have resolved by the =\r\ntime the URI again is considered.\n[Reddy] - DNS resolver would be a separat=\r\ne synchronous thread with its own expiration logic for the entries in the c=\r\nache. So, it is agreed that the Preprocessor would snooze the crawl if the =\r\nhostname is not yet resolved. But when it is reconsidered after resolution =\r\nis done, where would we place the URI in the queue ? It would have to be ba=\r\nsed on prioritization again.\n\n\nOther questions :\n\n- We are not sure of the =\r\nrole of postProcessing. What would be the kind of jobs done here in sequenc=\r\ne ?\n- When would we revisit the rejected ( based on politeness policy ) URI=\r\ns ? I assume that these URIs would be retrieved from the database at a late=\r\nr point of time and re-scheduled based on the prioritization policy.\n\nCan w=\r\ne have a brief chat on this tomorrow morning 9 am IST. If not please let us=\r\n know a suitable timing. We would reach better understanding if we discuss.=\r\n\n\nThanks,\nReddy\n\n\n  ----- Original Message ----- \n  From: Gordon Mohr \n  To=\r\n: archive-crawler@yahoogroups.com \n  Sent: Tuesday, February 11, 2003 12:48=\r\n AM\n  Subject: [archive-crawler] Design thoughts: a single worker thread\n\n\n=\r\n  I&#39;ve been looking at what crawlers have typically done, and \n  considerin=\r\ng what we&#39;d like the new crawler to do. \n\n  The following general outline -=\r\n- in roughly valid Java --\n  represents my current thoughts on the general =\r\noepration\n  of a single crawler worker thread:\n  {\n     setup(); // read pa=\r\nrameters, populate submodules, etc.\n\n     while ( shouldProceed() ) {\n\n    =\r\n   candidateURI =3D frontier.nextUri(this);\n\n       preprocess(candidateURI=\r\n); // hands to each &quot;Preprocessor&quot;\n                                 // modu=\r\nle in sequence; each\n                                 // may cancel (or def=\r\ner) further\n                                 // processing, or decorate the=\r\n\n                                 // CandidateURI object with\n             =\r\n                    // attributes which affect \n                           =\r\n      // further processing. By convention,\n                               =\r\n  // &quot;preprocessing&quot; only uses &#39;local&#39;\n                                 // =\r\nresources -- eg no internet \n                                 // latencies\n=\r\n\n       if ( candidateURI.shouldProcess() ) {\n     \n         process(candid=\r\nateURI); // an attempt is made to resolve\n                                 =\r\n  the resource in the URI-appropriate\n                                   fa=\r\nshion. Zero or more &quot;Coprocessor&quot;\n                                   object=\r\ns may be fed the data as it\n                                   arriving, in=\r\n parallel. As end result,\n                                   candidateURI i=\r\ns decorated with \n                                   sufficient info for la=\r\nter modules\n                                   to get details/content of fe=\r\ntch\n\n         postprocess(candidateURI); // hands to each &quot;Postprocessor&quot;\n =\r\n                                   // module (AKA &quot;Analyzer&quot;) in \n         =\r\n                           // sequence\n       }\n\n       frontier.inform(can=\r\ndidateURI); // let frontier know what happened\n\n       update(); // update =\r\ninternal state, perhaps recognizing\n                    outside stop/checkp=\r\noint request\n     } \n\n     shutdown(); // clean up\n  }\n\n\n  Some notes:\n\n  -=\r\n CandidateURI is a URI *and* an arbitrary amount of other\n    annotation, w=\r\nhich may come from the frontier or be added/\n    changed by any module to a=\r\nffect the processing by subsequent\n    modules\n\n  - Things like robots.txt =\r\nor politeness could be handled in a\n    very-smart &#39;frontier&#39; object, or as=\r\n one or more &#39;preprocessors&#39;\n    which occasionally veto/snooze offered URI=\r\ns, pushing them\n    back to the frontier for later processing\n\n  Open quest=\r\nions:\n\n  - In this outline, the frontier object does a lot: it&#39;s the\n    UR=\r\nI-seen database, the URI-fetched database, the \n    URI-prioritization poli=\r\ncy, etc. etc. Could/should it be\n    further decomposed?\n\n  - Where do DNS =\r\nlookups take place, and how much of an audit\n    trail is generated? One po=\r\nssibility is that there is a \n    &quot;DNS frontier&quot; just like the URI frontier=\r\n. A Preprocessor\n    module only crawls a URI if its domain name has alread=\r\ny\n    been (recently) resolved; if not, it starts a DNS lookup,\n    and &quot;sn=\r\noozes&quot; the URI for enough time that the name will\n    probably have resolve=\r\nd by the time the URI again is considered.\n\n  Reactions?\n\n  - Gordon\n\n\n\n  T=\r\no unsubscribe from this group, send an email to:\n  archive-crawler-unsubscr=\r\nibe@yahoogroups.com\n\n\n\n  Your use of Yahoo! Groups is subject to the Yahoo!=\r\n Terms of Service. \n\n\r\n------=_NextPart_000_2EE9_01C2D2EC.E4CADC90\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 5.50.4134.600&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;&lt;/STYLE&gt;=\r\n\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Gordon,&lt;=\r\n/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FON=\r\nT face=3DArial size=3D2&gt;I assume that the worker thread is doing \nsynchrono=\r\nus I/O. We are not sure yet on what mode we have&nbsp;finalized, \nsynchrono=\r\nus I/O or asynchronous I/O ?&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;=\r\n&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;The following views ar=\r\ne based&nbsp;on the belief \nthat we are following the Mercator design at th=\r\ne higher level.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;=\r\n&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;EM&gt;[Gordon] - Things like robots.t=\r\nxt or politeness \ncould be handled in a&nbsp;very-smart &#39;frontier&#39; object, =\r\nor as one or more \n&#39;preprocessors&#39; which occasionally veto/snooze offered U=\r\nRIs, pushing them back \nto the frontier for later processing&lt;/EM&gt;&lt;/FONT&gt;&lt;/D=\r\nIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;[Reddy] - We feel that politeness cann=\r\not be handled \nin the preprocessing modules since preprocessing works on a =\r\nsingle candidateURI \nat a time. It is the frontier which has to do this wor=\r\nk much like what is done \nin Mercator. Mercator&#39;s frontier&nbsp;maintains o=\r\nne queue per worker thread \nbased on the hostnames and the politeness facto=\r\nr.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;=\r\nFONT face=3DArial size=3D2&gt;&lt;EM&gt;[Gordon] - In this outline, the frontier obj=\r\nect \ndoes a lot: it&#39;s the URI-seen database, the URI-fetched database, \nthe=\r\n&nbsp;URI-prioritization policy, etc. etc. Could/should it be further \ndeco=\r\nmposed ?&lt;BR&gt;&lt;/EM&gt;[Reddy] -&nbsp;We think it should definitely be decomposed=\r\n. \nURI-seen and URI-fetched databases will be simple but URI-prioritization=\r\n will be \na complex thing to handle.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial s=\r\nize=3D2&gt;&lt;BR&gt;&lt;EM&gt;[Gordon] -&nbsp;Where do DNS lookups take \nplace, and how m=\r\nuch of an audit trail is generated? One possibility is that \nthere is a&nbs=\r\np;&quot;DNS frontier&quot; just like the URI frontier. A Preprocessor module \nonly cr=\r\nawls a URI if its domain name has already been (recently) resolved; if \nnot=\r\n, it starts a DNS lookup, and &quot;snoozes&quot; the URI for enough time that the na=\r\nme \nwill probably have resolved by the time the URI again is \nconsidered.&lt;B=\r\nR&gt;&lt;/EM&gt;[Reddy] - DNS resolver would be&nbsp;a separate synchronous \nthread =\r\nwith its own expiration logic&nbsp;for the entries in the cache. So, it \nis=\r\n agreed that the Preprocessor would snooze the crawl if the hostname is not=\r\n \nyet resolved. But when it is reconsidered after resolution is done, where=\r\n would \nwe place the URI in the queue ? It would have to be based on priori=\r\ntization \nagain.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&lt;/DIV&gt;=\r\n&lt;/FONT&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT fac=\r\ne=3DArial size=3D2&gt;Other questions :&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial s=\r\nize=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- We are not s=\r\nure of the role of postProcessing. \nWhat would be the kind of jobs done her=\r\ne in sequence ?&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;- When would =\r\nwe revisit the rejected ( based on \npoliteness policy ) URIs ? I assume tha=\r\nt these URIs would be retrieved from the \ndatabase at a later point of time=\r\n&nbsp;and re-scheduled based on the \nprioritization policy.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;D=\r\nIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial =\r\nsize=3D2&gt;Can we have a brief chat on this tomorrow morning 9 \nam IST. If no=\r\nt please let us know a suitable timing. We would reach better \nunderstandin=\r\ng if we discuss.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp=\r\n;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Thanks,&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT fa=\r\nce=3DArial size=3D2&gt;Reddy&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/F=\r\nONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;BLOC=\r\nKQUOTE \nstyle=3D&quot;PADDING-RIGHT: 0px; PADDING-LEFT: 5px; MARGIN-LEFT: 5px; B=\r\nORDER-LEFT: #000000 2px solid; MARGIN-RIGHT: 0px&quot;&gt;\n  &lt;DIV style=3D&quot;FONT: 10=\r\npt arial&quot;&gt;----- Original Message ----- &lt;/DIV&gt;\n  &lt;DIV \n  style=3D&quot;BACKGROUND=\r\n: #e4e4e4; FONT: 10pt arial; font-color: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; \n  &lt;A title=3D=\r\ngojomo@... href=3D&quot;mailto:gojomo@...&quot;&gt;Gordon Mohr&lt;/A&gt; \n  &lt;/=\r\nDIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A \n  title=3Darchive-cra=\r\nwler@yahoogroups.com \n  href=3D&quot;mailto:archive-crawler@yahoogroups.com&quot;&gt;arc=\r\nhive-crawler@yahoogroups.com&lt;/A&gt; \n  &lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial=\r\n&quot;&gt;&lt;B&gt;Sent:&lt;/B&gt; Tuesday, February 11, 2003 12:48 \n  AM&lt;/DIV&gt;\n  &lt;DIV style=3D=\r\n&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Subject:&lt;/B&gt; [archive-crawler] Design \n  thoughts: a =\r\nsingle worker thread&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT =\r\nface=3DArial \n  size=3D2&gt;&lt;/FONT&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;TT&gt;I&#39;ve been looking at what cra=\r\nwlers have typically \n  done, and &lt;BR&gt;considering what we&#39;d like the new cr=\r\nawler to do. &lt;BR&gt;&lt;BR&gt;The \n  following general outline -- in roughly valid J=\r\nava --&lt;BR&gt;represents my current \n  thoughts on the general oepration&lt;BR&gt;of =\r\na single crawler worker \n  thread:&lt;BR&gt;{&lt;BR&gt;&nbsp;&nbsp; setup(); // read pa=\r\nrameters, populate submodules, \n  etc.&lt;BR&gt;&lt;BR&gt;&nbsp;&nbsp; while ( shouldPr=\r\noceed() ) \n  {&lt;BR&gt;&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; candidateURI =3D \n  frontier=\r\n.nextUri(this);&lt;BR&gt;&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; \n  preprocess(candidateURI)=\r\n; // hands to each \n  &quot;Preprocessor&quot;&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  /=\r\n/ module in sequence; \n  each&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // may c=\r\nancel (or defer) \n  further&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // process=\r\ning, or decorate \n  the&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // CandidateUR=\r\nI object \n  with&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // attributes which a=\r\nffect \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // further processing. By \n =\r\n convention,&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // &quot;preprocessing&quot; only u=\r\nses \n  &#39;local&#39;&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // resources -- eg no i=\r\nnternet \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // latencies&lt;BR&gt;&lt;BR&gt;&nbsp;=\r\n&nbsp;&nbsp;&nbsp; if ( candidateURI.shouldProcess() \n  ) {&lt;BR&gt;&nbsp;&nbsp;=\r\n &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  process(candidateURI); // an a=\r\nttempt is made to \n  resolve&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =\r\n\n  the resource in the \n  URI-appropriate&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp; \n  fashion. Zero or more \n  &quot;Coprocessor&quot;&lt;BR&gt;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp; \n  objects may be fed the data as \n  it&lt;BR&gt;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  arriving, in parallel. As end \n  re=\r\nsult,&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  candidateURI is deco=\r\nrated with \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  sufficient =\r\ninfo for later \n  modules&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  =\r\nto get details/content of fetch&lt;BR&gt;&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n \n  postprocess(candidateURI); // hands to each \n  &quot;Postprocessor&quot;&lt;BR&gt;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // module (AKA &quot;Analyzer&quot;) i=\r\nn \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  // sequence&lt;BR=\r\n&gt;&nbsp;&nbsp;&nbsp;&nbsp; }&lt;BR&gt;&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; \n  frontier.inf=\r\norm(candidateURI); // let frontier know what \n  happened&lt;BR&gt;&lt;BR&gt;&nbsp;&nbsp=\r\n;&nbsp;&nbsp; update(); // update internal state, \n  perhaps \n  recognizing=\r\n&lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  outside stop/checkpoint request&lt;BR&gt;&nbsp=\r\n;&nbsp; } &lt;BR&gt;&lt;BR&gt;&nbsp;&nbsp; \n  shutdown(); // clean up&lt;BR&gt;}&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;S=\r\nome notes:&lt;BR&gt;&lt;BR&gt;- CandidateURI is a \n  URI *and* an arbitrary amount of o=\r\nther&lt;BR&gt;&nbsp; annotation, which may come \n  from the frontier or be added/=\r\n&lt;BR&gt;&nbsp; changed by any module to affect the \n  processing by subsequent&lt;=\r\nBR&gt;&nbsp; modules&lt;BR&gt;&lt;BR&gt;- Things like robots.txt or \n  politeness could be=\r\n handled in a&lt;BR&gt;&nbsp; very-smart &#39;frontier&#39; object, or as \n  one or more =\r\n&#39;preprocessors&#39;&lt;BR&gt;&nbsp; which occasionally veto/snooze offered \n  URIs, p=\r\nushing them&lt;BR&gt;&nbsp; back to the frontier for later \n  processing&lt;BR&gt;&lt;BR&gt;O=\r\npen questions:&lt;BR&gt;&lt;BR&gt;- In this outline, the frontier \n  object does a lot:=\r\n it&#39;s the&lt;BR&gt;&nbsp; URI-seen database, the URI-fetched \n  database, the &lt;BR=\r\n&gt;&nbsp; URI-prioritization policy, etc. etc. Could/should it \n  be&lt;BR&gt;&nbsp=\r\n; further decomposed?&lt;BR&gt;&lt;BR&gt;- Where do DNS lookups take place, and \n  how =\r\nmuch of an audit&lt;BR&gt;&nbsp; trail is generated? One possibility is that \n  t=\r\nhere is a &lt;BR&gt;&nbsp; &quot;DNS frontier&quot; just like the URI frontier. A \n  Prepro=\r\ncessor&lt;BR&gt;&nbsp; module only crawls a URI if its domain name has \n  already=\r\n&lt;BR&gt;&nbsp; been (recently) resolved; if not, it starts a DNS \n  lookup,&lt;BR&gt;=\r\n&nbsp; and &quot;snoozes&quot; the URI for enough time that the name \n  will&lt;BR&gt;&nbsp=\r\n; probably have resolved by the time the URI again is \n  considered.&lt;BR&gt;&lt;BR=\r\n&gt;Reactions?&lt;BR&gt;&lt;BR&gt;- Gordon&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;To \n  unsubscribe from =\r\nthis group, send an email \n  to:&lt;BR&gt;archive-crawler-unsubscribe@yahoogroups=\r\n.com&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;Your \n  use of Yahoo! Groups is subject to the=\r\n &lt;A \n  href=3D&quot;http://docs.yahoo.com/info/terms/&quot;&gt;Yahoo! Terms of Service&lt;/=\r\nA&gt;.&lt;/TT&gt; \n&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_2EE9_01C2D2EC.E4CADC90--\r\n\n"}}