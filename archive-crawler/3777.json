{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":90724651,"authorName":"John Lekashman","from":"John Lekashman &lt;lekash@...&gt;","profile":"lekash","replyTo":"LIST","senderId":"bkpuIK97eQZsStCgfmOOMAT31uvwGZqfSuBFdOryJkWwMy5Zjq5vjySXdxUqzOi6uHETcu0rktVRaI38za_vS1XUkW2R2yF4h0w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] Re: Help! &quot;No space left on device&quot; left my crawl unusable","postDate":"1170543966","msgId":3777,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1QzUxNTVFLjEwNTA1MDZAYmF5YXJlYS5uZXQ+","inReplyToHeader":"PDIwMDcwMjAzMjAxMDM4LkdBMjIwODZAZHV2ZWwuaXIuaWl0LmVkdT4=","referencesHeader":"PDIwMDcwMjAzMTgyMTU2LkdBMTI4MDlAZHV2ZWwuaXIuaWl0LmVkdT4gPDIwMDcwMjAzMjAxMDM4LkdBMjIwODZAZHV2ZWwuaXIuaWl0LmVkdT4="},"prevInTopic":3776,"nextInTopic":4219,"prevInTime":3776,"nextInTime":3778,"topicId":3774,"numMessagesInTopic":6,"msgSnippet":"That s a good idea. Don t run out of disk space. (Said the Seagate stockholder.  Ok, not anymore - I sold it during the Veritas stock flip.) Point still holds.","rawEmail":"Return-Path: &lt;lekash@...&gt;\r\nX-Sender: lekash@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 80113 invoked from network); 3 Feb 2007 23:06:11 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m44.grp.scd.yahoo.com with QMQP; 3 Feb 2007 23:06:11 -0000\r\nReceived: from unknown (HELO postman.bayarea.net) (209.128.87.230)\n  by mta6.grp.scd.yahoo.com with SMTP; 3 Feb 2007 23:06:11 -0000\r\nReceived: from [192.168.0.104] (209-128-93-121.bayarea.net [209.128.93.121])\n\t(authenticated bits=0)\n\tby postman.bayarea.net (8.12.9/8.12.9) with ESMTP id l13N66aa052755\n\tfor &lt;archive-crawler@yahoogroups.com&gt;; Sat, 3 Feb 2007 15:06:10 -0800 (PST)\n\t(envelope-from lekash@...)\r\nMessage-ID: &lt;45C5155E.1050506@...&gt;\r\nDate: Sat, 03 Feb 2007 15:06:06 -0800\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.12) Gecko/20050915\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;20070203182156.GA12809@...&gt; &lt;20070203201038.GA22086@...&gt;\r\nIn-Reply-To: &lt;20070203201038.GA22086@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: John Lekashman &lt;lekash@...&gt;\r\nSubject: Re: [archive-crawler] Re: Help! &quot;No space left on device&quot; left my\n crawl unusable\r\nX-Yahoo-Group-Post: member; u=90724651; y=jYgvzx4tEZLE9I7dCBLLcFUsCcbjyFk-mV5v7Sxr2aHC\r\nX-Yahoo-Profile: lekash\r\n\r\nThat&#39;s a good idea.\nDon&#39;t run out of disk space.\n(Said the Seagate stockholder.  Ok, not anymore - I sold it during the \nVeritas stock flip.)\nPoint still holds.  Disk costs nothing, basically.  Its\nmore painful installing the hardware than buying it now.\n\nIt is somewhat problematic to cover every single possible such\nerror, and still run at a reasonable performance.\n\n50 minutes is a short, lucky time.\n\nI&#39;ve had 1.8 fall down and not get up on resource problems,\nthough usually cause it gets confused and decides to run\nout of memory.  Only once on disk space, when I hacked up a\nquick crawl on some machine, and didn&#39;t watch it for a few days.\n\nJohn\n\nEric wrote:\n\n&gt; Ah, I just had to wait for all 10 timeouts to happen. Then I could\n&gt; pause and checkpoint just fine and now it&#39;s back to running as normal.\n&gt; However, I do have five zero-length arc.gz.open files now with\n&gt; sequence numbers preceeding those of the latest ones it is\n&gt; writing...it wouldn&#39;t have truncated those, would it? Seems like it\n&gt; shouldn&#39;t have let me try to checkpoint in that state before. And it\n&gt; stinks to have to wait 50 minutes for all these timeouts just to\n&gt; recover from a full disk.\n&gt;\n&gt; thanks,\n&gt; eric\n&gt;\n&gt; On Sat, Feb 03, 2007 at 12:21:56PM -0600, Eric wrote:\n&gt; &gt; I just had a crawl using the latest heritrix run out of disk space and\n&gt; &gt; it is now in an unusable state. This is surprising me as I&#39;ve had\n&gt; &gt; crawls with 1.8 run out but they just waited for free space and\n&gt; &gt; carried on when there was some. My crawl is now stuck saying all\n&gt; &gt; threads are active but producing alerts such as the following, just\n&gt; &gt; counting up the retries and doing nothing:\n&gt; &gt;\n&gt; &gt; 02/03/2007 17:05:42 +0000 WARNING org.archive.io.WriterPool \n&gt; borrowFile Timeout waiting for idle object: Retry #0 of max of 10: \n&gt; NSEE Pool State: Active 5 of max 5, idle 0, time 300066ms of max 300000ms\n&gt; &gt;\n&gt; &gt; Not sure what got it into this seemingly leaked-WriterPool-state, as\n&gt; &gt; there where a few types of IOExceptions (see below). But now I don&#39;t\n&gt; &gt; really know what to do because checkpoints are failing too. It takes\n&gt; &gt; a long time to pause it, and then I get the following error. It\n&gt; &gt; appears it&#39;s failing to write out the HttpRecorderGetMethod from\n&gt; &gt; FetchHTTP (that&#39;s what javap tells me FetchHTTP$2 is) which is somehow\n&gt; &gt; stuck in the AList of a CandidateURI that is in a WorkQueue (maybe its\n&gt; &gt; peekItem member?) on the WorkQueueFrontier.inProcessQueues. Searching\n&gt; &gt; the code, I have no idea how the HttpRecorderGetMethod is getting put\n&gt; &gt; in this AList, but obviously it shouldn&#39;t be there if we&#39;re going to\n&gt; &gt; serialize that list.\n&gt; &gt;\n&gt; &gt; Any ideas? It&#39;s looking to me like I&#39;ll need to terminate the crawl\n&gt; &gt; and recover it from the recover.gz log. Are those cumulative or not?\n&gt; &gt; i.e. I actually have recover.gz.00001, 00002, etc. Do I just use the\n&gt; &gt; latest one to recover or do I need to concatenate them or something?\n&gt; &gt;\n&gt; &gt; Thanks,\n&gt; &gt; eric\n&gt; &gt;\n&gt; &gt; 02/03/2007 18:04:18 +0000 WARNING \n&gt; org.archive.crawler.framework.Checkpointer checkpointFailed Checkpoint \n&gt; failed\n&gt; &gt; java.io.NotSerializableException: \n&gt; org.archive.crawler.fetcher.FetchHTTP$2\n&gt; &gt; at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1081)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:302)\n&gt; &gt; at java.util.Hashtable.writeObject(Hashtable.java:813)\n&gt; &gt; at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)\n&gt; &gt; at \n&gt; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n&gt; &gt; at java.lang.reflect.Method.invoke(Method.java:585)\n&gt; &gt; at \n&gt; java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:917)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1339)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1375)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1347)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:302)\n&gt; &gt; at \n&gt; org.archive.crawler.datamodel.CandidateURI.writeObject(CandidateURI.java:578)\n&gt; &gt; at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)\n&gt; &gt; at \n&gt; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n&gt; &gt; at java.lang.reflect.Method.invoke(Method.java:585)\n&gt; &gt; at \n&gt; java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:917)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1339)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1375)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1347)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:302)\n&gt; &gt; at \n&gt; org.apache.commons.collections.bag.AbstractMapBag.doWriteObject(AbstractMapBag.java:493)\n&gt; &gt; at \n&gt; org.apache.commons.collections.bag.HashBag.writeObject(HashBag.java:72)\n&gt; &gt; at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n&gt; &gt; at \n&gt; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n&gt; &gt; at \n&gt; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n&gt; &gt; at java.lang.reflect.Method.invoke(Method.java:585)\n&gt; &gt; at \n&gt; java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:917)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1339)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1375)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1347)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1375)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1347)\n&gt; &gt; at \n&gt; java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1290)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1079)\n&gt; &gt; at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:302)\n&gt; &gt; at \n&gt; org.archive.crawler.util.CheckpointUtils.writeObjectToFile(CheckpointUtils.java:90)\n&gt; &gt; at \n&gt; org.archive.crawler.util.CheckpointUtils.writeObjectToFile(CheckpointUtils.java:79)\n&gt; &gt; at \n&gt; org.archive.crawler.frontier.BdbFrontier.crawlCheckpoint(BdbFrontier.java:338)\n&gt; &gt; at \n&gt; org.archive.crawler.framework.CrawlController.sendCheckpointEvent(CrawlController.java:994)\n&gt; &gt; at \n&gt; org.archive.crawler.framework.CrawlController.checkpoint(CrawlController.java:1176)\n&gt; &gt; at \n&gt; org.archive.crawler.framework.Checkpointer$CheckpointingThread.run(Checkpointer.java:202)\n&gt; &gt;\n&gt; &gt; java.io.IOException: No space left on device\n&gt; &gt; at java.io.FileOutputStream.writeBytes(Native Method)\n&gt; &gt; at java.io.FileOutputStream.write(FileOutputStream.java:260)\n&gt; &gt; at it.unimi.dsi.fastutil.io.FastBufferedOutputStream.flush(FastBufferedO\n&gt; &gt; utputStream.java:124)\n&gt; &gt; at org.archive.io.WriterPoolMember.getPosition(WriterPoolMember.java:391\n&gt; &gt; )\n&gt; &gt; at org.archive.crawler.writer.ARCWriterProcessor.write(ARCWriterProcesso\n&gt; &gt; r.java:175)\n&gt; &gt; at org.archive.crawler.writer.ARCWriterProcessor.innerProcess(ARCWriterP\n&gt; &gt; rocessor.java:149)\n&gt; &gt; at org.archive.crawler.framework.Processor.process(Processor.java:106)\n&gt; &gt; at org.archive.crawler.framework.ToeThread.processCrawlUri(ToeThread.jav\n&gt; &gt; a:302)\n&gt; &gt; at org.archive.crawler.framework.ToeThread.run(ToeThread.java:151)\n&gt; &gt;\n&gt; &gt; java.io.IOException: No space left on device\n&gt; &gt; at java.io.FileOutputStream.writeBytes(Native Method)\n&gt; &gt; at java.io.FileOutputStream.write(FileOutputStream.java:260)\n&gt; &gt; at org.archive.io.RecyclingFastBufferedOutputStream.close(RecyclingFastB\n&gt; &gt; ufferedOutputStream.java:137)\n&gt; &gt; at org.archive.io.RecordingOutputStream.closeDiskStream(RecordingOutputS\n&gt; &gt; tream.java:320)\n&gt; &gt; at org.archive.io.RecordingOutputStream.closeRecorder(RecordingOutputStr\n&gt; &gt; eam.java:327)\n&gt; &gt; at org.archive.io.RecordingOutputStream.close(RecordingOutputStream.java\n&gt; &gt; :314)\n&gt; &gt; at org.archive.io.RecordingInputStream.close(RecordingInputStream.java:1\n&gt; &gt; 46)\n&gt; &gt; at org.archive.util.HttpRecorder.close(HttpRecorder.java:176)\n&gt; &gt; at org.archive.crawler.fetcher.FetchHTTP.cleanup(FetchHTTP.java:652)\n&gt; &gt; at org.archive.crawler.fetcher.FetchHTTP.innerProcess(FetchHTTP.java:507\n&gt; &gt; )\n&gt; &gt; at org.archive.crawler.framework.Processor.process(Processor.java:106)\n&gt; &gt; at org.archive.crawler.framework.ToeThread.processCrawlUri(ToeThread.jav\n&gt; &gt; a:302)\n&gt; &gt; at org.archive.crawler.framework.ToeThread.run(ToeThread.java:151)\n&gt; &gt;\n&gt; &gt; --\n&gt; &gt; http://ir.iit.edu/~ej &lt;http://ir.iit.edu/%7Eej&gt;\n&gt;\n&gt; -- \n&gt; http://ir.iit.edu/~ej &lt;http://ir.iit.edu/%7Eej&gt;\n&gt;\n&gt;  \n\n\n"}}