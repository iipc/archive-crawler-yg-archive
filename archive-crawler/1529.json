{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":168599281,"authorName":"stack","from":"stack &lt;stack@...&gt;","profile":"stackarchiveorg","replyTo":"LIST","senderId":"tlSYPJJIAY1lCgfEWcMrmCzJWUcrNyylLagYiPhx_195Ryt-iDJyCktPfPP4TSjs-Ll5PAhFlWCMx9gU_IRQFg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [archive-crawler] a filter proposal","postDate":"1108059618","msgId":1529,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQyMEJBNUUyLjQwOTA0MDJAYXJjaGl2ZS5vcmc+","inReplyToHeader":"PDYuMS4yLjAuMC4yMDA1MDIwNzExNDAwNy4wNDM0MjE0OEAyMDYuMTYzLjEwMy40Pg==","referencesHeader":"PDQyMDc5QTY0LjIwNjAyMDlAYXJjaGl2ZS5vcmc+IDwwNjc4REIxOTY4RUFDNzQwOUNDM0QwQUI3QTExQjg0QTA2RUM1N0Bza2FyZnVyLmJvay5sb2NhbD4gPDYuMS4yLjAuMC4yMDA1MDIwNzExNDAwNy4wNDM0MjE0OEAyMDYuMTYzLjEwMy40Pg=="},"prevInTopic":1526,"nextInTopic":1534,"prevInTime":1528,"nextInTime":1530,"topicId":1452,"numMessagesInTopic":24,"msgSnippet":"Pardon the tardy reply to your considered proposal (It took a while for us all at the archive -- Dan, Igor, Gordon and myself -- to get together so we could","rawEmail":"Return-Path: &lt;stack@...&gt;\r\nX-Sender: stack@...\r\nX-Apparently-To: archive-crawler@yahoogroups.com\r\nReceived: (qmail 27761 invoked from network); 10 Feb 2005 18:28:51 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m10.grp.scd.yahoo.com with QMQP; 10 Feb 2005 18:28:51 -0000\r\nReceived: from unknown (HELO ia00524.archive.org) (207.241.224.172)\n  by mta6.grp.scd.yahoo.com with SMTP; 10 Feb 2005 18:28:51 -0000\r\nReceived: (qmail 14330 invoked by uid 100); 10 Feb 2005 18:12:40 -0000\r\nReceived: from debord.archive.org (HELO ?207.241.238.140?) (stack@...@207.241.238.140)\n  by mail-dev.archive.org with SMTP; 10 Feb 2005 18:12:40 -0000\r\nMessage-ID: &lt;420BA5E2.4090402@...&gt;\r\nDate: Thu, 10 Feb 2005 10:20:18 -0800\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.3) Gecko/20041007 Debian/1.7.3-5\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: archive-crawler@yahoogroups.com\r\nReferences: &lt;42079A64.2060209@...&gt; &lt;0678DB1968EAC7409CC3D0AB7A11B84A06EC57@...&gt; &lt;6.1.2.0.0.20050207114007.04342148@206.163.103.4&gt;\r\nIn-Reply-To: &lt;6.1.2.0.0.20050207114007.04342148@206.163.103.4&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Spam-DCC: : \r\nX-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on ia00524.archive.org\r\nX-Spam-Level: \r\nX-Spam-Status: No, hits=0.7 required=6.5 tests=AWL autolearn=no version=2.63\r\nX-eGroups-Remote-IP: 207.241.224.172\r\nFrom: stack &lt;stack@...&gt;\r\nSubject: Re: [archive-crawler] a filter proposal\r\nX-Yahoo-Group-Post: member; u=168599281\r\nX-Yahoo-Profile: stackarchiveorg\r\n\r\nPardon the tardy reply to your considered proposal (It took a while for \nus all at the archive -- Dan, Igor, Gordon and myself -- to get together \nso we could pow wow over its content).\n\nYes, scoping and filters are the messiest part of Heritrix and they need \nfixing [See \nhttp://crawler.archive.org/articles/user_manual.html#scopeproblems].\n\nPondering your filter definition change, particularly how it would apply \nto scoping, we found ourselves starting to rename filters to better \nclarify their actions -- this&#39;d be a good thing -- having to reverse \ntheir operation in a few cases so they&#39;d fit with your proposal.  But we \nfound that the changes quickly started to mount in number.  At a certain \nstage -- considering that any change to filters/scoping will be highly \ndisruptive requiring reformulation of order files -- we called a halt \nand decided that we&#39;d rather just go the whole hog and go for the \nalready cited &#39;NewScopingModel&#39; described in \nhttp://crawler.archive.org/cgi-bin/wiki.pl?NewScopingModel \n&lt;http://crawler.archive.org/cgi-bin/wiki.pl?NewScopingModel.&gt;  The \nthinking here is that its more like a term paper than it is a master \nthesis (smile); that we could get it up and running pretty quickly.  \nWe&#39;ve bumped up the priority on the scoping change to be the next \nfeature we implement after we address OOME&#39;ing.\n\nIn spite of the above, may we take a look at your patch, whatever its \nstate, so we can see the nature of the changes made implementing your \nproposal?  Maybe its possible to get away with a small number of changes \nafterall.  Send it to me privately if you&#39;d like.\n\n(Lets consider your suggestion that a filter return &#39;true&#39; if \nmisconfigured or disabled separately as part of &#39;[ 1103015 ] If filter \nin main scope disabled heritrix aborts imme...&#39; and &#39;[ 1105025 ] \nPrefetch filter should skip eval if disabled&#39;).\n&lt;&gt;\nYours,\nSt.Ack\n\nP.S.  I fixed the manuals.  Thanks for pointing out the discrepency.\n\n\n\nDave Skinner wrote:\n\n&gt; I normally do broad crawls and use lots of special filters to limit the\n&gt; scope so that heritrix does not just run out of memory and crash....\n&gt;\n&gt; However the internal issue that sometimes a filter normally returns true\n&gt; and sometime false is a problem for me and looking at the code and \n&gt; reading\n&gt; things like the user and developer manual makes me think that I&#39;m not the\n&gt; only person it has bothered.\n&gt;\n&gt; in a recent private email to me someone said\n&gt;\n&gt; &gt;Filters are not our proudest moment.  ..... was to have replaced the way\n&gt; &gt;they work by now.  Here is a writeup that was done on an alternative:\n&gt; &gt;http://crawler.archive.org/cgi-bin/wiki.pl?NewScopingModel.  We just\n&gt; &gt;haven&#39;t gotten around to it.\n&gt;\n&gt; The proposal would be a great thing to have implemented, but it looks \n&gt; to me\n&gt; that it has about as much work in it as some master thesis projects \n&gt; and its\n&gt; going to be hard to get someone to do it.\n&gt;\n&gt; I&#39;d like to propose something that would simplify things in the short \n&gt; term\n&gt; and hopefully make any future changes/testing easier.\n&gt;\n&gt; Let&#39;s change the definition of the result of filter to simply be\n&gt;\n&gt; *true* means to continue *normal processing*.\n&gt;\n&gt; (this compliments the result of the pre-fetch filters)\n&gt;\n&gt; I think everyone likely to read this knows what normal processing \n&gt; means but\n&gt; just to clarify what I think it means, let&#39;s say that normal \n&gt; processing is\n&gt; that a URI progresses step by step thru the chain illustrated in the user\n&gt; manual in section 6.1.3.\n&gt;\n&gt; As an extension of this I&#39;d like say that a filter that has *enabled* set\n&gt; to false or is incompletely configured (for example a regexp filter \n&gt; with no\n&gt; filter string) should normally return true.  (As an example of a current\n&gt; problem related to this, just set enabled in the pathdepth filter\n&gt; configured in the default profile to false.)\n&gt;\n&gt; I was going to suggest this last week and post some sample code but had a\n&gt; machine run out of disk storage while doing a crawl and linux instead of\n&gt; just crashing the job reused the disk space that was being occupied by\n&gt; recently referenced files.  As a result of that problem I had to \n&gt; recover my\n&gt; source and retest everything.\n&gt;\n&gt; As part of that I downloaded the current head and implemented this (so \n&gt; now\n&gt; I have real code).  Right now it is working but I need to review the \n&gt; following.\n&gt;\n&gt; Most filters can use the &quot;return true&quot; if not enabled or configured idea\n&gt; except some filters used in scopes.  They may have a special problem \n&gt; which\n&gt; I&#39;m going to look at later today.\n&gt;\n&gt; The following formula is in the user manual\n&gt;    ( ( focusFilter.accepts(u)\n&gt;          || transitiveFilter.accepts(u) )\n&gt;        && exclusionFilter.accepts(u) == false )\n&gt;\n&gt; The accurate version of it is in the developer manual\n&gt;\n&gt; protected final boolean innerAccepts(Object o) {\n&gt;      return ((isSeed(o) || focusAccepts(o)) || \n&gt; additionalFocusAccepts(o) ||\n&gt;              transitiveAccepts(o)) && !excludeAccepts(o);\n&gt;\n&gt; the potential problem is in the focusAccepts and \n&gt; additionalFocusAccepts calls\n&gt;\n&gt; btw, in my code I&#39;ve changed this equation to be\n&gt;\n&gt;    return (((isSeed(o) || focusAccepts(o)) || additionalFocusAccepts(o) ||\n&gt;              transitiveAccepts(o)) && excludeAccepts(o);\n&gt;\n&gt; I&#39;m not too worried if the focusAccepts have to remain special cases\n&gt; because end users are not too likely to be changing them.\n&gt;\n&gt; the need for the &quot;OR&quot; filter has vanished.\n&gt;\n&gt; here is the diff between the current profile in head and the proposed \n&gt; new one\n&gt;\n&gt; 7,43c29,38\n&gt; &lt;       &lt;newObject name=&quot;exclude-filter&quot;\n&gt; class=&quot;org.archive.crawler.filter.OrFilter&quot;&gt;\n&gt; &lt;         &lt;boolean name=&quot;enabled&quot;&gt;true&lt;/boolean&gt;\n&gt; &lt;         &lt;boolean name=&quot;if-matches-return&quot;&gt;true&lt;/boolean&gt;\n&gt; &lt;         &lt;map name=&quot;filters&quot;&gt;\n&gt; &lt;             &lt;newObject name=&quot;pathdepth&quot;\n&gt; &lt;                     class=&quot;org.archive.crawler.filter.PathDepthFilter&quot;&gt;\n&gt; &lt;                 &lt;boolean name=&quot;enabled&quot;&gt;true&lt;/boolean&gt;\n&gt; &lt;                 &lt;integer name=&quot;max-path-depth&quot;&gt;20&lt;/integer&gt;\n&gt; &lt;                 &lt;boolean \n&gt; name=&quot;path-less-or-equal-return&quot;&gt;false&lt;/boolean&gt;\n&gt; &lt;             &lt;/newObject&gt;\n&gt; &lt;             &lt;newObject name=&quot;pathologicalpath&quot;\n&gt; &lt;\n&gt; class=&quot;org.archive.crawler.filter.PathologicalPathFilter&quot;&gt;\n&gt; &lt;                 &lt;boolean name=&quot;enabled&quot;&gt;true&lt;/boolean&gt;\n&gt; &lt;                 &lt;integer name=&quot;repetitions&quot;&gt;3&lt;/integer&gt;\n&gt; &lt;             &lt;/newObject&gt;\n&gt; &lt;         &lt;/map&gt;\n&gt; &lt;       &lt;/newObject&gt;\n&gt; ---\n&gt; &gt;       &lt;map name=&quot;exclude-filters&quot;&gt;\n&gt; &gt;         &lt;newObject name=&quot;pathdepth&quot;\n&gt; class=&quot;org.archive.crawler.filter.PathDepthFilter&quot;&gt;\n&gt; &gt;           &lt;boolean name=&quot;enabled&quot;&gt;true&lt;/boolean&gt;\n&gt; &gt;           &lt;integer name=&quot;max-path-depth&quot;&gt;20&lt;/integer&gt;\n&gt; &gt;         &lt;/newObject&gt;\n&gt; &gt;         &lt;newObject name=&quot;pathological&quot;\n&gt; class=&quot;org.archive.crawler.filter.PathologicalPathFilter&quot;&gt;\n&gt; &gt;           &lt;boolean name=&quot;enabled&quot;&gt;true&lt;/boolean&gt;\n&gt; &gt;           &lt;integer name=&quot;repetitions&quot;&gt;3&lt;/integer&gt;\n&gt; &gt;         &lt;/newObject&gt;\n&gt; &gt;       &lt;/map&gt;\n&gt;\n&gt; I&#39;d post code or diff&#39;s but there is just too much to post all of it and\n&gt; until there is some discussion about it I would not know what to use for\n&gt; examples...  and right now some of it looks hacked (I did not delete the\n&gt; previous code, I usually just commented it out and its full of print\n&gt; statements), I need to clean it up.\n&gt;\n&gt; I&#39;m serious enough about this that if someone is using special filters \n&gt; and\n&gt; does not have a programmer available to change or test them, I&#39;ll do \n&gt; it for\n&gt; them.\n&gt;\n&gt;\n&gt; Dave Skinner   dave at solid dot net\n&gt;     High Performance Programming---assembly (lots of them), C, java, perl\n&gt;     Database and Non-trivial web site implementations\n&gt;     Real-time and embedded systems are my specialty\n&gt;\n&gt;\n&gt;\n&gt; *Yahoo! Groups Sponsor*\n&gt; ADVERTISEMENT\n&gt;\n&gt;\n&gt; ------------------------------------------------------------------------\n&gt; *Yahoo! Groups Links*\n&gt;\n&gt;     * To visit your group on the web, go to:\n&gt;       http://groups.yahoo.com/group/archive-crawler/\n&gt;        \n&gt;     * To unsubscribe from this group, send an email to:\n&gt;       archive-crawler-unsubscribe@yahoogroups.com\n&gt;       &lt;mailto:archive-crawler-unsubscribe@yahoogroups.com?subject=Unsubscribe&gt;\n&gt;        \n&gt;     * Your use of Yahoo! Groups is subject to the Yahoo! Terms of\n&gt;       Service &lt;http://docs.yahoo.com/info/terms/&gt;.\n&gt;\n&gt;\n\n\n"}}